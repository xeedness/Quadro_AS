
motor_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000044d4  00080000  00080000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000844d4  000844d4  000144d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000ae8  20070000  000844dc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000108  20070ae8  00084fc4  00020ae8  2**2
                  ALLOC
  4 .stack        00002000  20070bf0  000850cc  00020ae8  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020ae8  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020b11  2**0
                  CONTENTS, READONLY
  7 .debug_info   00011dae  00000000  00000000  00020b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002960  00000000  00000000  00032918  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003798  00000000  00000000  00035278  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000948  00000000  00000000  00038a10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000898  00000000  00000000  00039358  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000176b5  00000000  00000000  00039bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000cc9b  00000000  00000000  000512a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000647ab  00000000  00000000  0005df40  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000021c8  00000000  00000000  000c26ec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	f0 2b 07 20 7d 08 08 00 79 08 08 00 79 08 08 00     .+. }...y...y...
   80010:	79 08 08 00 79 08 08 00 79 08 08 00 00 00 00 00     y...y...y.......
	...
   8002c:	79 08 08 00 79 08 08 00 00 00 00 00 79 08 08 00     y...y.......y...
   8003c:	79 08 08 00 79 08 08 00 79 08 08 00 79 08 08 00     y...y...y...y...
   8004c:	79 08 08 00 79 08 08 00 79 08 08 00 79 08 08 00     y...y...y...y...
   8005c:	79 08 08 00 79 08 08 00 79 08 08 00 00 00 00 00     y...y...y.......
   8006c:	21 07 08 00 35 07 08 00 49 07 08 00 5d 07 08 00     !...5...I...]...
	...
   80084:	79 08 08 00 79 08 08 00 79 08 08 00 79 08 08 00     y...y...y...y...
   80094:	79 08 08 00 79 08 08 00 79 08 08 00 79 08 08 00     y...y...y...y...
   800a4:	00 00 00 00 79 08 08 00 79 08 08 00 79 08 08 00     ....y...y...y...
   800b4:	79 08 08 00 79 08 08 00 79 08 08 00 79 08 08 00     y...y...y...y...
   800c4:	79 08 08 00 79 08 08 00 79 08 08 00 79 08 08 00     y...y...y...y...
   800d4:	79 08 08 00 79 08 08 00 79 08 08 00 79 08 08 00     y...y...y...y...
   800e4:	79 08 08 00 79 08 08 00 79 08 08 00 79 08 08 00     y...y...y...y...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20070ae8 	.word	0x20070ae8
   80110:	00000000 	.word	0x00000000
   80114:	000844dc 	.word	0x000844dc

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	000844dc 	.word	0x000844dc
   80154:	20070aec 	.word	0x20070aec
   80158:	000844dc 	.word	0x000844dc
   8015c:	00000000 	.word	0x00000000

00080160 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   80160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   80164:	b980      	cbnz	r0, 80188 <_read+0x28>
   80166:	460c      	mov	r4, r1
   80168:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
   8016a:	2a00      	cmp	r2, #0
   8016c:	dd0f      	ble.n	8018e <_read+0x2e>
   8016e:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
   80170:	4e08      	ldr	r6, [pc, #32]	; (80194 <_read+0x34>)
   80172:	4d09      	ldr	r5, [pc, #36]	; (80198 <_read+0x38>)
   80174:	6830      	ldr	r0, [r6, #0]
   80176:	4621      	mov	r1, r4
   80178:	682b      	ldr	r3, [r5, #0]
   8017a:	4798      	blx	r3
		ptr++;
   8017c:	3401      	adds	r4, #1
	for (; len > 0; --len) {
   8017e:	42bc      	cmp	r4, r7
   80180:	d1f8      	bne.n	80174 <_read+0x14>
		nChars++;
	}
	return nChars;
}
   80182:	4640      	mov	r0, r8
   80184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   80188:	f04f 38ff 	mov.w	r8, #4294967295
   8018c:	e7f9      	b.n	80182 <_read+0x22>
	for (; len > 0; --len) {
   8018e:	4680      	mov	r8, r0
   80190:	e7f7      	b.n	80182 <_read+0x22>
   80192:	bf00      	nop
   80194:	20070bb4 	.word	0x20070bb4
   80198:	20070bac 	.word	0x20070bac

0008019c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   8019c:	6943      	ldr	r3, [r0, #20]
   8019e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   801a2:	bf1d      	ittte	ne
   801a4:	f3c1 0108 	ubfxne	r1, r1, #0, #9
   801a8:	61c1      	strne	r1, [r0, #28]
	return 0;
   801aa:	2000      	movne	r0, #0
		return 1;
   801ac:	2001      	moveq	r0, #1
}
   801ae:	4770      	bx	lr

000801b0 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   801b0:	6943      	ldr	r3, [r0, #20]
   801b2:	f013 0f01 	tst.w	r3, #1
   801b6:	d005      	beq.n	801c4 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   801b8:	6983      	ldr	r3, [r0, #24]
   801ba:	f3c3 0308 	ubfx	r3, r3, #0, #9
   801be:	600b      	str	r3, [r1, #0]

	return 0;
   801c0:	2000      	movs	r0, #0
   801c2:	4770      	bx	lr
		return 1;
   801c4:	2001      	movs	r0, #1
}
   801c6:	4770      	bx	lr

000801c8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   801c8:	3801      	subs	r0, #1
   801ca:	2802      	cmp	r0, #2
   801cc:	d815      	bhi.n	801fa <_write+0x32>
{
   801ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   801d2:	460e      	mov	r6, r1
   801d4:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
   801d6:	b19a      	cbz	r2, 80200 <_write+0x38>
   801d8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
   801da:	f8df 8038 	ldr.w	r8, [pc, #56]	; 80214 <_write+0x4c>
   801de:	4f0c      	ldr	r7, [pc, #48]	; (80210 <_write+0x48>)
   801e0:	f8d8 0000 	ldr.w	r0, [r8]
   801e4:	f815 1b01 	ldrb.w	r1, [r5], #1
   801e8:	683b      	ldr	r3, [r7, #0]
   801ea:	4798      	blx	r3
   801ec:	2800      	cmp	r0, #0
   801ee:	db0a      	blt.n	80206 <_write+0x3e>
   801f0:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
   801f2:	3c01      	subs	r4, #1
   801f4:	d1f4      	bne.n	801e0 <_write+0x18>
   801f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   801fa:	f04f 30ff 	mov.w	r0, #4294967295
   801fe:	4770      	bx	lr
	for (; len != 0; --len) {
   80200:	4610      	mov	r0, r2
   80202:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
   80206:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
   8020a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8020e:	bf00      	nop
   80210:	20070bb0 	.word	0x20070bb0
   80214:	20070bb4 	.word	0x20070bb4

00080218 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   80218:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   8021a:	23ac      	movs	r3, #172	; 0xac
   8021c:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   8021e:	680b      	ldr	r3, [r1, #0]
   80220:	684a      	ldr	r2, [r1, #4]
   80222:	fbb3 f3f2 	udiv	r3, r3, r2
   80226:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   80228:	1e5c      	subs	r4, r3, #1
   8022a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
   8022e:	4294      	cmp	r4, r2
   80230:	d80b      	bhi.n	8024a <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
   80232:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   80234:	688b      	ldr	r3, [r1, #8]
   80236:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   80238:	f240 2302 	movw	r3, #514	; 0x202
   8023c:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   80240:	2350      	movs	r3, #80	; 0x50
   80242:	6003      	str	r3, [r0, #0]

	return 0;
   80244:	2000      	movs	r0, #0
}
   80246:	bc10      	pop	{r4}
   80248:	4770      	bx	lr
		return 1;
   8024a:	2001      	movs	r0, #1
   8024c:	e7fb      	b.n	80246 <uart_init+0x2e>

0008024e <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   8024e:	6943      	ldr	r3, [r0, #20]
   80250:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   80254:	bf1a      	itte	ne
   80256:	61c1      	strne	r1, [r0, #28]
	return 0;
   80258:	2000      	movne	r0, #0
		return 1;
   8025a:	2001      	moveq	r0, #1
}
   8025c:	4770      	bx	lr

0008025e <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   8025e:	6943      	ldr	r3, [r0, #20]
   80260:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   80264:	bf1d      	ittte	ne
   80266:	6983      	ldrne	r3, [r0, #24]
   80268:	700b      	strbne	r3, [r1, #0]
	return 0;
   8026a:	2000      	movne	r0, #0
		return 1;
   8026c:	2001      	moveq	r0, #1
}
   8026e:	4770      	bx	lr

00080270 <writeSpeed>:
void maxThrottle(void) {
	speed.front_left_speed = speed.front_right_speed = speed.rear_left_speed = speed.rear_right_speed = 1;
	writeSpeed();
}

void writeSpeed(void) {
   80270:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint16_t fl = ESC_LOW + (ESC_HIGH-ESC_LOW) * speed.front_left_speed;
	uint16_t fr = ESC_LOW + (ESC_HIGH-ESC_LOW) * speed.front_right_speed;
   80274:	4f17      	ldr	r7, [pc, #92]	; (802d4 <writeSpeed+0x64>)
   80276:	4e18      	ldr	r6, [pc, #96]	; (802d8 <writeSpeed+0x68>)
   80278:	4918      	ldr	r1, [pc, #96]	; (802dc <writeSpeed+0x6c>)
   8027a:	6878      	ldr	r0, [r7, #4]
   8027c:	47b0      	blx	r6
   8027e:	4d18      	ldr	r5, [pc, #96]	; (802e0 <writeSpeed+0x70>)
   80280:	4916      	ldr	r1, [pc, #88]	; (802dc <writeSpeed+0x6c>)
   80282:	47a8      	blx	r5
   80284:	4c17      	ldr	r4, [pc, #92]	; (802e4 <writeSpeed+0x74>)
   80286:	47a0      	blx	r4
   80288:	fa1f fa80 	uxth.w	sl, r0
	uint16_t rl = ESC_LOW + (ESC_HIGH-ESC_LOW) * speed.rear_left_speed;
   8028c:	4913      	ldr	r1, [pc, #76]	; (802dc <writeSpeed+0x6c>)
   8028e:	68b8      	ldr	r0, [r7, #8]
   80290:	47b0      	blx	r6
   80292:	4912      	ldr	r1, [pc, #72]	; (802dc <writeSpeed+0x6c>)
   80294:	47a8      	blx	r5
   80296:	47a0      	blx	r4
   80298:	fa1f f980 	uxth.w	r9, r0
	uint16_t rr = ESC_LOW + (ESC_HIGH-ESC_LOW) * speed.rear_right_speed;
   8029c:	490f      	ldr	r1, [pc, #60]	; (802dc <writeSpeed+0x6c>)
   8029e:	68f8      	ldr	r0, [r7, #12]
   802a0:	47b0      	blx	r6
   802a2:	490e      	ldr	r1, [pc, #56]	; (802dc <writeSpeed+0x6c>)
   802a4:	47a8      	blx	r5
   802a6:	47a0      	blx	r4
   802a8:	fa1f f880 	uxth.w	r8, r0
	uint16_t fl = ESC_LOW + (ESC_HIGH-ESC_LOW) * speed.front_left_speed;
   802ac:	490b      	ldr	r1, [pc, #44]	; (802dc <writeSpeed+0x6c>)
   802ae:	6838      	ldr	r0, [r7, #0]
   802b0:	47b0      	blx	r6
   802b2:	490a      	ldr	r1, [pc, #40]	; (802dc <writeSpeed+0x6c>)
   802b4:	47a8      	blx	r5
   802b6:	47a0      	blx	r4
	
	REG_PWM_CDTYUPD0 = fl;
   802b8:	b280      	uxth	r0, r0
   802ba:	4b0b      	ldr	r3, [pc, #44]	; (802e8 <writeSpeed+0x78>)
   802bc:	6018      	str	r0, [r3, #0]
	REG_PWM_CDTYUPD1 = fr;
   802be:	3320      	adds	r3, #32
   802c0:	f8c3 a000 	str.w	sl, [r3]
	REG_PWM_CDTYUPD2 = rl;
   802c4:	3320      	adds	r3, #32
   802c6:	f8c3 9000 	str.w	r9, [r3]
	REG_PWM_CDTYUPD3 = rr;
   802ca:	3320      	adds	r3, #32
   802cc:	f8c3 8000 	str.w	r8, [r3]
   802d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   802d4:	20070bb8 	.word	0x20070bb8
   802d8:	00080f89 	.word	0x00080f89
   802dc:	447a0000 	.word	0x447a0000
   802e0:	00080d79 	.word	0x00080d79
   802e4:	00081229 	.word	0x00081229
   802e8:	40094208 	.word	0x40094208

000802ec <minThrottle>:
void minThrottle(void) {
   802ec:	b508      	push	{r3, lr}
	speed.front_left_speed = speed.front_right_speed = speed.rear_left_speed = speed.rear_right_speed = 0;
   802ee:	4b04      	ldr	r3, [pc, #16]	; (80300 <minThrottle+0x14>)
   802f0:	2200      	movs	r2, #0
   802f2:	60da      	str	r2, [r3, #12]
   802f4:	609a      	str	r2, [r3, #8]
   802f6:	605a      	str	r2, [r3, #4]
   802f8:	601a      	str	r2, [r3, #0]
	writeSpeed();
   802fa:	4b02      	ldr	r3, [pc, #8]	; (80304 <minThrottle+0x18>)
   802fc:	4798      	blx	r3
   802fe:	bd08      	pop	{r3, pc}
   80300:	20070bb8 	.word	0x20070bb8
   80304:	00080271 	.word	0x00080271

00080308 <setupESC>:
void setupESC(void) {
   80308:	b508      	push	{r3, lr}
	REG_PMC_PCER1 |= PMC_PCER1_PID36;                     // Enable PWM
   8030a:	4a29      	ldr	r2, [pc, #164]	; (803b0 <setupESC+0xa8>)
   8030c:	6813      	ldr	r3, [r2, #0]
   8030e:	f043 0310 	orr.w	r3, r3, #16
   80312:	6013      	str	r3, [r2, #0]
	REG_PIOC_ABSR |= PIO_ABSR_P2;                        // Set PWM pin perhipheral type A or B, in this case B
   80314:	f502 6237 	add.w	r2, r2, #2928	; 0xb70
   80318:	6813      	ldr	r3, [r2, #0]
   8031a:	f043 0304 	orr.w	r3, r3, #4
   8031e:	6013      	str	r3, [r2, #0]
	REG_PIOC_PDR |= PIO_PDR_P2;                          // Set PWM pin to an output
   80320:	4b24      	ldr	r3, [pc, #144]	; (803b4 <setupESC+0xac>)
   80322:	6819      	ldr	r1, [r3, #0]
   80324:	f041 0104 	orr.w	r1, r1, #4
   80328:	6019      	str	r1, [r3, #0]
	REG_PIOC_ABSR |= PIO_ABSR_P4;                        // Set PWM pin perhipheral type A or B, in this case B
   8032a:	6811      	ldr	r1, [r2, #0]
   8032c:	f041 0110 	orr.w	r1, r1, #16
   80330:	6011      	str	r1, [r2, #0]
	REG_PIOC_PDR |= PIO_PDR_P4;                          // Set PWM pin to an output
   80332:	6819      	ldr	r1, [r3, #0]
   80334:	f041 0110 	orr.w	r1, r1, #16
   80338:	6019      	str	r1, [r3, #0]
	REG_PIOC_ABSR |= PIO_ABSR_P6;                        // Set PWM pin perhipheral type A or B, in this case B
   8033a:	6811      	ldr	r1, [r2, #0]
   8033c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
   80340:	6011      	str	r1, [r2, #0]
	REG_PIOC_PDR |= PIO_PDR_P6;                          // Set PWM pin to an output
   80342:	6819      	ldr	r1, [r3, #0]
   80344:	f041 0140 	orr.w	r1, r1, #64	; 0x40
   80348:	6019      	str	r1, [r3, #0]
	REG_PIOC_ABSR |= PIO_ABSR_P8;                        // Set PWM pin perhipheral type A or B, in this case B
   8034a:	6811      	ldr	r1, [r2, #0]
   8034c:	f441 7180 	orr.w	r1, r1, #256	; 0x100
   80350:	6011      	str	r1, [r2, #0]
	REG_PIOC_PDR |= PIO_PDR_P8;                          // Set PWM pin to an output
   80352:	681a      	ldr	r2, [r3, #0]
   80354:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   80358:	601a      	str	r2, [r3, #0]
	REG_PWM_CLK = PWM_CLK_PREA(0) | PWM_CLK_DIVA(42);     // Set the PWM clock rate to 2MHz (84MHz/42)
   8035a:	222a      	movs	r2, #42	; 0x2a
   8035c:	4b16      	ldr	r3, [pc, #88]	; (803b8 <setupESC+0xb0>)
   8035e:	601a      	str	r2, [r3, #0]
	REG_PWM_CMR0 = REG_PWM_CMR1 = REG_PWM_CMR2 = REG_PWM_CMR3 = PWM_CMR_CALG | PWM_CMR_CPRE_CLKA;      // Enable dual slope PWM and set the clock source as CLKA
   80360:	f240 130b 	movw	r3, #267	; 0x10b
   80364:	4a15      	ldr	r2, [pc, #84]	; (803bc <setupESC+0xb4>)
   80366:	6013      	str	r3, [r2, #0]
   80368:	3a20      	subs	r2, #32
   8036a:	6013      	str	r3, [r2, #0]
   8036c:	3a20      	subs	r2, #32
   8036e:	6013      	str	r3, [r2, #0]
   80370:	3a20      	subs	r2, #32
   80372:	6013      	str	r3, [r2, #0]
	REG_PWM_CPRD0 = REG_PWM_CPRD1 = REG_PWM_CPRD2 = REG_PWM_CPRD3 = 20000;                                // Set the PWM frequency 2MHz/(2 * 20000) = 50Hz
   80374:	f644 6320 	movw	r3, #20000	; 0x4e20
   80378:	326c      	adds	r2, #108	; 0x6c
   8037a:	6013      	str	r3, [r2, #0]
   8037c:	3a20      	subs	r2, #32
   8037e:	6013      	str	r3, [r2, #0]
   80380:	3a20      	subs	r2, #32
   80382:	6013      	str	r3, [r2, #0]
   80384:	3a20      	subs	r2, #32
   80386:	6013      	str	r3, [r2, #0]
	REG_PWM_CDTY0 = REG_PWM_CDTY1 = REG_PWM_CDTY2 = REG_PWM_CDTY3 = ESC_LOW;                              // Set the PWM duty cycle to 1500 - centre the servo
   80388:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
   8038c:	3258      	adds	r2, #88	; 0x58
   8038e:	6013      	str	r3, [r2, #0]
   80390:	3a20      	subs	r2, #32
   80392:	6013      	str	r3, [r2, #0]
   80394:	3a20      	subs	r2, #32
   80396:	6013      	str	r3, [r2, #0]
   80398:	3a20      	subs	r2, #32
   8039a:	6013      	str	r3, [r2, #0]
	REG_PWM_ENA = PWM_ENA_CHID0 | PWM_ENA_CHID1 | PWM_ENA_CHID2 | PWM_ENA_CHID3;                          // Enable the PWM channel
   8039c:	220f      	movs	r2, #15
   8039e:	4b08      	ldr	r3, [pc, #32]	; (803c0 <setupESC+0xb8>)
   803a0:	601a      	str	r2, [r3, #0]
	minThrottle();
   803a2:	4b08      	ldr	r3, [pc, #32]	; (803c4 <setupESC+0xbc>)
   803a4:	4798      	blx	r3
	printf("ESC Setup done\n");
   803a6:	4808      	ldr	r0, [pc, #32]	; (803c8 <setupESC+0xc0>)
   803a8:	4b08      	ldr	r3, [pc, #32]	; (803cc <setupESC+0xc4>)
   803aa:	4798      	blx	r3
   803ac:	bd08      	pop	{r3, pc}
   803ae:	bf00      	nop
   803b0:	400e0700 	.word	0x400e0700
   803b4:	400e1204 	.word	0x400e1204
   803b8:	40094000 	.word	0x40094000
   803bc:	40094260 	.word	0x40094260
   803c0:	40094004 	.word	0x40094004
   803c4:	000802ed 	.word	0x000802ed
   803c8:	000842b4 	.word	0x000842b4
   803cc:	000812b9 	.word	0x000812b9

000803d0 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   803d0:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   803d2:	480e      	ldr	r0, [pc, #56]	; (8040c <sysclk_init+0x3c>)
   803d4:	4b0e      	ldr	r3, [pc, #56]	; (80410 <sysclk_init+0x40>)
   803d6:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   803d8:	213e      	movs	r1, #62	; 0x3e
   803da:	2000      	movs	r0, #0
   803dc:	4b0d      	ldr	r3, [pc, #52]	; (80414 <sysclk_init+0x44>)
   803de:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   803e0:	4c0d      	ldr	r4, [pc, #52]	; (80418 <sysclk_init+0x48>)
   803e2:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   803e4:	2800      	cmp	r0, #0
   803e6:	d0fc      	beq.n	803e2 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   803e8:	4b0c      	ldr	r3, [pc, #48]	; (8041c <sysclk_init+0x4c>)
   803ea:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   803ec:	4a0c      	ldr	r2, [pc, #48]	; (80420 <sysclk_init+0x50>)
   803ee:	4b0d      	ldr	r3, [pc, #52]	; (80424 <sysclk_init+0x54>)
   803f0:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   803f2:	4c0d      	ldr	r4, [pc, #52]	; (80428 <sysclk_init+0x58>)
   803f4:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   803f6:	2800      	cmp	r0, #0
   803f8:	d0fc      	beq.n	803f4 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   803fa:	2010      	movs	r0, #16
   803fc:	4b0b      	ldr	r3, [pc, #44]	; (8042c <sysclk_init+0x5c>)
   803fe:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   80400:	4b0b      	ldr	r3, [pc, #44]	; (80430 <sysclk_init+0x60>)
   80402:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80404:	4801      	ldr	r0, [pc, #4]	; (8040c <sysclk_init+0x3c>)
   80406:	4b02      	ldr	r3, [pc, #8]	; (80410 <sysclk_init+0x40>)
   80408:	4798      	blx	r3
   8040a:	bd10      	pop	{r4, pc}
   8040c:	0501bd00 	.word	0x0501bd00
   80410:	200700b1 	.word	0x200700b1
   80414:	000807d5 	.word	0x000807d5
   80418:	00080829 	.word	0x00080829
   8041c:	00080839 	.word	0x00080839
   80420:	200d3f01 	.word	0x200d3f01
   80424:	400e0600 	.word	0x400e0600
   80428:	00080849 	.word	0x00080849
   8042c:	00080771 	.word	0x00080771
   80430:	00080915 	.word	0x00080915

00080434 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80434:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80436:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   8043a:	4b1a      	ldr	r3, [pc, #104]	; (804a4 <board_init+0x70>)
   8043c:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8043e:	200b      	movs	r0, #11
   80440:	4c19      	ldr	r4, [pc, #100]	; (804a8 <board_init+0x74>)
   80442:	47a0      	blx	r4
   80444:	200c      	movs	r0, #12
   80446:	47a0      	blx	r4
   80448:	200d      	movs	r0, #13
   8044a:	47a0      	blx	r4
   8044c:	200e      	movs	r0, #14
   8044e:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80450:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80454:	203b      	movs	r0, #59	; 0x3b
   80456:	4c15      	ldr	r4, [pc, #84]	; (804ac <board_init+0x78>)
   80458:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   8045a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8045e:	2055      	movs	r0, #85	; 0x55
   80460:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   80462:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80466:	2056      	movs	r0, #86	; 0x56
   80468:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   8046a:	4911      	ldr	r1, [pc, #68]	; (804b0 <board_init+0x7c>)
   8046c:	2068      	movs	r0, #104	; 0x68
   8046e:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   80470:	4910      	ldr	r1, [pc, #64]	; (804b4 <board_init+0x80>)
   80472:	205c      	movs	r0, #92	; 0x5c
   80474:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80476:	4a10      	ldr	r2, [pc, #64]	; (804b8 <board_init+0x84>)
   80478:	f44f 7140 	mov.w	r1, #768	; 0x300
   8047c:	480f      	ldr	r0, [pc, #60]	; (804bc <board_init+0x88>)
   8047e:	4b10      	ldr	r3, [pc, #64]	; (804c0 <board_init+0x8c>)
   80480:	4798      	blx	r3
	gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

#ifdef CONF_BOARD_USART_RXD
	/* Configure USART RXD pin */
	gpio_configure_pin(PIN_USART0_RXD_IDX, PIN_USART0_RXD_FLAGS);
   80482:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80486:	200a      	movs	r0, #10
   80488:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_USART_TXD
	/* Configure USART TXD pin */
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
   8048a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8048e:	200b      	movs	r0, #11
   80490:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   80492:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80496:	202b      	movs	r0, #43	; 0x2b
   80498:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   8049a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8049e:	202a      	movs	r0, #42	; 0x2a
   804a0:	47a0      	blx	r4
   804a2:	bd10      	pop	{r4, pc}
   804a4:	400e1a50 	.word	0x400e1a50
   804a8:	00080859 	.word	0x00080859
   804ac:	00080565 	.word	0x00080565
   804b0:	28000079 	.word	0x28000079
   804b4:	28000001 	.word	0x28000001
   804b8:	08000001 	.word	0x08000001
   804bc:	400e0e00 	.word	0x400e0e00
   804c0:	00080635 	.word	0x00080635

000804c4 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   804c4:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   804c6:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   804ca:	d016      	beq.n	804fa <pio_set_peripheral+0x36>
   804cc:	d80b      	bhi.n	804e6 <pio_set_peripheral+0x22>
   804ce:	b149      	cbz	r1, 804e4 <pio_set_peripheral+0x20>
   804d0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   804d4:	d105      	bne.n	804e2 <pio_set_peripheral+0x1e>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   804d6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   804d8:	6f01      	ldr	r1, [r0, #112]	; 0x70
   804da:	400b      	ands	r3, r1
   804dc:	ea23 0302 	bic.w	r3, r3, r2
   804e0:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   804e2:	6042      	str	r2, [r0, #4]
   804e4:	4770      	bx	lr
	switch (ul_type) {
   804e6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   804ea:	d0fb      	beq.n	804e4 <pio_set_peripheral+0x20>
   804ec:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   804f0:	d0f8      	beq.n	804e4 <pio_set_peripheral+0x20>
   804f2:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   804f6:	d1f4      	bne.n	804e2 <pio_set_peripheral+0x1e>
   804f8:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABSR;
   804fa:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   804fc:	4313      	orrs	r3, r2
   804fe:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80500:	e7ef      	b.n	804e2 <pio_set_peripheral+0x1e>

00080502 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80502:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   80504:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80508:	bf14      	ite	ne
   8050a:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8050c:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   8050e:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80512:	bf14      	ite	ne
   80514:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
   80516:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   80518:	f012 0f02 	tst.w	r2, #2
   8051c:	d107      	bne.n	8052e <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
   8051e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80522:	bf18      	it	ne
   80524:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   80528:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   8052a:	6001      	str	r1, [r0, #0]
   8052c:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   8052e:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80532:	e7f9      	b.n	80528 <pio_set_input+0x26>

00080534 <pio_set_output>:
{
   80534:	b410      	push	{r4}
   80536:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
   80538:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   8053a:	b944      	cbnz	r4, 8054e <pio_set_output+0x1a>
		p_pio->PIO_PUDR = ul_mask;
   8053c:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
   8053e:	b143      	cbz	r3, 80552 <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
   80540:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
   80542:	b942      	cbnz	r2, 80556 <pio_set_output+0x22>
		p_pio->PIO_CODR = ul_mask;
   80544:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   80546:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80548:	6001      	str	r1, [r0, #0]
}
   8054a:	bc10      	pop	{r4}
   8054c:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
   8054e:	6641      	str	r1, [r0, #100]	; 0x64
   80550:	e7f5      	b.n	8053e <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
   80552:	6541      	str	r1, [r0, #84]	; 0x54
   80554:	e7f5      	b.n	80542 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
   80556:	6301      	str	r1, [r0, #48]	; 0x30
   80558:	e7f5      	b.n	80546 <pio_set_output+0x12>

0008055a <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   8055a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8055c:	4770      	bx	lr

0008055e <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   8055e:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80560:	4770      	bx	lr
	...

00080564 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80564:	b570      	push	{r4, r5, r6, lr}
   80566:	b082      	sub	sp, #8
   80568:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8056a:	0943      	lsrs	r3, r0, #5
   8056c:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80570:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80574:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
   80576:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
   8057a:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   8057e:	d031      	beq.n	805e4 <pio_configure_pin+0x80>
   80580:	d816      	bhi.n	805b0 <pio_configure_pin+0x4c>
   80582:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   80586:	d01b      	beq.n	805c0 <pio_configure_pin+0x5c>
   80588:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   8058c:	d116      	bne.n	805bc <pio_configure_pin+0x58>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   8058e:	f000 001f 	and.w	r0, r0, #31
   80592:	2601      	movs	r6, #1
   80594:	4086      	lsls	r6, r0
   80596:	4632      	mov	r2, r6
   80598:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8059c:	4620      	mov	r0, r4
   8059e:	4b22      	ldr	r3, [pc, #136]	; (80628 <pio_configure_pin+0xc4>)
   805a0:	4798      	blx	r3
	if (ul_pull_up_enable) {
   805a2:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   805a6:	bf14      	ite	ne
   805a8:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   805aa:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   805ac:	2001      	movs	r0, #1
   805ae:	e017      	b.n	805e0 <pio_configure_pin+0x7c>
	switch (ul_flags & PIO_TYPE_Msk) {
   805b0:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   805b4:	d021      	beq.n	805fa <pio_configure_pin+0x96>
   805b6:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   805ba:	d01e      	beq.n	805fa <pio_configure_pin+0x96>
		return 0;
   805bc:	2000      	movs	r0, #0
   805be:	e00f      	b.n	805e0 <pio_configure_pin+0x7c>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   805c0:	f000 001f 	and.w	r0, r0, #31
   805c4:	2601      	movs	r6, #1
   805c6:	4086      	lsls	r6, r0
   805c8:	4632      	mov	r2, r6
   805ca:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   805ce:	4620      	mov	r0, r4
   805d0:	4b15      	ldr	r3, [pc, #84]	; (80628 <pio_configure_pin+0xc4>)
   805d2:	4798      	blx	r3
	if (ul_pull_up_enable) {
   805d4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   805d8:	bf14      	ite	ne
   805da:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   805dc:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
   805de:	2001      	movs	r0, #1
}
   805e0:	b002      	add	sp, #8
   805e2:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   805e4:	f000 011f 	and.w	r1, r0, #31
   805e8:	2601      	movs	r6, #1
   805ea:	462a      	mov	r2, r5
   805ec:	fa06 f101 	lsl.w	r1, r6, r1
   805f0:	4620      	mov	r0, r4
   805f2:	4b0e      	ldr	r3, [pc, #56]	; (8062c <pio_configure_pin+0xc8>)
   805f4:	4798      	blx	r3
	return 1;
   805f6:	4630      	mov	r0, r6
		break;
   805f8:	e7f2      	b.n	805e0 <pio_configure_pin+0x7c>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   805fa:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   805fe:	f000 011f 	and.w	r1, r0, #31
   80602:	2601      	movs	r6, #1
   80604:	ea05 0306 	and.w	r3, r5, r6
   80608:	9300      	str	r3, [sp, #0]
   8060a:	f3c5 0380 	ubfx	r3, r5, #2, #1
   8060e:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80612:	bf14      	ite	ne
   80614:	2200      	movne	r2, #0
   80616:	2201      	moveq	r2, #1
   80618:	fa06 f101 	lsl.w	r1, r6, r1
   8061c:	4620      	mov	r0, r4
   8061e:	4c04      	ldr	r4, [pc, #16]	; (80630 <pio_configure_pin+0xcc>)
   80620:	47a0      	blx	r4
	return 1;
   80622:	4630      	mov	r0, r6
		break;
   80624:	e7dc      	b.n	805e0 <pio_configure_pin+0x7c>
   80626:	bf00      	nop
   80628:	000804c5 	.word	0x000804c5
   8062c:	00080503 	.word	0x00080503
   80630:	00080535 	.word	0x00080535

00080634 <pio_configure_pin_group>:
{
   80634:	b570      	push	{r4, r5, r6, lr}
   80636:	b082      	sub	sp, #8
   80638:	4605      	mov	r5, r0
   8063a:	460e      	mov	r6, r1
   8063c:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
   8063e:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
   80642:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   80646:	d027      	beq.n	80698 <pio_configure_pin_group+0x64>
   80648:	d811      	bhi.n	8066e <pio_configure_pin_group+0x3a>
   8064a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   8064e:	d016      	beq.n	8067e <pio_configure_pin_group+0x4a>
   80650:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   80654:	d111      	bne.n	8067a <pio_configure_pin_group+0x46>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80656:	460a      	mov	r2, r1
   80658:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8065c:	4b19      	ldr	r3, [pc, #100]	; (806c4 <pio_configure_pin_group+0x90>)
   8065e:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80660:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   80664:	bf14      	ite	ne
   80666:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80668:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   8066a:	2001      	movs	r0, #1
   8066c:	e012      	b.n	80694 <pio_configure_pin_group+0x60>
	switch (ul_flags & PIO_TYPE_Msk) {
   8066e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   80672:	d015      	beq.n	806a0 <pio_configure_pin_group+0x6c>
   80674:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   80678:	d012      	beq.n	806a0 <pio_configure_pin_group+0x6c>
		return 0;
   8067a:	2000      	movs	r0, #0
   8067c:	e00a      	b.n	80694 <pio_configure_pin_group+0x60>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   8067e:	460a      	mov	r2, r1
   80680:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80684:	4b0f      	ldr	r3, [pc, #60]	; (806c4 <pio_configure_pin_group+0x90>)
   80686:	4798      	blx	r3
	if (ul_pull_up_enable) {
   80688:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
   8068c:	bf14      	ite	ne
   8068e:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   80690:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
   80692:	2001      	movs	r0, #1
}
   80694:	b002      	add	sp, #8
   80696:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_input(p_pio, ul_mask, ul_flags);
   80698:	4b0b      	ldr	r3, [pc, #44]	; (806c8 <pio_configure_pin_group+0x94>)
   8069a:	4798      	blx	r3
	return 1;
   8069c:	2001      	movs	r0, #1
		break;
   8069e:	e7f9      	b.n	80694 <pio_configure_pin_group+0x60>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   806a0:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   806a4:	f004 0301 	and.w	r3, r4, #1
   806a8:	9300      	str	r3, [sp, #0]
   806aa:	f3c4 0380 	ubfx	r3, r4, #2, #1
   806ae:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   806b2:	bf14      	ite	ne
   806b4:	2200      	movne	r2, #0
   806b6:	2201      	moveq	r2, #1
   806b8:	4631      	mov	r1, r6
   806ba:	4628      	mov	r0, r5
   806bc:	4c03      	ldr	r4, [pc, #12]	; (806cc <pio_configure_pin_group+0x98>)
   806be:	47a0      	blx	r4
	return 1;
   806c0:	2001      	movs	r0, #1
		break;
   806c2:	e7e7      	b.n	80694 <pio_configure_pin_group+0x60>
   806c4:	000804c5 	.word	0x000804c5
   806c8:	00080503 	.word	0x00080503
   806cc:	00080535 	.word	0x00080535

000806d0 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   806d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   806d4:	4604      	mov	r4, r0
   806d6:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   806d8:	4b0e      	ldr	r3, [pc, #56]	; (80714 <pio_handler_process+0x44>)
   806da:	4798      	blx	r3
   806dc:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   806de:	4620      	mov	r0, r4
   806e0:	4b0d      	ldr	r3, [pc, #52]	; (80718 <pio_handler_process+0x48>)
   806e2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   806e4:	4005      	ands	r5, r0
   806e6:	d013      	beq.n	80710 <pio_handler_process+0x40>
   806e8:	4c0c      	ldr	r4, [pc, #48]	; (8071c <pio_handler_process+0x4c>)
   806ea:	f104 0660 	add.w	r6, r4, #96	; 0x60
   806ee:	e003      	b.n	806f8 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   806f0:	42b4      	cmp	r4, r6
   806f2:	d00d      	beq.n	80710 <pio_handler_process+0x40>
   806f4:	3410      	adds	r4, #16
		while (status != 0) {
   806f6:	b15d      	cbz	r5, 80710 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   806f8:	6820      	ldr	r0, [r4, #0]
   806fa:	4540      	cmp	r0, r8
   806fc:	d1f8      	bne.n	806f0 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   806fe:	6861      	ldr	r1, [r4, #4]
   80700:	4229      	tst	r1, r5
   80702:	d0f5      	beq.n	806f0 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80704:	68e3      	ldr	r3, [r4, #12]
   80706:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80708:	6863      	ldr	r3, [r4, #4]
   8070a:	ea25 0503 	bic.w	r5, r5, r3
   8070e:	e7ef      	b.n	806f0 <pio_handler_process+0x20>
   80710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80714:	0008055b 	.word	0x0008055b
   80718:	0008055f 	.word	0x0008055f
   8071c:	20070b04 	.word	0x20070b04

00080720 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80720:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80722:	210b      	movs	r1, #11
   80724:	4801      	ldr	r0, [pc, #4]	; (8072c <PIOA_Handler+0xc>)
   80726:	4b02      	ldr	r3, [pc, #8]	; (80730 <PIOA_Handler+0x10>)
   80728:	4798      	blx	r3
   8072a:	bd08      	pop	{r3, pc}
   8072c:	400e0e00 	.word	0x400e0e00
   80730:	000806d1 	.word	0x000806d1

00080734 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80734:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80736:	210c      	movs	r1, #12
   80738:	4801      	ldr	r0, [pc, #4]	; (80740 <PIOB_Handler+0xc>)
   8073a:	4b02      	ldr	r3, [pc, #8]	; (80744 <PIOB_Handler+0x10>)
   8073c:	4798      	blx	r3
   8073e:	bd08      	pop	{r3, pc}
   80740:	400e1000 	.word	0x400e1000
   80744:	000806d1 	.word	0x000806d1

00080748 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80748:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   8074a:	210d      	movs	r1, #13
   8074c:	4801      	ldr	r0, [pc, #4]	; (80754 <PIOC_Handler+0xc>)
   8074e:	4b02      	ldr	r3, [pc, #8]	; (80758 <PIOC_Handler+0x10>)
   80750:	4798      	blx	r3
   80752:	bd08      	pop	{r3, pc}
   80754:	400e1200 	.word	0x400e1200
   80758:	000806d1 	.word	0x000806d1

0008075c <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   8075c:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   8075e:	210e      	movs	r1, #14
   80760:	4801      	ldr	r0, [pc, #4]	; (80768 <PIOD_Handler+0xc>)
   80762:	4b02      	ldr	r3, [pc, #8]	; (8076c <PIOD_Handler+0x10>)
   80764:	4798      	blx	r3
   80766:	bd08      	pop	{r3, pc}
   80768:	400e1400 	.word	0x400e1400
   8076c:	000806d1 	.word	0x000806d1

00080770 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80770:	4a17      	ldr	r2, [pc, #92]	; (807d0 <pmc_switch_mck_to_pllack+0x60>)
   80772:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80774:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   80778:	4318      	orrs	r0, r3
   8077a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8077c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8077e:	f013 0f08 	tst.w	r3, #8
   80782:	d10a      	bne.n	8079a <pmc_switch_mck_to_pllack+0x2a>
   80784:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80788:	4911      	ldr	r1, [pc, #68]	; (807d0 <pmc_switch_mck_to_pllack+0x60>)
   8078a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8078c:	f012 0f08 	tst.w	r2, #8
   80790:	d103      	bne.n	8079a <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80792:	3b01      	subs	r3, #1
   80794:	d1f9      	bne.n	8078a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
   80796:	2001      	movs	r0, #1
   80798:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   8079a:	4a0d      	ldr	r2, [pc, #52]	; (807d0 <pmc_switch_mck_to_pllack+0x60>)
   8079c:	6b13      	ldr	r3, [r2, #48]	; 0x30
   8079e:	f023 0303 	bic.w	r3, r3, #3
   807a2:	f043 0302 	orr.w	r3, r3, #2
   807a6:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   807a8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   807aa:	f013 0f08 	tst.w	r3, #8
   807ae:	d10a      	bne.n	807c6 <pmc_switch_mck_to_pllack+0x56>
   807b0:	f44f 6300 	mov.w	r3, #2048	; 0x800
   807b4:	4906      	ldr	r1, [pc, #24]	; (807d0 <pmc_switch_mck_to_pllack+0x60>)
   807b6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   807b8:	f012 0f08 	tst.w	r2, #8
   807bc:	d105      	bne.n	807ca <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   807be:	3b01      	subs	r3, #1
   807c0:	d1f9      	bne.n	807b6 <pmc_switch_mck_to_pllack+0x46>
			return 1;
   807c2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   807c4:	4770      	bx	lr
	return 0;
   807c6:	2000      	movs	r0, #0
   807c8:	4770      	bx	lr
   807ca:	2000      	movs	r0, #0
   807cc:	4770      	bx	lr
   807ce:	bf00      	nop
   807d0:	400e0600 	.word	0x400e0600

000807d4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   807d4:	b9c8      	cbnz	r0, 8080a <pmc_switch_mainck_to_xtal+0x36>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   807d6:	4a11      	ldr	r2, [pc, #68]	; (8081c <pmc_switch_mainck_to_xtal+0x48>)
   807d8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   807da:	0209      	lsls	r1, r1, #8
   807dc:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   807de:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   807e2:	f023 0303 	bic.w	r3, r3, #3
   807e6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   807ea:	f043 0301 	orr.w	r3, r3, #1
   807ee:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   807f0:	6213      	str	r3, [r2, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   807f2:	6e93      	ldr	r3, [r2, #104]	; 0x68
   807f4:	f013 0f01 	tst.w	r3, #1
   807f8:	d0fb      	beq.n	807f2 <pmc_switch_mainck_to_xtal+0x1e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   807fa:	4a08      	ldr	r2, [pc, #32]	; (8081c <pmc_switch_mainck_to_xtal+0x48>)
   807fc:	6a13      	ldr	r3, [r2, #32]
   807fe:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80802:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80806:	6213      	str	r3, [r2, #32]
   80808:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8080a:	4904      	ldr	r1, [pc, #16]	; (8081c <pmc_switch_mainck_to_xtal+0x48>)
   8080c:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   8080e:	4a04      	ldr	r2, [pc, #16]	; (80820 <pmc_switch_mainck_to_xtal+0x4c>)
   80810:	401a      	ands	r2, r3
   80812:	4b04      	ldr	r3, [pc, #16]	; (80824 <pmc_switch_mainck_to_xtal+0x50>)
   80814:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80816:	620b      	str	r3, [r1, #32]
   80818:	4770      	bx	lr
   8081a:	bf00      	nop
   8081c:	400e0600 	.word	0x400e0600
   80820:	fec8fffc 	.word	0xfec8fffc
   80824:	01370002 	.word	0x01370002

00080828 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80828:	4b02      	ldr	r3, [pc, #8]	; (80834 <pmc_osc_is_ready_mainck+0xc>)
   8082a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   8082c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80830:	4770      	bx	lr
   80832:	bf00      	nop
   80834:	400e0600 	.word	0x400e0600

00080838 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80838:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   8083c:	4b01      	ldr	r3, [pc, #4]	; (80844 <pmc_disable_pllack+0xc>)
   8083e:	629a      	str	r2, [r3, #40]	; 0x28
   80840:	4770      	bx	lr
   80842:	bf00      	nop
   80844:	400e0600 	.word	0x400e0600

00080848 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80848:	4b02      	ldr	r3, [pc, #8]	; (80854 <pmc_is_locked_pllack+0xc>)
   8084a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   8084c:	f000 0002 	and.w	r0, r0, #2
   80850:	4770      	bx	lr
   80852:	bf00      	nop
   80854:	400e0600 	.word	0x400e0600

00080858 <pmc_enable_periph_clk>:
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
#if defined(REG_PMC_PCR) && !SAMG55
	uint32_t pcr;
	PMC->PMC_PCR = ul_id & 0x7F;
   80858:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   8085c:	4b05      	ldr	r3, [pc, #20]	; (80874 <pmc_enable_periph_clk+0x1c>)
   8085e:	f8c3 010c 	str.w	r0, [r3, #268]	; 0x10c
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
   80862:	f8d3 210c 	ldr.w	r2, [r3, #268]	; 0x10c
   80866:	f042 2210 	orr.w	r2, r2, #268439552	; 0x10001000
	PMC->PMC_PCR = pcr;
   8086a:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
#endif
	}

	return 0;
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
   8086e:	2000      	movs	r0, #0
   80870:	4770      	bx	lr
   80872:	bf00      	nop
   80874:	400e0600 	.word	0x400e0600

00080878 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80878:	e7fe      	b.n	80878 <Dummy_Handler>
	...

0008087c <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   8087c:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   8087e:	4b1c      	ldr	r3, [pc, #112]	; (808f0 <Reset_Handler+0x74>)
   80880:	4a1c      	ldr	r2, [pc, #112]	; (808f4 <Reset_Handler+0x78>)
   80882:	429a      	cmp	r2, r3
   80884:	d010      	beq.n	808a8 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
   80886:	4b1c      	ldr	r3, [pc, #112]	; (808f8 <Reset_Handler+0x7c>)
   80888:	4a19      	ldr	r2, [pc, #100]	; (808f0 <Reset_Handler+0x74>)
   8088a:	429a      	cmp	r2, r3
   8088c:	d20c      	bcs.n	808a8 <Reset_Handler+0x2c>
   8088e:	3b01      	subs	r3, #1
   80890:	1a9b      	subs	r3, r3, r2
   80892:	f023 0303 	bic.w	r3, r3, #3
   80896:	3304      	adds	r3, #4
   80898:	4413      	add	r3, r2
   8089a:	4916      	ldr	r1, [pc, #88]	; (808f4 <Reset_Handler+0x78>)
			*pDest++ = *pSrc++;
   8089c:	f851 0b04 	ldr.w	r0, [r1], #4
   808a0:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
   808a4:	429a      	cmp	r2, r3
   808a6:	d1f9      	bne.n	8089c <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   808a8:	4b14      	ldr	r3, [pc, #80]	; (808fc <Reset_Handler+0x80>)
   808aa:	4a15      	ldr	r2, [pc, #84]	; (80900 <Reset_Handler+0x84>)
   808ac:	429a      	cmp	r2, r3
   808ae:	d20a      	bcs.n	808c6 <Reset_Handler+0x4a>
   808b0:	3b01      	subs	r3, #1
   808b2:	1a9b      	subs	r3, r3, r2
   808b4:	f023 0303 	bic.w	r3, r3, #3
   808b8:	3304      	adds	r3, #4
   808ba:	4413      	add	r3, r2
		*pDest++ = 0;
   808bc:	2100      	movs	r1, #0
   808be:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
   808c2:	4293      	cmp	r3, r2
   808c4:	d1fb      	bne.n	808be <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   808c6:	4b0f      	ldr	r3, [pc, #60]	; (80904 <Reset_Handler+0x88>)
   808c8:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
   808cc:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   808d0:	490d      	ldr	r1, [pc, #52]	; (80908 <Reset_Handler+0x8c>)
   808d2:	608a      	str	r2, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   808d4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
   808d8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   808dc:	d203      	bcs.n	808e6 <Reset_Handler+0x6a>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   808de:	688b      	ldr	r3, [r1, #8]
   808e0:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   808e4:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   808e6:	4b09      	ldr	r3, [pc, #36]	; (8090c <Reset_Handler+0x90>)
   808e8:	4798      	blx	r3

	/* Branch to main function */
	main();
   808ea:	4b09      	ldr	r3, [pc, #36]	; (80910 <Reset_Handler+0x94>)
   808ec:	4798      	blx	r3
   808ee:	e7fe      	b.n	808ee <Reset_Handler+0x72>
   808f0:	20070000 	.word	0x20070000
   808f4:	000844dc 	.word	0x000844dc
   808f8:	20070ae8 	.word	0x20070ae8
   808fc:	20070bf0 	.word	0x20070bf0
   80900:	20070ae8 	.word	0x20070ae8
   80904:	00080000 	.word	0x00080000
   80908:	e000ed00 	.word	0xe000ed00
   8090c:	00081269 	.word	0x00081269
   80910:	00080d4d 	.word	0x00080d4d

00080914 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80914:	4b3d      	ldr	r3, [pc, #244]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   80916:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80918:	f003 0303 	and.w	r3, r3, #3
   8091c:	2b03      	cmp	r3, #3
   8091e:	d80e      	bhi.n	8093e <SystemCoreClockUpdate+0x2a>
   80920:	e8df f003 	tbb	[pc, r3]
   80924:	38381c02 	.word	0x38381c02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80928:	4b39      	ldr	r3, [pc, #228]	; (80a10 <SystemCoreClockUpdate+0xfc>)
   8092a:	695b      	ldr	r3, [r3, #20]
   8092c:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80930:	bf14      	ite	ne
   80932:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80936:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   8093a:	4b36      	ldr	r3, [pc, #216]	; (80a14 <SystemCoreClockUpdate+0x100>)
   8093c:	601a      	str	r2, [r3, #0]
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   8093e:	4b33      	ldr	r3, [pc, #204]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   80940:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80942:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80946:	2b70      	cmp	r3, #112	; 0x70
   80948:	d057      	beq.n	809fa <SystemCoreClockUpdate+0xe6>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   8094a:	4b30      	ldr	r3, [pc, #192]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   8094c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   8094e:	4931      	ldr	r1, [pc, #196]	; (80a14 <SystemCoreClockUpdate+0x100>)
   80950:	f3c2 1202 	ubfx	r2, r2, #4, #3
   80954:	680b      	ldr	r3, [r1, #0]
   80956:	40d3      	lsrs	r3, r2
   80958:	600b      	str	r3, [r1, #0]
   8095a:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   8095c:	4b2b      	ldr	r3, [pc, #172]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   8095e:	6a1b      	ldr	r3, [r3, #32]
   80960:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80964:	d003      	beq.n	8096e <SystemCoreClockUpdate+0x5a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80966:	4a2c      	ldr	r2, [pc, #176]	; (80a18 <SystemCoreClockUpdate+0x104>)
   80968:	4b2a      	ldr	r3, [pc, #168]	; (80a14 <SystemCoreClockUpdate+0x100>)
   8096a:	601a      	str	r2, [r3, #0]
   8096c:	e7e7      	b.n	8093e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   8096e:	4a2b      	ldr	r2, [pc, #172]	; (80a1c <SystemCoreClockUpdate+0x108>)
   80970:	4b28      	ldr	r3, [pc, #160]	; (80a14 <SystemCoreClockUpdate+0x100>)
   80972:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80974:	4b25      	ldr	r3, [pc, #148]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   80976:	6a1b      	ldr	r3, [r3, #32]
   80978:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8097c:	2b10      	cmp	r3, #16
   8097e:	d005      	beq.n	8098c <SystemCoreClockUpdate+0x78>
   80980:	2b20      	cmp	r3, #32
   80982:	d1dc      	bne.n	8093e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 3U;
   80984:	4a24      	ldr	r2, [pc, #144]	; (80a18 <SystemCoreClockUpdate+0x104>)
   80986:	4b23      	ldr	r3, [pc, #140]	; (80a14 <SystemCoreClockUpdate+0x100>)
   80988:	601a      	str	r2, [r3, #0]
				break;
   8098a:	e7d8      	b.n	8093e <SystemCoreClockUpdate+0x2a>
				SystemCoreClock *= 2U;
   8098c:	4a24      	ldr	r2, [pc, #144]	; (80a20 <SystemCoreClockUpdate+0x10c>)
   8098e:	4b21      	ldr	r3, [pc, #132]	; (80a14 <SystemCoreClockUpdate+0x100>)
   80990:	601a      	str	r2, [r3, #0]
				break;
   80992:	e7d4      	b.n	8093e <SystemCoreClockUpdate+0x2a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80994:	4b1d      	ldr	r3, [pc, #116]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   80996:	6a1b      	ldr	r3, [r3, #32]
   80998:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   8099c:	d00c      	beq.n	809b8 <SystemCoreClockUpdate+0xa4>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   8099e:	4a1e      	ldr	r2, [pc, #120]	; (80a18 <SystemCoreClockUpdate+0x104>)
   809a0:	4b1c      	ldr	r3, [pc, #112]	; (80a14 <SystemCoreClockUpdate+0x100>)
   809a2:	601a      	str	r2, [r3, #0]
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   809a4:	4b19      	ldr	r3, [pc, #100]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   809a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   809a8:	f003 0303 	and.w	r3, r3, #3
   809ac:	2b02      	cmp	r3, #2
   809ae:	d016      	beq.n	809de <SystemCoreClockUpdate+0xca>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   809b0:	4a1c      	ldr	r2, [pc, #112]	; (80a24 <SystemCoreClockUpdate+0x110>)
   809b2:	4b18      	ldr	r3, [pc, #96]	; (80a14 <SystemCoreClockUpdate+0x100>)
   809b4:	601a      	str	r2, [r3, #0]
   809b6:	e7c2      	b.n	8093e <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   809b8:	4a18      	ldr	r2, [pc, #96]	; (80a1c <SystemCoreClockUpdate+0x108>)
   809ba:	4b16      	ldr	r3, [pc, #88]	; (80a14 <SystemCoreClockUpdate+0x100>)
   809bc:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   809be:	4b13      	ldr	r3, [pc, #76]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   809c0:	6a1b      	ldr	r3, [r3, #32]
   809c2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   809c6:	2b10      	cmp	r3, #16
   809c8:	d005      	beq.n	809d6 <SystemCoreClockUpdate+0xc2>
   809ca:	2b20      	cmp	r3, #32
   809cc:	d1ea      	bne.n	809a4 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 3U;
   809ce:	4a12      	ldr	r2, [pc, #72]	; (80a18 <SystemCoreClockUpdate+0x104>)
   809d0:	4b10      	ldr	r3, [pc, #64]	; (80a14 <SystemCoreClockUpdate+0x100>)
   809d2:	601a      	str	r2, [r3, #0]
				break;
   809d4:	e7e6      	b.n	809a4 <SystemCoreClockUpdate+0x90>
				SystemCoreClock *= 2U;
   809d6:	4a12      	ldr	r2, [pc, #72]	; (80a20 <SystemCoreClockUpdate+0x10c>)
   809d8:	4b0e      	ldr	r3, [pc, #56]	; (80a14 <SystemCoreClockUpdate+0x100>)
   809da:	601a      	str	r2, [r3, #0]
				break;
   809dc:	e7e2      	b.n	809a4 <SystemCoreClockUpdate+0x90>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   809de:	4a0b      	ldr	r2, [pc, #44]	; (80a0c <SystemCoreClockUpdate+0xf8>)
   809e0:	6a91      	ldr	r1, [r2, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   809e2:	6a92      	ldr	r2, [r2, #40]	; 0x28
   809e4:	480b      	ldr	r0, [pc, #44]	; (80a14 <SystemCoreClockUpdate+0x100>)
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   809e6:	f3c1 410a 	ubfx	r1, r1, #16, #11
   809ea:	6803      	ldr	r3, [r0, #0]
   809ec:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   809f0:	b2d2      	uxtb	r2, r2
   809f2:	fbb3 f3f2 	udiv	r3, r3, r2
   809f6:	6003      	str	r3, [r0, #0]
   809f8:	e7a1      	b.n	8093e <SystemCoreClockUpdate+0x2a>
		SystemCoreClock /= 3U;
   809fa:	4a06      	ldr	r2, [pc, #24]	; (80a14 <SystemCoreClockUpdate+0x100>)
   809fc:	6813      	ldr	r3, [r2, #0]
   809fe:	490a      	ldr	r1, [pc, #40]	; (80a28 <SystemCoreClockUpdate+0x114>)
   80a00:	fba1 1303 	umull	r1, r3, r1, r3
   80a04:	085b      	lsrs	r3, r3, #1
   80a06:	6013      	str	r3, [r2, #0]
   80a08:	4770      	bx	lr
   80a0a:	bf00      	nop
   80a0c:	400e0600 	.word	0x400e0600
   80a10:	400e1a10 	.word	0x400e1a10
   80a14:	20070138 	.word	0x20070138
   80a18:	00b71b00 	.word	0x00b71b00
   80a1c:	003d0900 	.word	0x003d0900
   80a20:	007a1200 	.word	0x007a1200
   80a24:	0e4e1c00 	.word	0x0e4e1c00
   80a28:	aaaaaaab 	.word	0xaaaaaaab

00080a2c <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80a2c:	4b0a      	ldr	r3, [pc, #40]	; (80a58 <_sbrk+0x2c>)
   80a2e:	681b      	ldr	r3, [r3, #0]
   80a30:	b153      	cbz	r3, 80a48 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
   80a32:	4b09      	ldr	r3, [pc, #36]	; (80a58 <_sbrk+0x2c>)
   80a34:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80a36:	181a      	adds	r2, r3, r0
   80a38:	4908      	ldr	r1, [pc, #32]	; (80a5c <_sbrk+0x30>)
   80a3a:	4291      	cmp	r1, r2
   80a3c:	db08      	blt.n	80a50 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
   80a3e:	4610      	mov	r0, r2
   80a40:	4a05      	ldr	r2, [pc, #20]	; (80a58 <_sbrk+0x2c>)
   80a42:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80a44:	4618      	mov	r0, r3
   80a46:	4770      	bx	lr
		heap = (unsigned char *)&_end;
   80a48:	4a05      	ldr	r2, [pc, #20]	; (80a60 <_sbrk+0x34>)
   80a4a:	4b03      	ldr	r3, [pc, #12]	; (80a58 <_sbrk+0x2c>)
   80a4c:	601a      	str	r2, [r3, #0]
   80a4e:	e7f0      	b.n	80a32 <_sbrk+0x6>
		return (caddr_t) -1;	
   80a50:	f04f 30ff 	mov.w	r0, #4294967295
}
   80a54:	4770      	bx	lr
   80a56:	bf00      	nop
   80a58:	20070b74 	.word	0x20070b74
   80a5c:	20087ffc 	.word	0x20087ffc
   80a60:	20072bf0 	.word	0x20072bf0

00080a64 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   80a64:	f04f 30ff 	mov.w	r0, #4294967295
   80a68:	4770      	bx	lr

00080a6a <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   80a6a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
   80a6e:	604b      	str	r3, [r1, #4]

	return 0;
}
   80a70:	2000      	movs	r0, #0
   80a72:	4770      	bx	lr

00080a74 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   80a74:	2001      	movs	r0, #1
   80a76:	4770      	bx	lr

00080a78 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   80a78:	2000      	movs	r0, #0
   80a7a:	4770      	bx	lr

00080a7c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
   80a7c:	b5f0      	push	{r4, r5, r6, r7, lr}
   80a7e:	b083      	sub	sp, #12
   80a80:	4604      	mov	r4, r0
   80a82:	460d      	mov	r5, r1
	uint32_t val = 0;
   80a84:	2300      	movs	r3, #0
   80a86:	9301      	str	r3, [sp, #4]

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80a88:	4b20      	ldr	r3, [pc, #128]	; (80b0c <usart_serial_getchar+0x90>)
   80a8a:	4298      	cmp	r0, r3
   80a8c:	d00d      	beq.n	80aaa <usart_serial_getchar+0x2e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   80a8e:	4b20      	ldr	r3, [pc, #128]	; (80b10 <usart_serial_getchar+0x94>)
   80a90:	4298      	cmp	r0, r3
   80a92:	d012      	beq.n	80aba <usart_serial_getchar+0x3e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80a94:	4b1f      	ldr	r3, [pc, #124]	; (80b14 <usart_serial_getchar+0x98>)
   80a96:	4298      	cmp	r0, r3
   80a98:	d019      	beq.n	80ace <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   80a9a:	4b1f      	ldr	r3, [pc, #124]	; (80b18 <usart_serial_getchar+0x9c>)
   80a9c:	429c      	cmp	r4, r3
   80a9e:	d020      	beq.n	80ae2 <usart_serial_getchar+0x66>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   80aa0:	4b1e      	ldr	r3, [pc, #120]	; (80b1c <usart_serial_getchar+0xa0>)
   80aa2:	429c      	cmp	r4, r3
   80aa4:	d027      	beq.n	80af6 <usart_serial_getchar+0x7a>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   80aa6:	b003      	add	sp, #12
   80aa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
   80aaa:	461f      	mov	r7, r3
   80aac:	4e1c      	ldr	r6, [pc, #112]	; (80b20 <usart_serial_getchar+0xa4>)
   80aae:	4629      	mov	r1, r5
   80ab0:	4638      	mov	r0, r7
   80ab2:	47b0      	blx	r6
   80ab4:	2800      	cmp	r0, #0
   80ab6:	d1fa      	bne.n	80aae <usart_serial_getchar+0x32>
   80ab8:	e7ef      	b.n	80a9a <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
   80aba:	461f      	mov	r7, r3
   80abc:	4e19      	ldr	r6, [pc, #100]	; (80b24 <usart_serial_getchar+0xa8>)
   80abe:	a901      	add	r1, sp, #4
   80ac0:	4638      	mov	r0, r7
   80ac2:	47b0      	blx	r6
   80ac4:	2800      	cmp	r0, #0
   80ac6:	d1fa      	bne.n	80abe <usart_serial_getchar+0x42>
		*data = (uint8_t)(val & 0xFF);
   80ac8:	9b01      	ldr	r3, [sp, #4]
   80aca:	702b      	strb	r3, [r5, #0]
   80acc:	e7e8      	b.n	80aa0 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
   80ace:	461e      	mov	r6, r3
   80ad0:	4c14      	ldr	r4, [pc, #80]	; (80b24 <usart_serial_getchar+0xa8>)
   80ad2:	a901      	add	r1, sp, #4
   80ad4:	4630      	mov	r0, r6
   80ad6:	47a0      	blx	r4
   80ad8:	2800      	cmp	r0, #0
   80ada:	d1fa      	bne.n	80ad2 <usart_serial_getchar+0x56>
		*data = (uint8_t)(val & 0xFF);
   80adc:	9b01      	ldr	r3, [sp, #4]
   80ade:	702b      	strb	r3, [r5, #0]
   80ae0:	e7e1      	b.n	80aa6 <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80ae2:	461e      	mov	r6, r3
   80ae4:	4c0f      	ldr	r4, [pc, #60]	; (80b24 <usart_serial_getchar+0xa8>)
   80ae6:	a901      	add	r1, sp, #4
   80ae8:	4630      	mov	r0, r6
   80aea:	47a0      	blx	r4
   80aec:	2800      	cmp	r0, #0
   80aee:	d1fa      	bne.n	80ae6 <usart_serial_getchar+0x6a>
		*data = (uint8_t)(val & 0xFF);
   80af0:	9b01      	ldr	r3, [sp, #4]
   80af2:	702b      	strb	r3, [r5, #0]
   80af4:	e7d7      	b.n	80aa6 <usart_serial_getchar+0x2a>
		while (usart_read(p_usart, &val));
   80af6:	461e      	mov	r6, r3
   80af8:	4c0a      	ldr	r4, [pc, #40]	; (80b24 <usart_serial_getchar+0xa8>)
   80afa:	a901      	add	r1, sp, #4
   80afc:	4630      	mov	r0, r6
   80afe:	47a0      	blx	r4
   80b00:	2800      	cmp	r0, #0
   80b02:	d1fa      	bne.n	80afa <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
   80b04:	9b01      	ldr	r3, [sp, #4]
   80b06:	702b      	strb	r3, [r5, #0]
}
   80b08:	e7cd      	b.n	80aa6 <usart_serial_getchar+0x2a>
   80b0a:	bf00      	nop
   80b0c:	400e0800 	.word	0x400e0800
   80b10:	40098000 	.word	0x40098000
   80b14:	4009c000 	.word	0x4009c000
   80b18:	400a0000 	.word	0x400a0000
   80b1c:	400a4000 	.word	0x400a4000
   80b20:	0008025f 	.word	0x0008025f
   80b24:	000801b1 	.word	0x000801b1

00080b28 <usart_serial_putchar>:
{
   80b28:	b570      	push	{r4, r5, r6, lr}
   80b2a:	460c      	mov	r4, r1
	if (UART == (Uart*)p_usart) {
   80b2c:	4b1e      	ldr	r3, [pc, #120]	; (80ba8 <usart_serial_putchar+0x80>)
   80b2e:	4298      	cmp	r0, r3
   80b30:	d00d      	beq.n	80b4e <usart_serial_putchar+0x26>
	if (USART0 == p_usart) {
   80b32:	4b1e      	ldr	r3, [pc, #120]	; (80bac <usart_serial_putchar+0x84>)
   80b34:	4298      	cmp	r0, r3
   80b36:	d013      	beq.n	80b60 <usart_serial_putchar+0x38>
	if (USART1 == p_usart) {
   80b38:	4b1d      	ldr	r3, [pc, #116]	; (80bb0 <usart_serial_putchar+0x88>)
   80b3a:	4298      	cmp	r0, r3
   80b3c:	d019      	beq.n	80b72 <usart_serial_putchar+0x4a>
	if (USART2 == p_usart) {
   80b3e:	4b1d      	ldr	r3, [pc, #116]	; (80bb4 <usart_serial_putchar+0x8c>)
   80b40:	4298      	cmp	r0, r3
   80b42:	d01f      	beq.n	80b84 <usart_serial_putchar+0x5c>
	if (USART3 == p_usart) {
   80b44:	4b1c      	ldr	r3, [pc, #112]	; (80bb8 <usart_serial_putchar+0x90>)
   80b46:	4298      	cmp	r0, r3
   80b48:	d025      	beq.n	80b96 <usart_serial_putchar+0x6e>
	return 0;
   80b4a:	2000      	movs	r0, #0
}
   80b4c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
   80b4e:	461e      	mov	r6, r3
   80b50:	4d1a      	ldr	r5, [pc, #104]	; (80bbc <usart_serial_putchar+0x94>)
   80b52:	4621      	mov	r1, r4
   80b54:	4630      	mov	r0, r6
   80b56:	47a8      	blx	r5
   80b58:	2800      	cmp	r0, #0
   80b5a:	d1fa      	bne.n	80b52 <usart_serial_putchar+0x2a>
		return 1;
   80b5c:	2001      	movs	r0, #1
   80b5e:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80b60:	461e      	mov	r6, r3
   80b62:	4d17      	ldr	r5, [pc, #92]	; (80bc0 <usart_serial_putchar+0x98>)
   80b64:	4621      	mov	r1, r4
   80b66:	4630      	mov	r0, r6
   80b68:	47a8      	blx	r5
   80b6a:	2800      	cmp	r0, #0
   80b6c:	d1fa      	bne.n	80b64 <usart_serial_putchar+0x3c>
		return 1;
   80b6e:	2001      	movs	r0, #1
   80b70:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80b72:	461e      	mov	r6, r3
   80b74:	4d12      	ldr	r5, [pc, #72]	; (80bc0 <usart_serial_putchar+0x98>)
   80b76:	4621      	mov	r1, r4
   80b78:	4630      	mov	r0, r6
   80b7a:	47a8      	blx	r5
   80b7c:	2800      	cmp	r0, #0
   80b7e:	d1fa      	bne.n	80b76 <usart_serial_putchar+0x4e>
		return 1;
   80b80:	2001      	movs	r0, #1
   80b82:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80b84:	461e      	mov	r6, r3
   80b86:	4d0e      	ldr	r5, [pc, #56]	; (80bc0 <usart_serial_putchar+0x98>)
   80b88:	4621      	mov	r1, r4
   80b8a:	4630      	mov	r0, r6
   80b8c:	47a8      	blx	r5
   80b8e:	2800      	cmp	r0, #0
   80b90:	d1fa      	bne.n	80b88 <usart_serial_putchar+0x60>
		return 1;
   80b92:	2001      	movs	r0, #1
   80b94:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80b96:	461e      	mov	r6, r3
   80b98:	4d09      	ldr	r5, [pc, #36]	; (80bc0 <usart_serial_putchar+0x98>)
   80b9a:	4621      	mov	r1, r4
   80b9c:	4630      	mov	r0, r6
   80b9e:	47a8      	blx	r5
   80ba0:	2800      	cmp	r0, #0
   80ba2:	d1fa      	bne.n	80b9a <usart_serial_putchar+0x72>
		return 1;
   80ba4:	2001      	movs	r0, #1
   80ba6:	bd70      	pop	{r4, r5, r6, pc}
   80ba8:	400e0800 	.word	0x400e0800
   80bac:	40098000 	.word	0x40098000
   80bb0:	4009c000 	.word	0x4009c000
   80bb4:	400a0000 	.word	0x400a0000
   80bb8:	400a4000 	.word	0x400a4000
   80bbc:	0008024f 	.word	0x0008024f
   80bc0:	0008019d 	.word	0x0008019d

00080bc4 <setup>:
    setup();
	printf("Main Loop\n");
    forceMeasurement();
}

void setup(void) {
   80bc4:	b530      	push	{r4, r5, lr}
   80bc6:	b085      	sub	sp, #20
	sysclk_init();
   80bc8:	4b18      	ldr	r3, [pc, #96]	; (80c2c <setup+0x68>)
   80bca:	4798      	blx	r3
	board_init();
   80bcc:	4b18      	ldr	r3, [pc, #96]	; (80c30 <setup+0x6c>)
   80bce:	4798      	blx	r3
   80bd0:	2008      	movs	r0, #8
   80bd2:	4d18      	ldr	r5, [pc, #96]	; (80c34 <setup+0x70>)
   80bd4:	47a8      	blx	r5
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   80bd6:	4c18      	ldr	r4, [pc, #96]	; (80c38 <setup+0x74>)
   80bd8:	4b18      	ldr	r3, [pc, #96]	; (80c3c <setup+0x78>)
   80bda:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80bdc:	4a18      	ldr	r2, [pc, #96]	; (80c40 <setup+0x7c>)
   80bde:	4b19      	ldr	r3, [pc, #100]	; (80c44 <setup+0x80>)
   80be0:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   80be2:	4a19      	ldr	r2, [pc, #100]	; (80c48 <setup+0x84>)
   80be4:	4b19      	ldr	r3, [pc, #100]	; (80c4c <setup+0x88>)
   80be6:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80be8:	4b19      	ldr	r3, [pc, #100]	; (80c50 <setup+0x8c>)
   80bea:	9301      	str	r3, [sp, #4]
	uart_settings.ul_baudrate = opt->baudrate;
   80bec:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   80bf0:	9302      	str	r3, [sp, #8]
	uart_settings.ul_mode = opt->paritytype;
   80bf2:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80bf6:	9303      	str	r3, [sp, #12]
   80bf8:	2008      	movs	r0, #8
   80bfa:	47a8      	blx	r5
		uart_init((Uart*)p_usart, &uart_settings);
   80bfc:	a901      	add	r1, sp, #4
   80bfe:	4620      	mov	r0, r4
   80c00:	4b14      	ldr	r3, [pc, #80]	; (80c54 <setup+0x90>)
   80c02:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   80c04:	4d14      	ldr	r5, [pc, #80]	; (80c58 <setup+0x94>)
   80c06:	682b      	ldr	r3, [r5, #0]
   80c08:	2100      	movs	r1, #0
   80c0a:	6898      	ldr	r0, [r3, #8]
   80c0c:	4c13      	ldr	r4, [pc, #76]	; (80c5c <setup+0x98>)
   80c0e:	47a0      	blx	r4
	setbuf(stdin, NULL);
   80c10:	682b      	ldr	r3, [r5, #0]
   80c12:	2100      	movs	r1, #0
   80c14:	6858      	ldr	r0, [r3, #4]
   80c16:	47a0      	blx	r4
	
	sysclk_enable_peripheral_clock(CONSOLE_UART_ID);
	stdio_serial_init(CONF_UART, &uart_serial_options);
	
	// Component initialization
	setupESC();	
   80c18:	4b11      	ldr	r3, [pc, #68]	; (80c60 <setup+0x9c>)
   80c1a:	4798      	blx	r3
	
	delay_s(10);
   80c1c:	4811      	ldr	r0, [pc, #68]	; (80c64 <setup+0xa0>)
   80c1e:	4b12      	ldr	r3, [pc, #72]	; (80c68 <setup+0xa4>)
   80c20:	4798      	blx	r3
	printf("Setup finished");
   80c22:	4812      	ldr	r0, [pc, #72]	; (80c6c <setup+0xa8>)
   80c24:	4b12      	ldr	r3, [pc, #72]	; (80c70 <setup+0xac>)
   80c26:	4798      	blx	r3
}
   80c28:	b005      	add	sp, #20
   80c2a:	bd30      	pop	{r4, r5, pc}
   80c2c:	000803d1 	.word	0x000803d1
   80c30:	00080435 	.word	0x00080435
   80c34:	00080859 	.word	0x00080859
   80c38:	400e0800 	.word	0x400e0800
   80c3c:	20070bb4 	.word	0x20070bb4
   80c40:	00080b29 	.word	0x00080b29
   80c44:	20070bb0 	.word	0x20070bb0
   80c48:	00080a7d 	.word	0x00080a7d
   80c4c:	20070bac 	.word	0x20070bac
   80c50:	0501bd00 	.word	0x0501bd00
   80c54:	00080219 	.word	0x00080219
   80c58:	2007013c 	.word	0x2007013c
   80c5c:	000813b1 	.word	0x000813b1
   80c60:	00080309 	.word	0x00080309
   80c64:	03938700 	.word	0x03938700
   80c68:	20070001 	.word	0x20070001
   80c6c:	00084338 	.word	0x00084338
   80c70:	000812b9 	.word	0x000812b9

00080c74 <forceMeasurement>:

void forceMeasurement(void) {
   80c74:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	while(1) {
		minThrottle();
   80c78:	f8df 90c0 	ldr.w	r9, [pc, #192]	; 80d3c <forceMeasurement+0xc8>
		printf("Running Force Measurement. Rdy?\n");
   80c7c:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 80d40 <forceMeasurement+0xcc>
   80c80:	4e26      	ldr	r6, [pc, #152]	; (80d1c <forceMeasurement+0xa8>)
		getchar();
   80c82:	4d27      	ldr	r5, [pc, #156]	; (80d20 <forceMeasurement+0xac>)
   80c84:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 80d44 <forceMeasurement+0xd0>
		for(int percentage = 0; percentage <= 100; percentage+=10) {
			printf("Percent: %d\n", percentage);
			speed.front_left_speed = speed.front_right_speed = speed.rear_left_speed = speed.rear_right_speed = (float)(percentage)/100.0f;
   80c88:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 80d48 <forceMeasurement+0xd4>
   80c8c:	e031      	b.n	80cf2 <forceMeasurement+0x7e>
		getchar();
   80c8e:	6841      	ldr	r1, [r0, #4]
   80c90:	47d0      	blx	sl
   80c92:	e03c      	b.n	80d0e <forceMeasurement+0x9a>
			writeSpeed();
			getchar();
   80c94:	6841      	ldr	r1, [r0, #4]
   80c96:	47d0      	blx	sl
		for(int percentage = 0; percentage <= 100; percentage+=10) {
   80c98:	340a      	adds	r4, #10
   80c9a:	2c6e      	cmp	r4, #110	; 0x6e
   80c9c:	d01b      	beq.n	80cd6 <forceMeasurement+0x62>
			printf("Percent: %d\n", percentage);
   80c9e:	4621      	mov	r1, r4
   80ca0:	4638      	mov	r0, r7
   80ca2:	47b0      	blx	r6
			speed.front_left_speed = speed.front_right_speed = speed.rear_left_speed = speed.rear_right_speed = (float)(percentage)/100.0f;
   80ca4:	4620      	mov	r0, r4
   80ca6:	4b1f      	ldr	r3, [pc, #124]	; (80d24 <forceMeasurement+0xb0>)
   80ca8:	4798      	blx	r3
   80caa:	4641      	mov	r1, r8
   80cac:	4b1e      	ldr	r3, [pc, #120]	; (80d28 <forceMeasurement+0xb4>)
   80cae:	4798      	blx	r3
   80cb0:	4b1e      	ldr	r3, [pc, #120]	; (80d2c <forceMeasurement+0xb8>)
   80cb2:	60d8      	str	r0, [r3, #12]
   80cb4:	6098      	str	r0, [r3, #8]
   80cb6:	6058      	str	r0, [r3, #4]
   80cb8:	6018      	str	r0, [r3, #0]
			writeSpeed();
   80cba:	4b1d      	ldr	r3, [pc, #116]	; (80d30 <forceMeasurement+0xbc>)
   80cbc:	4798      	blx	r3
			getchar();
   80cbe:	6828      	ldr	r0, [r5, #0]
   80cc0:	6842      	ldr	r2, [r0, #4]
   80cc2:	6853      	ldr	r3, [r2, #4]
   80cc4:	3b01      	subs	r3, #1
   80cc6:	6053      	str	r3, [r2, #4]
   80cc8:	2b00      	cmp	r3, #0
   80cca:	dbe3      	blt.n	80c94 <forceMeasurement+0x20>
   80ccc:	6842      	ldr	r2, [r0, #4]
   80cce:	6813      	ldr	r3, [r2, #0]
   80cd0:	3301      	adds	r3, #1
   80cd2:	6013      	str	r3, [r2, #0]
   80cd4:	e7e0      	b.n	80c98 <forceMeasurement+0x24>
		}
		minThrottle();
   80cd6:	47c8      	blx	r9
		printf("Force Measurement done. Press any key to continue.\n");
   80cd8:	4816      	ldr	r0, [pc, #88]	; (80d34 <forceMeasurement+0xc0>)
   80cda:	47b0      	blx	r6
		getchar();
   80cdc:	6828      	ldr	r0, [r5, #0]
   80cde:	6842      	ldr	r2, [r0, #4]
   80ce0:	6853      	ldr	r3, [r2, #4]
   80ce2:	3b01      	subs	r3, #1
   80ce4:	6053      	str	r3, [r2, #4]
   80ce6:	2b00      	cmp	r3, #0
   80ce8:	db14      	blt.n	80d14 <forceMeasurement+0xa0>
   80cea:	6842      	ldr	r2, [r0, #4]
   80cec:	6813      	ldr	r3, [r2, #0]
   80cee:	3301      	adds	r3, #1
   80cf0:	6013      	str	r3, [r2, #0]
		minThrottle();
   80cf2:	47c8      	blx	r9
		printf("Running Force Measurement. Rdy?\n");
   80cf4:	4658      	mov	r0, fp
   80cf6:	47b0      	blx	r6
		getchar();
   80cf8:	6828      	ldr	r0, [r5, #0]
   80cfa:	6842      	ldr	r2, [r0, #4]
   80cfc:	6853      	ldr	r3, [r2, #4]
   80cfe:	3b01      	subs	r3, #1
   80d00:	6053      	str	r3, [r2, #4]
   80d02:	2b00      	cmp	r3, #0
   80d04:	dbc3      	blt.n	80c8e <forceMeasurement+0x1a>
   80d06:	6842      	ldr	r2, [r0, #4]
   80d08:	6813      	ldr	r3, [r2, #0]
   80d0a:	3301      	adds	r3, #1
   80d0c:	6013      	str	r3, [r2, #0]
void forceMeasurement(void) {
   80d0e:	2400      	movs	r4, #0
			printf("Percent: %d\n", percentage);
   80d10:	4f09      	ldr	r7, [pc, #36]	; (80d38 <forceMeasurement+0xc4>)
   80d12:	e7c4      	b.n	80c9e <forceMeasurement+0x2a>
		getchar();
   80d14:	6841      	ldr	r1, [r0, #4]
   80d16:	47d0      	blx	sl
   80d18:	e7eb      	b.n	80cf2 <forceMeasurement+0x7e>
   80d1a:	bf00      	nop
   80d1c:	000812b9 	.word	0x000812b9
   80d20:	2007013c 	.word	0x2007013c
   80d24:	00080ee1 	.word	0x00080ee1
   80d28:	000810f1 	.word	0x000810f1
   80d2c:	20070bb8 	.word	0x20070bb8
   80d30:	00080271 	.word	0x00080271
   80d34:	000842f8 	.word	0x000842f8
   80d38:	000842e8 	.word	0x000842e8
   80d3c:	000802ed 	.word	0x000802ed
   80d40:	000842c4 	.word	0x000842c4
   80d44:	0008137d 	.word	0x0008137d
   80d48:	42c80000 	.word	0x42c80000

00080d4c <main>:
int main (void) {
   80d4c:	b508      	push	{r3, lr}
    setup();
   80d4e:	4b03      	ldr	r3, [pc, #12]	; (80d5c <main+0x10>)
   80d50:	4798      	blx	r3
	printf("Main Loop\n");
   80d52:	4803      	ldr	r0, [pc, #12]	; (80d60 <main+0x14>)
   80d54:	4b03      	ldr	r3, [pc, #12]	; (80d64 <main+0x18>)
   80d56:	4798      	blx	r3
    forceMeasurement();
   80d58:	4b03      	ldr	r3, [pc, #12]	; (80d68 <main+0x1c>)
   80d5a:	4798      	blx	r3
   80d5c:	00080bc5 	.word	0x00080bc5
   80d60:	0008432c 	.word	0x0008432c
   80d64:	000812b9 	.word	0x000812b9
   80d68:	00080c75 	.word	0x00080c75

00080d6c <__aeabi_frsub>:
   80d6c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   80d70:	e002      	b.n	80d78 <__addsf3>
   80d72:	bf00      	nop

00080d74 <__aeabi_fsub>:
   80d74:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00080d78 <__addsf3>:
   80d78:	0042      	lsls	r2, r0, #1
   80d7a:	bf1f      	itttt	ne
   80d7c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   80d80:	ea92 0f03 	teqne	r2, r3
   80d84:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   80d88:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   80d8c:	d06a      	beq.n	80e64 <__addsf3+0xec>
   80d8e:	ea4f 6212 	mov.w	r2, r2, lsr #24
   80d92:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   80d96:	bfc1      	itttt	gt
   80d98:	18d2      	addgt	r2, r2, r3
   80d9a:	4041      	eorgt	r1, r0
   80d9c:	4048      	eorgt	r0, r1
   80d9e:	4041      	eorgt	r1, r0
   80da0:	bfb8      	it	lt
   80da2:	425b      	neglt	r3, r3
   80da4:	2b19      	cmp	r3, #25
   80da6:	bf88      	it	hi
   80da8:	4770      	bxhi	lr
   80daa:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   80dae:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80db2:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   80db6:	bf18      	it	ne
   80db8:	4240      	negne	r0, r0
   80dba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80dbe:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   80dc2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   80dc6:	bf18      	it	ne
   80dc8:	4249      	negne	r1, r1
   80dca:	ea92 0f03 	teq	r2, r3
   80dce:	d03f      	beq.n	80e50 <__addsf3+0xd8>
   80dd0:	f1a2 0201 	sub.w	r2, r2, #1
   80dd4:	fa41 fc03 	asr.w	ip, r1, r3
   80dd8:	eb10 000c 	adds.w	r0, r0, ip
   80ddc:	f1c3 0320 	rsb	r3, r3, #32
   80de0:	fa01 f103 	lsl.w	r1, r1, r3
   80de4:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   80de8:	d502      	bpl.n	80df0 <__addsf3+0x78>
   80dea:	4249      	negs	r1, r1
   80dec:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   80df0:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   80df4:	d313      	bcc.n	80e1e <__addsf3+0xa6>
   80df6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   80dfa:	d306      	bcc.n	80e0a <__addsf3+0x92>
   80dfc:	0840      	lsrs	r0, r0, #1
   80dfe:	ea4f 0131 	mov.w	r1, r1, rrx
   80e02:	f102 0201 	add.w	r2, r2, #1
   80e06:	2afe      	cmp	r2, #254	; 0xfe
   80e08:	d251      	bcs.n	80eae <__addsf3+0x136>
   80e0a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   80e0e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   80e12:	bf08      	it	eq
   80e14:	f020 0001 	biceq.w	r0, r0, #1
   80e18:	ea40 0003 	orr.w	r0, r0, r3
   80e1c:	4770      	bx	lr
   80e1e:	0049      	lsls	r1, r1, #1
   80e20:	eb40 0000 	adc.w	r0, r0, r0
   80e24:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   80e28:	f1a2 0201 	sub.w	r2, r2, #1
   80e2c:	d1ed      	bne.n	80e0a <__addsf3+0x92>
   80e2e:	fab0 fc80 	clz	ip, r0
   80e32:	f1ac 0c08 	sub.w	ip, ip, #8
   80e36:	ebb2 020c 	subs.w	r2, r2, ip
   80e3a:	fa00 f00c 	lsl.w	r0, r0, ip
   80e3e:	bfaa      	itet	ge
   80e40:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   80e44:	4252      	neglt	r2, r2
   80e46:	4318      	orrge	r0, r3
   80e48:	bfbc      	itt	lt
   80e4a:	40d0      	lsrlt	r0, r2
   80e4c:	4318      	orrlt	r0, r3
   80e4e:	4770      	bx	lr
   80e50:	f092 0f00 	teq	r2, #0
   80e54:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   80e58:	bf06      	itte	eq
   80e5a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   80e5e:	3201      	addeq	r2, #1
   80e60:	3b01      	subne	r3, #1
   80e62:	e7b5      	b.n	80dd0 <__addsf3+0x58>
   80e64:	ea4f 0341 	mov.w	r3, r1, lsl #1
   80e68:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   80e6c:	bf18      	it	ne
   80e6e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   80e72:	d021      	beq.n	80eb8 <__addsf3+0x140>
   80e74:	ea92 0f03 	teq	r2, r3
   80e78:	d004      	beq.n	80e84 <__addsf3+0x10c>
   80e7a:	f092 0f00 	teq	r2, #0
   80e7e:	bf08      	it	eq
   80e80:	4608      	moveq	r0, r1
   80e82:	4770      	bx	lr
   80e84:	ea90 0f01 	teq	r0, r1
   80e88:	bf1c      	itt	ne
   80e8a:	2000      	movne	r0, #0
   80e8c:	4770      	bxne	lr
   80e8e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   80e92:	d104      	bne.n	80e9e <__addsf3+0x126>
   80e94:	0040      	lsls	r0, r0, #1
   80e96:	bf28      	it	cs
   80e98:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   80e9c:	4770      	bx	lr
   80e9e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   80ea2:	bf3c      	itt	cc
   80ea4:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   80ea8:	4770      	bxcc	lr
   80eaa:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   80eae:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   80eb2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   80eb6:	4770      	bx	lr
   80eb8:	ea7f 6222 	mvns.w	r2, r2, asr #24
   80ebc:	bf16      	itet	ne
   80ebe:	4608      	movne	r0, r1
   80ec0:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   80ec4:	4601      	movne	r1, r0
   80ec6:	0242      	lsls	r2, r0, #9
   80ec8:	bf06      	itte	eq
   80eca:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   80ece:	ea90 0f01 	teqeq	r0, r1
   80ed2:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   80ed6:	4770      	bx	lr

00080ed8 <__aeabi_ui2f>:
   80ed8:	f04f 0300 	mov.w	r3, #0
   80edc:	e004      	b.n	80ee8 <__aeabi_i2f+0x8>
   80ede:	bf00      	nop

00080ee0 <__aeabi_i2f>:
   80ee0:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   80ee4:	bf48      	it	mi
   80ee6:	4240      	negmi	r0, r0
   80ee8:	ea5f 0c00 	movs.w	ip, r0
   80eec:	bf08      	it	eq
   80eee:	4770      	bxeq	lr
   80ef0:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   80ef4:	4601      	mov	r1, r0
   80ef6:	f04f 0000 	mov.w	r0, #0
   80efa:	e01c      	b.n	80f36 <__aeabi_l2f+0x2a>

00080efc <__aeabi_ul2f>:
   80efc:	ea50 0201 	orrs.w	r2, r0, r1
   80f00:	bf08      	it	eq
   80f02:	4770      	bxeq	lr
   80f04:	f04f 0300 	mov.w	r3, #0
   80f08:	e00a      	b.n	80f20 <__aeabi_l2f+0x14>
   80f0a:	bf00      	nop

00080f0c <__aeabi_l2f>:
   80f0c:	ea50 0201 	orrs.w	r2, r0, r1
   80f10:	bf08      	it	eq
   80f12:	4770      	bxeq	lr
   80f14:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   80f18:	d502      	bpl.n	80f20 <__aeabi_l2f+0x14>
   80f1a:	4240      	negs	r0, r0
   80f1c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80f20:	ea5f 0c01 	movs.w	ip, r1
   80f24:	bf02      	ittt	eq
   80f26:	4684      	moveq	ip, r0
   80f28:	4601      	moveq	r1, r0
   80f2a:	2000      	moveq	r0, #0
   80f2c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   80f30:	bf08      	it	eq
   80f32:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   80f36:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   80f3a:	fabc f28c 	clz	r2, ip
   80f3e:	3a08      	subs	r2, #8
   80f40:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   80f44:	db10      	blt.n	80f68 <__aeabi_l2f+0x5c>
   80f46:	fa01 fc02 	lsl.w	ip, r1, r2
   80f4a:	4463      	add	r3, ip
   80f4c:	fa00 fc02 	lsl.w	ip, r0, r2
   80f50:	f1c2 0220 	rsb	r2, r2, #32
   80f54:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80f58:	fa20 f202 	lsr.w	r2, r0, r2
   80f5c:	eb43 0002 	adc.w	r0, r3, r2
   80f60:	bf08      	it	eq
   80f62:	f020 0001 	biceq.w	r0, r0, #1
   80f66:	4770      	bx	lr
   80f68:	f102 0220 	add.w	r2, r2, #32
   80f6c:	fa01 fc02 	lsl.w	ip, r1, r2
   80f70:	f1c2 0220 	rsb	r2, r2, #32
   80f74:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   80f78:	fa21 f202 	lsr.w	r2, r1, r2
   80f7c:	eb43 0002 	adc.w	r0, r3, r2
   80f80:	bf08      	it	eq
   80f82:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   80f86:	4770      	bx	lr

00080f88 <__aeabi_fmul>:
   80f88:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80f8c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   80f90:	bf1e      	ittt	ne
   80f92:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   80f96:	ea92 0f0c 	teqne	r2, ip
   80f9a:	ea93 0f0c 	teqne	r3, ip
   80f9e:	d06f      	beq.n	81080 <__aeabi_fmul+0xf8>
   80fa0:	441a      	add	r2, r3
   80fa2:	ea80 0c01 	eor.w	ip, r0, r1
   80fa6:	0240      	lsls	r0, r0, #9
   80fa8:	bf18      	it	ne
   80faa:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   80fae:	d01e      	beq.n	80fee <__aeabi_fmul+0x66>
   80fb0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   80fb4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   80fb8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   80fbc:	fba0 3101 	umull	r3, r1, r0, r1
   80fc0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   80fc4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   80fc8:	bf3e      	ittt	cc
   80fca:	0049      	lslcc	r1, r1, #1
   80fcc:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   80fd0:	005b      	lslcc	r3, r3, #1
   80fd2:	ea40 0001 	orr.w	r0, r0, r1
   80fd6:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   80fda:	2afd      	cmp	r2, #253	; 0xfd
   80fdc:	d81d      	bhi.n	8101a <__aeabi_fmul+0x92>
   80fde:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   80fe2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   80fe6:	bf08      	it	eq
   80fe8:	f020 0001 	biceq.w	r0, r0, #1
   80fec:	4770      	bx	lr
   80fee:	f090 0f00 	teq	r0, #0
   80ff2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   80ff6:	bf08      	it	eq
   80ff8:	0249      	lsleq	r1, r1, #9
   80ffa:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   80ffe:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   81002:	3a7f      	subs	r2, #127	; 0x7f
   81004:	bfc2      	ittt	gt
   81006:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   8100a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   8100e:	4770      	bxgt	lr
   81010:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   81014:	f04f 0300 	mov.w	r3, #0
   81018:	3a01      	subs	r2, #1
   8101a:	dc5d      	bgt.n	810d8 <__aeabi_fmul+0x150>
   8101c:	f112 0f19 	cmn.w	r2, #25
   81020:	bfdc      	itt	le
   81022:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   81026:	4770      	bxle	lr
   81028:	f1c2 0200 	rsb	r2, r2, #0
   8102c:	0041      	lsls	r1, r0, #1
   8102e:	fa21 f102 	lsr.w	r1, r1, r2
   81032:	f1c2 0220 	rsb	r2, r2, #32
   81036:	fa00 fc02 	lsl.w	ip, r0, r2
   8103a:	ea5f 0031 	movs.w	r0, r1, rrx
   8103e:	f140 0000 	adc.w	r0, r0, #0
   81042:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   81046:	bf08      	it	eq
   81048:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   8104c:	4770      	bx	lr
   8104e:	f092 0f00 	teq	r2, #0
   81052:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   81056:	bf02      	ittt	eq
   81058:	0040      	lsleq	r0, r0, #1
   8105a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   8105e:	3a01      	subeq	r2, #1
   81060:	d0f9      	beq.n	81056 <__aeabi_fmul+0xce>
   81062:	ea40 000c 	orr.w	r0, r0, ip
   81066:	f093 0f00 	teq	r3, #0
   8106a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   8106e:	bf02      	ittt	eq
   81070:	0049      	lsleq	r1, r1, #1
   81072:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   81076:	3b01      	subeq	r3, #1
   81078:	d0f9      	beq.n	8106e <__aeabi_fmul+0xe6>
   8107a:	ea41 010c 	orr.w	r1, r1, ip
   8107e:	e78f      	b.n	80fa0 <__aeabi_fmul+0x18>
   81080:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   81084:	ea92 0f0c 	teq	r2, ip
   81088:	bf18      	it	ne
   8108a:	ea93 0f0c 	teqne	r3, ip
   8108e:	d00a      	beq.n	810a6 <__aeabi_fmul+0x11e>
   81090:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   81094:	bf18      	it	ne
   81096:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   8109a:	d1d8      	bne.n	8104e <__aeabi_fmul+0xc6>
   8109c:	ea80 0001 	eor.w	r0, r0, r1
   810a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   810a4:	4770      	bx	lr
   810a6:	f090 0f00 	teq	r0, #0
   810aa:	bf17      	itett	ne
   810ac:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   810b0:	4608      	moveq	r0, r1
   810b2:	f091 0f00 	teqne	r1, #0
   810b6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   810ba:	d014      	beq.n	810e6 <__aeabi_fmul+0x15e>
   810bc:	ea92 0f0c 	teq	r2, ip
   810c0:	d101      	bne.n	810c6 <__aeabi_fmul+0x13e>
   810c2:	0242      	lsls	r2, r0, #9
   810c4:	d10f      	bne.n	810e6 <__aeabi_fmul+0x15e>
   810c6:	ea93 0f0c 	teq	r3, ip
   810ca:	d103      	bne.n	810d4 <__aeabi_fmul+0x14c>
   810cc:	024b      	lsls	r3, r1, #9
   810ce:	bf18      	it	ne
   810d0:	4608      	movne	r0, r1
   810d2:	d108      	bne.n	810e6 <__aeabi_fmul+0x15e>
   810d4:	ea80 0001 	eor.w	r0, r0, r1
   810d8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   810dc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   810e0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   810e4:	4770      	bx	lr
   810e6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   810ea:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   810ee:	4770      	bx	lr

000810f0 <__aeabi_fdiv>:
   810f0:	f04f 0cff 	mov.w	ip, #255	; 0xff
   810f4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   810f8:	bf1e      	ittt	ne
   810fa:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   810fe:	ea92 0f0c 	teqne	r2, ip
   81102:	ea93 0f0c 	teqne	r3, ip
   81106:	d069      	beq.n	811dc <__aeabi_fdiv+0xec>
   81108:	eba2 0203 	sub.w	r2, r2, r3
   8110c:	ea80 0c01 	eor.w	ip, r0, r1
   81110:	0249      	lsls	r1, r1, #9
   81112:	ea4f 2040 	mov.w	r0, r0, lsl #9
   81116:	d037      	beq.n	81188 <__aeabi_fdiv+0x98>
   81118:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   8111c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   81120:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   81124:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   81128:	428b      	cmp	r3, r1
   8112a:	bf38      	it	cc
   8112c:	005b      	lslcc	r3, r3, #1
   8112e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   81132:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   81136:	428b      	cmp	r3, r1
   81138:	bf24      	itt	cs
   8113a:	1a5b      	subcs	r3, r3, r1
   8113c:	ea40 000c 	orrcs.w	r0, r0, ip
   81140:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   81144:	bf24      	itt	cs
   81146:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   8114a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   8114e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   81152:	bf24      	itt	cs
   81154:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   81158:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   8115c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   81160:	bf24      	itt	cs
   81162:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   81166:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   8116a:	011b      	lsls	r3, r3, #4
   8116c:	bf18      	it	ne
   8116e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   81172:	d1e0      	bne.n	81136 <__aeabi_fdiv+0x46>
   81174:	2afd      	cmp	r2, #253	; 0xfd
   81176:	f63f af50 	bhi.w	8101a <__aeabi_fmul+0x92>
   8117a:	428b      	cmp	r3, r1
   8117c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   81180:	bf08      	it	eq
   81182:	f020 0001 	biceq.w	r0, r0, #1
   81186:	4770      	bx	lr
   81188:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   8118c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   81190:	327f      	adds	r2, #127	; 0x7f
   81192:	bfc2      	ittt	gt
   81194:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   81198:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   8119c:	4770      	bxgt	lr
   8119e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   811a2:	f04f 0300 	mov.w	r3, #0
   811a6:	3a01      	subs	r2, #1
   811a8:	e737      	b.n	8101a <__aeabi_fmul+0x92>
   811aa:	f092 0f00 	teq	r2, #0
   811ae:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   811b2:	bf02      	ittt	eq
   811b4:	0040      	lsleq	r0, r0, #1
   811b6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   811ba:	3a01      	subeq	r2, #1
   811bc:	d0f9      	beq.n	811b2 <__aeabi_fdiv+0xc2>
   811be:	ea40 000c 	orr.w	r0, r0, ip
   811c2:	f093 0f00 	teq	r3, #0
   811c6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   811ca:	bf02      	ittt	eq
   811cc:	0049      	lsleq	r1, r1, #1
   811ce:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   811d2:	3b01      	subeq	r3, #1
   811d4:	d0f9      	beq.n	811ca <__aeabi_fdiv+0xda>
   811d6:	ea41 010c 	orr.w	r1, r1, ip
   811da:	e795      	b.n	81108 <__aeabi_fdiv+0x18>
   811dc:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   811e0:	ea92 0f0c 	teq	r2, ip
   811e4:	d108      	bne.n	811f8 <__aeabi_fdiv+0x108>
   811e6:	0242      	lsls	r2, r0, #9
   811e8:	f47f af7d 	bne.w	810e6 <__aeabi_fmul+0x15e>
   811ec:	ea93 0f0c 	teq	r3, ip
   811f0:	f47f af70 	bne.w	810d4 <__aeabi_fmul+0x14c>
   811f4:	4608      	mov	r0, r1
   811f6:	e776      	b.n	810e6 <__aeabi_fmul+0x15e>
   811f8:	ea93 0f0c 	teq	r3, ip
   811fc:	d104      	bne.n	81208 <__aeabi_fdiv+0x118>
   811fe:	024b      	lsls	r3, r1, #9
   81200:	f43f af4c 	beq.w	8109c <__aeabi_fmul+0x114>
   81204:	4608      	mov	r0, r1
   81206:	e76e      	b.n	810e6 <__aeabi_fmul+0x15e>
   81208:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   8120c:	bf18      	it	ne
   8120e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   81212:	d1ca      	bne.n	811aa <__aeabi_fdiv+0xba>
   81214:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   81218:	f47f af5c 	bne.w	810d4 <__aeabi_fmul+0x14c>
   8121c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   81220:	f47f af3c 	bne.w	8109c <__aeabi_fmul+0x114>
   81224:	e75f      	b.n	810e6 <__aeabi_fmul+0x15e>
   81226:	bf00      	nop

00081228 <__aeabi_f2uiz>:
   81228:	0042      	lsls	r2, r0, #1
   8122a:	d20e      	bcs.n	8124a <__aeabi_f2uiz+0x22>
   8122c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   81230:	d30b      	bcc.n	8124a <__aeabi_f2uiz+0x22>
   81232:	f04f 039e 	mov.w	r3, #158	; 0x9e
   81236:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   8123a:	d409      	bmi.n	81250 <__aeabi_f2uiz+0x28>
   8123c:	ea4f 2300 	mov.w	r3, r0, lsl #8
   81240:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   81244:	fa23 f002 	lsr.w	r0, r3, r2
   81248:	4770      	bx	lr
   8124a:	f04f 0000 	mov.w	r0, #0
   8124e:	4770      	bx	lr
   81250:	f112 0f61 	cmn.w	r2, #97	; 0x61
   81254:	d101      	bne.n	8125a <__aeabi_f2uiz+0x32>
   81256:	0242      	lsls	r2, r0, #9
   81258:	d102      	bne.n	81260 <__aeabi_f2uiz+0x38>
   8125a:	f04f 30ff 	mov.w	r0, #4294967295
   8125e:	4770      	bx	lr
   81260:	f04f 0000 	mov.w	r0, #0
   81264:	4770      	bx	lr
   81266:	bf00      	nop

00081268 <__libc_init_array>:
   81268:	b570      	push	{r4, r5, r6, lr}
   8126a:	4e0f      	ldr	r6, [pc, #60]	; (812a8 <__libc_init_array+0x40>)
   8126c:	4d0f      	ldr	r5, [pc, #60]	; (812ac <__libc_init_array+0x44>)
   8126e:	1b76      	subs	r6, r6, r5
   81270:	10b6      	asrs	r6, r6, #2
   81272:	bf18      	it	ne
   81274:	2400      	movne	r4, #0
   81276:	d005      	beq.n	81284 <__libc_init_array+0x1c>
   81278:	3401      	adds	r4, #1
   8127a:	f855 3b04 	ldr.w	r3, [r5], #4
   8127e:	4798      	blx	r3
   81280:	42a6      	cmp	r6, r4
   81282:	d1f9      	bne.n	81278 <__libc_init_array+0x10>
   81284:	4e0a      	ldr	r6, [pc, #40]	; (812b0 <__libc_init_array+0x48>)
   81286:	4d0b      	ldr	r5, [pc, #44]	; (812b4 <__libc_init_array+0x4c>)
   81288:	f003 f912 	bl	844b0 <_init>
   8128c:	1b76      	subs	r6, r6, r5
   8128e:	10b6      	asrs	r6, r6, #2
   81290:	bf18      	it	ne
   81292:	2400      	movne	r4, #0
   81294:	d006      	beq.n	812a4 <__libc_init_array+0x3c>
   81296:	3401      	adds	r4, #1
   81298:	f855 3b04 	ldr.w	r3, [r5], #4
   8129c:	4798      	blx	r3
   8129e:	42a6      	cmp	r6, r4
   812a0:	d1f9      	bne.n	81296 <__libc_init_array+0x2e>
   812a2:	bd70      	pop	{r4, r5, r6, pc}
   812a4:	bd70      	pop	{r4, r5, r6, pc}
   812a6:	bf00      	nop
   812a8:	000844bc 	.word	0x000844bc
   812ac:	000844bc 	.word	0x000844bc
   812b0:	000844c4 	.word	0x000844c4
   812b4:	000844bc 	.word	0x000844bc

000812b8 <iprintf>:
   812b8:	b40f      	push	{r0, r1, r2, r3}
   812ba:	b510      	push	{r4, lr}
   812bc:	4b07      	ldr	r3, [pc, #28]	; (812dc <iprintf+0x24>)
   812be:	b082      	sub	sp, #8
   812c0:	ac04      	add	r4, sp, #16
   812c2:	f854 2b04 	ldr.w	r2, [r4], #4
   812c6:	6818      	ldr	r0, [r3, #0]
   812c8:	4623      	mov	r3, r4
   812ca:	6881      	ldr	r1, [r0, #8]
   812cc:	9401      	str	r4, [sp, #4]
   812ce:	f000 f97f 	bl	815d0 <_vfiprintf_r>
   812d2:	b002      	add	sp, #8
   812d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   812d8:	b004      	add	sp, #16
   812da:	4770      	bx	lr
   812dc:	2007013c 	.word	0x2007013c

000812e0 <memset>:
   812e0:	b470      	push	{r4, r5, r6}
   812e2:	0786      	lsls	r6, r0, #30
   812e4:	d046      	beq.n	81374 <memset+0x94>
   812e6:	1e54      	subs	r4, r2, #1
   812e8:	2a00      	cmp	r2, #0
   812ea:	d041      	beq.n	81370 <memset+0x90>
   812ec:	b2ca      	uxtb	r2, r1
   812ee:	4603      	mov	r3, r0
   812f0:	e002      	b.n	812f8 <memset+0x18>
   812f2:	f114 34ff 	adds.w	r4, r4, #4294967295
   812f6:	d33b      	bcc.n	81370 <memset+0x90>
   812f8:	f803 2b01 	strb.w	r2, [r3], #1
   812fc:	079d      	lsls	r5, r3, #30
   812fe:	d1f8      	bne.n	812f2 <memset+0x12>
   81300:	2c03      	cmp	r4, #3
   81302:	d92e      	bls.n	81362 <memset+0x82>
   81304:	b2cd      	uxtb	r5, r1
   81306:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   8130a:	2c0f      	cmp	r4, #15
   8130c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   81310:	d919      	bls.n	81346 <memset+0x66>
   81312:	4626      	mov	r6, r4
   81314:	f103 0210 	add.w	r2, r3, #16
   81318:	3e10      	subs	r6, #16
   8131a:	2e0f      	cmp	r6, #15
   8131c:	f842 5c10 	str.w	r5, [r2, #-16]
   81320:	f842 5c0c 	str.w	r5, [r2, #-12]
   81324:	f842 5c08 	str.w	r5, [r2, #-8]
   81328:	f842 5c04 	str.w	r5, [r2, #-4]
   8132c:	f102 0210 	add.w	r2, r2, #16
   81330:	d8f2      	bhi.n	81318 <memset+0x38>
   81332:	f1a4 0210 	sub.w	r2, r4, #16
   81336:	f022 020f 	bic.w	r2, r2, #15
   8133a:	f004 040f 	and.w	r4, r4, #15
   8133e:	3210      	adds	r2, #16
   81340:	2c03      	cmp	r4, #3
   81342:	4413      	add	r3, r2
   81344:	d90d      	bls.n	81362 <memset+0x82>
   81346:	461e      	mov	r6, r3
   81348:	4622      	mov	r2, r4
   8134a:	3a04      	subs	r2, #4
   8134c:	2a03      	cmp	r2, #3
   8134e:	f846 5b04 	str.w	r5, [r6], #4
   81352:	d8fa      	bhi.n	8134a <memset+0x6a>
   81354:	1f22      	subs	r2, r4, #4
   81356:	f022 0203 	bic.w	r2, r2, #3
   8135a:	3204      	adds	r2, #4
   8135c:	4413      	add	r3, r2
   8135e:	f004 0403 	and.w	r4, r4, #3
   81362:	b12c      	cbz	r4, 81370 <memset+0x90>
   81364:	b2c9      	uxtb	r1, r1
   81366:	441c      	add	r4, r3
   81368:	f803 1b01 	strb.w	r1, [r3], #1
   8136c:	429c      	cmp	r4, r3
   8136e:	d1fb      	bne.n	81368 <memset+0x88>
   81370:	bc70      	pop	{r4, r5, r6}
   81372:	4770      	bx	lr
   81374:	4614      	mov	r4, r2
   81376:	4603      	mov	r3, r0
   81378:	e7c2      	b.n	81300 <memset+0x20>
   8137a:	bf00      	nop

0008137c <__srget_r>:
   8137c:	b538      	push	{r3, r4, r5, lr}
   8137e:	460c      	mov	r4, r1
   81380:	4605      	mov	r5, r0
   81382:	b108      	cbz	r0, 81388 <__srget_r+0xc>
   81384:	6b83      	ldr	r3, [r0, #56]	; 0x38
   81386:	b163      	cbz	r3, 813a2 <__srget_r+0x26>
   81388:	4628      	mov	r0, r5
   8138a:	4621      	mov	r1, r4
   8138c:	f002 fb2e 	bl	839ec <__srefill_r>
   81390:	b950      	cbnz	r0, 813a8 <__srget_r+0x2c>
   81392:	e894 000c 	ldmia.w	r4, {r2, r3}
   81396:	3b01      	subs	r3, #1
   81398:	1c51      	adds	r1, r2, #1
   8139a:	e884 000a 	stmia.w	r4, {r1, r3}
   8139e:	7810      	ldrb	r0, [r2, #0]
   813a0:	bd38      	pop	{r3, r4, r5, pc}
   813a2:	f001 f917 	bl	825d4 <__sinit>
   813a6:	e7ef      	b.n	81388 <__srget_r+0xc>
   813a8:	f04f 30ff 	mov.w	r0, #4294967295
   813ac:	bd38      	pop	{r3, r4, r5, pc}
   813ae:	bf00      	nop

000813b0 <setbuf>:
   813b0:	2900      	cmp	r1, #0
   813b2:	bf0c      	ite	eq
   813b4:	2202      	moveq	r2, #2
   813b6:	2200      	movne	r2, #0
   813b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
   813bc:	f000 b800 	b.w	813c0 <setvbuf>

000813c0 <setvbuf>:
   813c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   813c4:	4d61      	ldr	r5, [pc, #388]	; (8154c <setvbuf+0x18c>)
   813c6:	b083      	sub	sp, #12
   813c8:	682d      	ldr	r5, [r5, #0]
   813ca:	4604      	mov	r4, r0
   813cc:	460f      	mov	r7, r1
   813ce:	4690      	mov	r8, r2
   813d0:	461e      	mov	r6, r3
   813d2:	b115      	cbz	r5, 813da <setvbuf+0x1a>
   813d4:	6bab      	ldr	r3, [r5, #56]	; 0x38
   813d6:	2b00      	cmp	r3, #0
   813d8:	d064      	beq.n	814a4 <setvbuf+0xe4>
   813da:	f1b8 0f02 	cmp.w	r8, #2
   813de:	d006      	beq.n	813ee <setvbuf+0x2e>
   813e0:	f1b8 0f01 	cmp.w	r8, #1
   813e4:	f200 809f 	bhi.w	81526 <setvbuf+0x166>
   813e8:	2e00      	cmp	r6, #0
   813ea:	f2c0 809c 	blt.w	81526 <setvbuf+0x166>
   813ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
   813f0:	07d8      	lsls	r0, r3, #31
   813f2:	d534      	bpl.n	8145e <setvbuf+0x9e>
   813f4:	4621      	mov	r1, r4
   813f6:	4628      	mov	r0, r5
   813f8:	f001 f882 	bl	82500 <_fflush_r>
   813fc:	6b21      	ldr	r1, [r4, #48]	; 0x30
   813fe:	b141      	cbz	r1, 81412 <setvbuf+0x52>
   81400:	f104 0340 	add.w	r3, r4, #64	; 0x40
   81404:	4299      	cmp	r1, r3
   81406:	d002      	beq.n	8140e <setvbuf+0x4e>
   81408:	4628      	mov	r0, r5
   8140a:	f001 fa09 	bl	82820 <_free_r>
   8140e:	2300      	movs	r3, #0
   81410:	6323      	str	r3, [r4, #48]	; 0x30
   81412:	2200      	movs	r2, #0
   81414:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81418:	61a2      	str	r2, [r4, #24]
   8141a:	6062      	str	r2, [r4, #4]
   8141c:	061a      	lsls	r2, r3, #24
   8141e:	d43a      	bmi.n	81496 <setvbuf+0xd6>
   81420:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   81424:	f023 0303 	bic.w	r3, r3, #3
   81428:	f1b8 0f02 	cmp.w	r8, #2
   8142c:	81a3      	strh	r3, [r4, #12]
   8142e:	d01d      	beq.n	8146c <setvbuf+0xac>
   81430:	ab01      	add	r3, sp, #4
   81432:	466a      	mov	r2, sp
   81434:	4621      	mov	r1, r4
   81436:	4628      	mov	r0, r5
   81438:	f001 fcb4 	bl	82da4 <__swhatbuf_r>
   8143c:	89a3      	ldrh	r3, [r4, #12]
   8143e:	4318      	orrs	r0, r3
   81440:	81a0      	strh	r0, [r4, #12]
   81442:	2e00      	cmp	r6, #0
   81444:	d132      	bne.n	814ac <setvbuf+0xec>
   81446:	9e00      	ldr	r6, [sp, #0]
   81448:	4630      	mov	r0, r6
   8144a:	f001 fd23 	bl	82e94 <malloc>
   8144e:	4607      	mov	r7, r0
   81450:	2800      	cmp	r0, #0
   81452:	d06b      	beq.n	8152c <setvbuf+0x16c>
   81454:	89a3      	ldrh	r3, [r4, #12]
   81456:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   8145a:	81a3      	strh	r3, [r4, #12]
   8145c:	e028      	b.n	814b0 <setvbuf+0xf0>
   8145e:	89a3      	ldrh	r3, [r4, #12]
   81460:	0599      	lsls	r1, r3, #22
   81462:	d4c7      	bmi.n	813f4 <setvbuf+0x34>
   81464:	6da0      	ldr	r0, [r4, #88]	; 0x58
   81466:	f001 fc99 	bl	82d9c <__retarget_lock_acquire_recursive>
   8146a:	e7c3      	b.n	813f4 <setvbuf+0x34>
   8146c:	2500      	movs	r5, #0
   8146e:	2600      	movs	r6, #0
   81470:	2001      	movs	r0, #1
   81472:	6e61      	ldr	r1, [r4, #100]	; 0x64
   81474:	f104 0243 	add.w	r2, r4, #67	; 0x43
   81478:	f043 0302 	orr.w	r3, r3, #2
   8147c:	60a6      	str	r6, [r4, #8]
   8147e:	07ce      	lsls	r6, r1, #31
   81480:	81a3      	strh	r3, [r4, #12]
   81482:	6160      	str	r0, [r4, #20]
   81484:	6022      	str	r2, [r4, #0]
   81486:	6122      	str	r2, [r4, #16]
   81488:	d401      	bmi.n	8148e <setvbuf+0xce>
   8148a:	0598      	lsls	r0, r3, #22
   8148c:	d53e      	bpl.n	8150c <setvbuf+0x14c>
   8148e:	4628      	mov	r0, r5
   81490:	b003      	add	sp, #12
   81492:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   81496:	6921      	ldr	r1, [r4, #16]
   81498:	4628      	mov	r0, r5
   8149a:	f001 f9c1 	bl	82820 <_free_r>
   8149e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   814a2:	e7bd      	b.n	81420 <setvbuf+0x60>
   814a4:	4628      	mov	r0, r5
   814a6:	f001 f895 	bl	825d4 <__sinit>
   814aa:	e796      	b.n	813da <setvbuf+0x1a>
   814ac:	2f00      	cmp	r7, #0
   814ae:	d0cb      	beq.n	81448 <setvbuf+0x88>
   814b0:	6bab      	ldr	r3, [r5, #56]	; 0x38
   814b2:	2b00      	cmp	r3, #0
   814b4:	d033      	beq.n	8151e <setvbuf+0x15e>
   814b6:	9b00      	ldr	r3, [sp, #0]
   814b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   814bc:	429e      	cmp	r6, r3
   814be:	bf1c      	itt	ne
   814c0:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
   814c4:	81a2      	strhne	r2, [r4, #12]
   814c6:	f1b8 0f01 	cmp.w	r8, #1
   814ca:	bf04      	itt	eq
   814cc:	f042 0201 	orreq.w	r2, r2, #1
   814d0:	81a2      	strheq	r2, [r4, #12]
   814d2:	b292      	uxth	r2, r2
   814d4:	f012 0308 	ands.w	r3, r2, #8
   814d8:	6027      	str	r7, [r4, #0]
   814da:	6127      	str	r7, [r4, #16]
   814dc:	6166      	str	r6, [r4, #20]
   814de:	d00e      	beq.n	814fe <setvbuf+0x13e>
   814e0:	07d1      	lsls	r1, r2, #31
   814e2:	d51a      	bpl.n	8151a <setvbuf+0x15a>
   814e4:	2300      	movs	r3, #0
   814e6:	6e65      	ldr	r5, [r4, #100]	; 0x64
   814e8:	4276      	negs	r6, r6
   814ea:	f015 0501 	ands.w	r5, r5, #1
   814ee:	61a6      	str	r6, [r4, #24]
   814f0:	60a3      	str	r3, [r4, #8]
   814f2:	d009      	beq.n	81508 <setvbuf+0x148>
   814f4:	2500      	movs	r5, #0
   814f6:	4628      	mov	r0, r5
   814f8:	b003      	add	sp, #12
   814fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   814fe:	60a3      	str	r3, [r4, #8]
   81500:	6e65      	ldr	r5, [r4, #100]	; 0x64
   81502:	f015 0501 	ands.w	r5, r5, #1
   81506:	d1f5      	bne.n	814f4 <setvbuf+0x134>
   81508:	0593      	lsls	r3, r2, #22
   8150a:	d4c0      	bmi.n	8148e <setvbuf+0xce>
   8150c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8150e:	f001 fc47 	bl	82da0 <__retarget_lock_release_recursive>
   81512:	4628      	mov	r0, r5
   81514:	b003      	add	sp, #12
   81516:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8151a:	60a6      	str	r6, [r4, #8]
   8151c:	e7f0      	b.n	81500 <setvbuf+0x140>
   8151e:	4628      	mov	r0, r5
   81520:	f001 f858 	bl	825d4 <__sinit>
   81524:	e7c7      	b.n	814b6 <setvbuf+0xf6>
   81526:	f04f 35ff 	mov.w	r5, #4294967295
   8152a:	e7b0      	b.n	8148e <setvbuf+0xce>
   8152c:	f8dd 9000 	ldr.w	r9, [sp]
   81530:	45b1      	cmp	r9, r6
   81532:	d004      	beq.n	8153e <setvbuf+0x17e>
   81534:	4648      	mov	r0, r9
   81536:	f001 fcad 	bl	82e94 <malloc>
   8153a:	4607      	mov	r7, r0
   8153c:	b920      	cbnz	r0, 81548 <setvbuf+0x188>
   8153e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   81542:	f04f 35ff 	mov.w	r5, #4294967295
   81546:	e792      	b.n	8146e <setvbuf+0xae>
   81548:	464e      	mov	r6, r9
   8154a:	e783      	b.n	81454 <setvbuf+0x94>
   8154c:	2007013c 	.word	0x2007013c

00081550 <__sprint_r.part.0>:
   81550:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81554:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   81556:	4693      	mov	fp, r2
   81558:	049c      	lsls	r4, r3, #18
   8155a:	d52f      	bpl.n	815bc <__sprint_r.part.0+0x6c>
   8155c:	6893      	ldr	r3, [r2, #8]
   8155e:	6812      	ldr	r2, [r2, #0]
   81560:	b353      	cbz	r3, 815b8 <__sprint_r.part.0+0x68>
   81562:	460e      	mov	r6, r1
   81564:	4607      	mov	r7, r0
   81566:	f102 0908 	add.w	r9, r2, #8
   8156a:	e919 0420 	ldmdb	r9, {r5, sl}
   8156e:	ea5f 089a 	movs.w	r8, sl, lsr #2
   81572:	d017      	beq.n	815a4 <__sprint_r.part.0+0x54>
   81574:	2400      	movs	r4, #0
   81576:	3d04      	subs	r5, #4
   81578:	e001      	b.n	8157e <__sprint_r.part.0+0x2e>
   8157a:	45a0      	cmp	r8, r4
   8157c:	d010      	beq.n	815a0 <__sprint_r.part.0+0x50>
   8157e:	4632      	mov	r2, r6
   81580:	f855 1f04 	ldr.w	r1, [r5, #4]!
   81584:	4638      	mov	r0, r7
   81586:	f001 f8c7 	bl	82718 <_fputwc_r>
   8158a:	1c43      	adds	r3, r0, #1
   8158c:	f104 0401 	add.w	r4, r4, #1
   81590:	d1f3      	bne.n	8157a <__sprint_r.part.0+0x2a>
   81592:	2300      	movs	r3, #0
   81594:	f8cb 3008 	str.w	r3, [fp, #8]
   81598:	f8cb 3004 	str.w	r3, [fp, #4]
   8159c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   815a0:	f8db 3008 	ldr.w	r3, [fp, #8]
   815a4:	f02a 0a03 	bic.w	sl, sl, #3
   815a8:	eba3 030a 	sub.w	r3, r3, sl
   815ac:	f8cb 3008 	str.w	r3, [fp, #8]
   815b0:	f109 0908 	add.w	r9, r9, #8
   815b4:	2b00      	cmp	r3, #0
   815b6:	d1d8      	bne.n	8156a <__sprint_r.part.0+0x1a>
   815b8:	2000      	movs	r0, #0
   815ba:	e7ea      	b.n	81592 <__sprint_r.part.0+0x42>
   815bc:	f001 fa16 	bl	829ec <__sfvwrite_r>
   815c0:	2300      	movs	r3, #0
   815c2:	f8cb 3008 	str.w	r3, [fp, #8]
   815c6:	f8cb 3004 	str.w	r3, [fp, #4]
   815ca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   815ce:	bf00      	nop

000815d0 <_vfiprintf_r>:
   815d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   815d4:	b0ad      	sub	sp, #180	; 0xb4
   815d6:	461d      	mov	r5, r3
   815d8:	468b      	mov	fp, r1
   815da:	4690      	mov	r8, r2
   815dc:	9307      	str	r3, [sp, #28]
   815de:	9006      	str	r0, [sp, #24]
   815e0:	b118      	cbz	r0, 815ea <_vfiprintf_r+0x1a>
   815e2:	6b83      	ldr	r3, [r0, #56]	; 0x38
   815e4:	2b00      	cmp	r3, #0
   815e6:	f000 80f3 	beq.w	817d0 <_vfiprintf_r+0x200>
   815ea:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   815ee:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   815f2:	07df      	lsls	r7, r3, #31
   815f4:	b281      	uxth	r1, r0
   815f6:	d402      	bmi.n	815fe <_vfiprintf_r+0x2e>
   815f8:	058e      	lsls	r6, r1, #22
   815fa:	f140 80fc 	bpl.w	817f6 <_vfiprintf_r+0x226>
   815fe:	048c      	lsls	r4, r1, #18
   81600:	d40a      	bmi.n	81618 <_vfiprintf_r+0x48>
   81602:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81606:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
   8160a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   8160e:	f8ab 100c 	strh.w	r1, [fp, #12]
   81612:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
   81616:	b289      	uxth	r1, r1
   81618:	0708      	lsls	r0, r1, #28
   8161a:	f140 80b3 	bpl.w	81784 <_vfiprintf_r+0x1b4>
   8161e:	f8db 3010 	ldr.w	r3, [fp, #16]
   81622:	2b00      	cmp	r3, #0
   81624:	f000 80ae 	beq.w	81784 <_vfiprintf_r+0x1b4>
   81628:	f001 031a 	and.w	r3, r1, #26
   8162c:	2b0a      	cmp	r3, #10
   8162e:	f000 80b5 	beq.w	8179c <_vfiprintf_r+0x1cc>
   81632:	2300      	movs	r3, #0
   81634:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   81638:	46d1      	mov	r9, sl
   8163a:	930b      	str	r3, [sp, #44]	; 0x2c
   8163c:	9303      	str	r3, [sp, #12]
   8163e:	9311      	str	r3, [sp, #68]	; 0x44
   81640:	9310      	str	r3, [sp, #64]	; 0x40
   81642:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
   81646:	f8cd b010 	str.w	fp, [sp, #16]
   8164a:	f898 3000 	ldrb.w	r3, [r8]
   8164e:	4644      	mov	r4, r8
   81650:	b1fb      	cbz	r3, 81692 <_vfiprintf_r+0xc2>
   81652:	2b25      	cmp	r3, #37	; 0x25
   81654:	d102      	bne.n	8165c <_vfiprintf_r+0x8c>
   81656:	e01c      	b.n	81692 <_vfiprintf_r+0xc2>
   81658:	2b25      	cmp	r3, #37	; 0x25
   8165a:	d003      	beq.n	81664 <_vfiprintf_r+0x94>
   8165c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   81660:	2b00      	cmp	r3, #0
   81662:	d1f9      	bne.n	81658 <_vfiprintf_r+0x88>
   81664:	eba4 0508 	sub.w	r5, r4, r8
   81668:	b19d      	cbz	r5, 81692 <_vfiprintf_r+0xc2>
   8166a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8166c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8166e:	3301      	adds	r3, #1
   81670:	442a      	add	r2, r5
   81672:	2b07      	cmp	r3, #7
   81674:	f8c9 8000 	str.w	r8, [r9]
   81678:	f8c9 5004 	str.w	r5, [r9, #4]
   8167c:	9211      	str	r2, [sp, #68]	; 0x44
   8167e:	9310      	str	r3, [sp, #64]	; 0x40
   81680:	dd7a      	ble.n	81778 <_vfiprintf_r+0x1a8>
   81682:	2a00      	cmp	r2, #0
   81684:	f040 84b5 	bne.w	81ff2 <_vfiprintf_r+0xa22>
   81688:	46d1      	mov	r9, sl
   8168a:	9b03      	ldr	r3, [sp, #12]
   8168c:	9210      	str	r2, [sp, #64]	; 0x40
   8168e:	442b      	add	r3, r5
   81690:	9303      	str	r3, [sp, #12]
   81692:	7823      	ldrb	r3, [r4, #0]
   81694:	2b00      	cmp	r3, #0
   81696:	f000 83e5 	beq.w	81e64 <_vfiprintf_r+0x894>
   8169a:	2000      	movs	r0, #0
   8169c:	f04f 0300 	mov.w	r3, #0
   816a0:	f104 0801 	add.w	r8, r4, #1
   816a4:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   816a8:	7862      	ldrb	r2, [r4, #1]
   816aa:	4606      	mov	r6, r0
   816ac:	4605      	mov	r5, r0
   816ae:	4603      	mov	r3, r0
   816b0:	f04f 34ff 	mov.w	r4, #4294967295
   816b4:	f108 0801 	add.w	r8, r8, #1
   816b8:	f1a2 0120 	sub.w	r1, r2, #32
   816bc:	2958      	cmp	r1, #88	; 0x58
   816be:	f200 82d9 	bhi.w	81c74 <_vfiprintf_r+0x6a4>
   816c2:	e8df f011 	tbh	[pc, r1, lsl #1]
   816c6:	0228      	.short	0x0228
   816c8:	02d702d7 	.word	0x02d702d7
   816cc:	02d70230 	.word	0x02d70230
   816d0:	02d702d7 	.word	0x02d702d7
   816d4:	02d702d7 	.word	0x02d702d7
   816d8:	00a002d7 	.word	0x00a002d7
   816dc:	02d70288 	.word	0x02d70288
   816e0:	02b800a8 	.word	0x02b800a8
   816e4:	01a602d7 	.word	0x01a602d7
   816e8:	01ab01ab 	.word	0x01ab01ab
   816ec:	01ab01ab 	.word	0x01ab01ab
   816f0:	01ab01ab 	.word	0x01ab01ab
   816f4:	01ab01ab 	.word	0x01ab01ab
   816f8:	02d701ab 	.word	0x02d701ab
   816fc:	02d702d7 	.word	0x02d702d7
   81700:	02d702d7 	.word	0x02d702d7
   81704:	02d702d7 	.word	0x02d702d7
   81708:	02d702d7 	.word	0x02d702d7
   8170c:	01b902d7 	.word	0x01b902d7
   81710:	02d702d7 	.word	0x02d702d7
   81714:	02d702d7 	.word	0x02d702d7
   81718:	02d702d7 	.word	0x02d702d7
   8171c:	02d702d7 	.word	0x02d702d7
   81720:	02d702d7 	.word	0x02d702d7
   81724:	02d7019e 	.word	0x02d7019e
   81728:	02d702d7 	.word	0x02d702d7
   8172c:	02d702d7 	.word	0x02d702d7
   81730:	02d701a2 	.word	0x02d701a2
   81734:	025a02d7 	.word	0x025a02d7
   81738:	02d702d7 	.word	0x02d702d7
   8173c:	02d702d7 	.word	0x02d702d7
   81740:	02d702d7 	.word	0x02d702d7
   81744:	02d702d7 	.word	0x02d702d7
   81748:	02d702d7 	.word	0x02d702d7
   8174c:	02220261 	.word	0x02220261
   81750:	02d702d7 	.word	0x02d702d7
   81754:	027602d7 	.word	0x027602d7
   81758:	02d70222 	.word	0x02d70222
   8175c:	027b02d7 	.word	0x027b02d7
   81760:	01fc02d7 	.word	0x01fc02d7
   81764:	02100189 	.word	0x02100189
   81768:	02d702d2 	.word	0x02d702d2
   8176c:	02d70295 	.word	0x02d70295
   81770:	02d700ad 	.word	0x02d700ad
   81774:	023502d7 	.word	0x023502d7
   81778:	f109 0908 	add.w	r9, r9, #8
   8177c:	9b03      	ldr	r3, [sp, #12]
   8177e:	442b      	add	r3, r5
   81780:	9303      	str	r3, [sp, #12]
   81782:	e786      	b.n	81692 <_vfiprintf_r+0xc2>
   81784:	4659      	mov	r1, fp
   81786:	9806      	ldr	r0, [sp, #24]
   81788:	f000 fdaa 	bl	822e0 <__swsetup_r>
   8178c:	bb18      	cbnz	r0, 817d6 <_vfiprintf_r+0x206>
   8178e:	f8bb 100c 	ldrh.w	r1, [fp, #12]
   81792:	f001 031a 	and.w	r3, r1, #26
   81796:	2b0a      	cmp	r3, #10
   81798:	f47f af4b 	bne.w	81632 <_vfiprintf_r+0x62>
   8179c:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   817a0:	2b00      	cmp	r3, #0
   817a2:	f6ff af46 	blt.w	81632 <_vfiprintf_r+0x62>
   817a6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   817aa:	07db      	lsls	r3, r3, #31
   817ac:	d405      	bmi.n	817ba <_vfiprintf_r+0x1ea>
   817ae:	058f      	lsls	r7, r1, #22
   817b0:	d403      	bmi.n	817ba <_vfiprintf_r+0x1ea>
   817b2:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   817b6:	f001 faf3 	bl	82da0 <__retarget_lock_release_recursive>
   817ba:	462b      	mov	r3, r5
   817bc:	4642      	mov	r2, r8
   817be:	4659      	mov	r1, fp
   817c0:	9806      	ldr	r0, [sp, #24]
   817c2:	f000 fd49 	bl	82258 <__sbprintf>
   817c6:	9003      	str	r0, [sp, #12]
   817c8:	9803      	ldr	r0, [sp, #12]
   817ca:	b02d      	add	sp, #180	; 0xb4
   817cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   817d0:	f000 ff00 	bl	825d4 <__sinit>
   817d4:	e709      	b.n	815ea <_vfiprintf_r+0x1a>
   817d6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   817da:	07d9      	lsls	r1, r3, #31
   817dc:	d404      	bmi.n	817e8 <_vfiprintf_r+0x218>
   817de:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   817e2:	059a      	lsls	r2, r3, #22
   817e4:	f140 84ae 	bpl.w	82144 <_vfiprintf_r+0xb74>
   817e8:	f04f 33ff 	mov.w	r3, #4294967295
   817ec:	9303      	str	r3, [sp, #12]
   817ee:	9803      	ldr	r0, [sp, #12]
   817f0:	b02d      	add	sp, #180	; 0xb4
   817f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   817f6:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   817fa:	f001 facf 	bl	82d9c <__retarget_lock_acquire_recursive>
   817fe:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   81802:	b281      	uxth	r1, r0
   81804:	e6fb      	b.n	815fe <_vfiprintf_r+0x2e>
   81806:	9907      	ldr	r1, [sp, #28]
   81808:	460a      	mov	r2, r1
   8180a:	680d      	ldr	r5, [r1, #0]
   8180c:	3204      	adds	r2, #4
   8180e:	2d00      	cmp	r5, #0
   81810:	9207      	str	r2, [sp, #28]
   81812:	da02      	bge.n	8181a <_vfiprintf_r+0x24a>
   81814:	426d      	negs	r5, r5
   81816:	f043 0304 	orr.w	r3, r3, #4
   8181a:	f898 2000 	ldrb.w	r2, [r8]
   8181e:	e749      	b.n	816b4 <_vfiprintf_r+0xe4>
   81820:	9508      	str	r5, [sp, #32]
   81822:	069e      	lsls	r6, r3, #26
   81824:	f100 845a 	bmi.w	820dc <_vfiprintf_r+0xb0c>
   81828:	9907      	ldr	r1, [sp, #28]
   8182a:	06dd      	lsls	r5, r3, #27
   8182c:	460a      	mov	r2, r1
   8182e:	f100 83ef 	bmi.w	82010 <_vfiprintf_r+0xa40>
   81832:	0658      	lsls	r0, r3, #25
   81834:	f140 83ec 	bpl.w	82010 <_vfiprintf_r+0xa40>
   81838:	2700      	movs	r7, #0
   8183a:	2201      	movs	r2, #1
   8183c:	880e      	ldrh	r6, [r1, #0]
   8183e:	3104      	adds	r1, #4
   81840:	9107      	str	r1, [sp, #28]
   81842:	f04f 0100 	mov.w	r1, #0
   81846:	2500      	movs	r5, #0
   81848:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
   8184c:	1c61      	adds	r1, r4, #1
   8184e:	f000 8117 	beq.w	81a80 <_vfiprintf_r+0x4b0>
   81852:	f023 0180 	bic.w	r1, r3, #128	; 0x80
   81856:	9102      	str	r1, [sp, #8]
   81858:	ea56 0107 	orrs.w	r1, r6, r7
   8185c:	f040 8115 	bne.w	81a8a <_vfiprintf_r+0x4ba>
   81860:	2c00      	cmp	r4, #0
   81862:	f040 835b 	bne.w	81f1c <_vfiprintf_r+0x94c>
   81866:	2a00      	cmp	r2, #0
   81868:	f040 83b6 	bne.w	81fd8 <_vfiprintf_r+0xa08>
   8186c:	f013 0301 	ands.w	r3, r3, #1
   81870:	9305      	str	r3, [sp, #20]
   81872:	f000 8455 	beq.w	82120 <_vfiprintf_r+0xb50>
   81876:	2330      	movs	r3, #48	; 0x30
   81878:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   8187c:	f80b 3d41 	strb.w	r3, [fp, #-65]!
   81880:	9b05      	ldr	r3, [sp, #20]
   81882:	42a3      	cmp	r3, r4
   81884:	bfb8      	it	lt
   81886:	4623      	movlt	r3, r4
   81888:	9301      	str	r3, [sp, #4]
   8188a:	b10d      	cbz	r5, 81890 <_vfiprintf_r+0x2c0>
   8188c:	3301      	adds	r3, #1
   8188e:	9301      	str	r3, [sp, #4]
   81890:	9b02      	ldr	r3, [sp, #8]
   81892:	f013 0302 	ands.w	r3, r3, #2
   81896:	9309      	str	r3, [sp, #36]	; 0x24
   81898:	d002      	beq.n	818a0 <_vfiprintf_r+0x2d0>
   8189a:	9b01      	ldr	r3, [sp, #4]
   8189c:	3302      	adds	r3, #2
   8189e:	9301      	str	r3, [sp, #4]
   818a0:	9b02      	ldr	r3, [sp, #8]
   818a2:	f013 0384 	ands.w	r3, r3, #132	; 0x84
   818a6:	930a      	str	r3, [sp, #40]	; 0x28
   818a8:	f040 8215 	bne.w	81cd6 <_vfiprintf_r+0x706>
   818ac:	9b08      	ldr	r3, [sp, #32]
   818ae:	9a01      	ldr	r2, [sp, #4]
   818b0:	1a9d      	subs	r5, r3, r2
   818b2:	2d00      	cmp	r5, #0
   818b4:	f340 820f 	ble.w	81cd6 <_vfiprintf_r+0x706>
   818b8:	2d10      	cmp	r5, #16
   818ba:	f340 8484 	ble.w	821c6 <_vfiprintf_r+0xbf6>
   818be:	9b10      	ldr	r3, [sp, #64]	; 0x40
   818c0:	46ce      	mov	lr, r9
   818c2:	2710      	movs	r7, #16
   818c4:	46a1      	mov	r9, r4
   818c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
   818c8:	4ec5      	ldr	r6, [pc, #788]	; (81be0 <_vfiprintf_r+0x610>)
   818ca:	4619      	mov	r1, r3
   818cc:	9c06      	ldr	r4, [sp, #24]
   818ce:	e007      	b.n	818e0 <_vfiprintf_r+0x310>
   818d0:	f101 0c02 	add.w	ip, r1, #2
   818d4:	4601      	mov	r1, r0
   818d6:	f10e 0e08 	add.w	lr, lr, #8
   818da:	3d10      	subs	r5, #16
   818dc:	2d10      	cmp	r5, #16
   818de:	dd11      	ble.n	81904 <_vfiprintf_r+0x334>
   818e0:	1c48      	adds	r0, r1, #1
   818e2:	3210      	adds	r2, #16
   818e4:	2807      	cmp	r0, #7
   818e6:	9211      	str	r2, [sp, #68]	; 0x44
   818e8:	e88e 00c0 	stmia.w	lr, {r6, r7}
   818ec:	9010      	str	r0, [sp, #64]	; 0x40
   818ee:	ddef      	ble.n	818d0 <_vfiprintf_r+0x300>
   818f0:	2a00      	cmp	r2, #0
   818f2:	f040 81d9 	bne.w	81ca8 <_vfiprintf_r+0x6d8>
   818f6:	3d10      	subs	r5, #16
   818f8:	2d10      	cmp	r5, #16
   818fa:	4611      	mov	r1, r2
   818fc:	f04f 0c01 	mov.w	ip, #1
   81900:	46d6      	mov	lr, sl
   81902:	dced      	bgt.n	818e0 <_vfiprintf_r+0x310>
   81904:	464c      	mov	r4, r9
   81906:	4661      	mov	r1, ip
   81908:	46f1      	mov	r9, lr
   8190a:	442a      	add	r2, r5
   8190c:	2907      	cmp	r1, #7
   8190e:	9211      	str	r2, [sp, #68]	; 0x44
   81910:	f8c9 6000 	str.w	r6, [r9]
   81914:	f8c9 5004 	str.w	r5, [r9, #4]
   81918:	9110      	str	r1, [sp, #64]	; 0x40
   8191a:	f300 82eb 	bgt.w	81ef4 <_vfiprintf_r+0x924>
   8191e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81922:	f109 0908 	add.w	r9, r9, #8
   81926:	1c48      	adds	r0, r1, #1
   81928:	2d00      	cmp	r5, #0
   8192a:	f040 81dc 	bne.w	81ce6 <_vfiprintf_r+0x716>
   8192e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81930:	2b00      	cmp	r3, #0
   81932:	f000 81f6 	beq.w	81d22 <_vfiprintf_r+0x752>
   81936:	2102      	movs	r1, #2
   81938:	ab0e      	add	r3, sp, #56	; 0x38
   8193a:	440a      	add	r2, r1
   8193c:	2807      	cmp	r0, #7
   8193e:	9211      	str	r2, [sp, #68]	; 0x44
   81940:	9010      	str	r0, [sp, #64]	; 0x40
   81942:	f8c9 1004 	str.w	r1, [r9, #4]
   81946:	f8c9 3000 	str.w	r3, [r9]
   8194a:	f340 81e6 	ble.w	81d1a <_vfiprintf_r+0x74a>
   8194e:	2a00      	cmp	r2, #0
   81950:	f040 8395 	bne.w	8207e <_vfiprintf_r+0xaae>
   81954:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81956:	2001      	movs	r0, #1
   81958:	2b80      	cmp	r3, #128	; 0x80
   8195a:	4611      	mov	r1, r2
   8195c:	46d1      	mov	r9, sl
   8195e:	f040 81e4 	bne.w	81d2a <_vfiprintf_r+0x75a>
   81962:	9b08      	ldr	r3, [sp, #32]
   81964:	9d01      	ldr	r5, [sp, #4]
   81966:	1b5e      	subs	r6, r3, r5
   81968:	2e00      	cmp	r6, #0
   8196a:	f340 81de 	ble.w	81d2a <_vfiprintf_r+0x75a>
   8196e:	2e10      	cmp	r6, #16
   81970:	f340 843c 	ble.w	821ec <_vfiprintf_r+0xc1c>
   81974:	46cc      	mov	ip, r9
   81976:	2710      	movs	r7, #16
   81978:	46a1      	mov	r9, r4
   8197a:	4d9a      	ldr	r5, [pc, #616]	; (81be4 <_vfiprintf_r+0x614>)
   8197c:	9c06      	ldr	r4, [sp, #24]
   8197e:	e007      	b.n	81990 <_vfiprintf_r+0x3c0>
   81980:	f101 0e02 	add.w	lr, r1, #2
   81984:	4601      	mov	r1, r0
   81986:	f10c 0c08 	add.w	ip, ip, #8
   8198a:	3e10      	subs	r6, #16
   8198c:	2e10      	cmp	r6, #16
   8198e:	dd11      	ble.n	819b4 <_vfiprintf_r+0x3e4>
   81990:	1c48      	adds	r0, r1, #1
   81992:	3210      	adds	r2, #16
   81994:	2807      	cmp	r0, #7
   81996:	9211      	str	r2, [sp, #68]	; 0x44
   81998:	e88c 00a0 	stmia.w	ip, {r5, r7}
   8199c:	9010      	str	r0, [sp, #64]	; 0x40
   8199e:	ddef      	ble.n	81980 <_vfiprintf_r+0x3b0>
   819a0:	2a00      	cmp	r2, #0
   819a2:	f040 829b 	bne.w	81edc <_vfiprintf_r+0x90c>
   819a6:	3e10      	subs	r6, #16
   819a8:	2e10      	cmp	r6, #16
   819aa:	f04f 0e01 	mov.w	lr, #1
   819ae:	4611      	mov	r1, r2
   819b0:	46d4      	mov	ip, sl
   819b2:	dced      	bgt.n	81990 <_vfiprintf_r+0x3c0>
   819b4:	464c      	mov	r4, r9
   819b6:	46e1      	mov	r9, ip
   819b8:	4432      	add	r2, r6
   819ba:	f1be 0f07 	cmp.w	lr, #7
   819be:	9211      	str	r2, [sp, #68]	; 0x44
   819c0:	e889 0060 	stmia.w	r9, {r5, r6}
   819c4:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
   819c8:	f300 8366 	bgt.w	82098 <_vfiprintf_r+0xac8>
   819cc:	f109 0908 	add.w	r9, r9, #8
   819d0:	f10e 0001 	add.w	r0, lr, #1
   819d4:	4671      	mov	r1, lr
   819d6:	e1a8      	b.n	81d2a <_vfiprintf_r+0x75a>
   819d8:	9508      	str	r5, [sp, #32]
   819da:	f013 0220 	ands.w	r2, r3, #32
   819de:	f040 8389 	bne.w	820f4 <_vfiprintf_r+0xb24>
   819e2:	f013 0110 	ands.w	r1, r3, #16
   819e6:	f040 8319 	bne.w	8201c <_vfiprintf_r+0xa4c>
   819ea:	f013 0240 	ands.w	r2, r3, #64	; 0x40
   819ee:	f000 8315 	beq.w	8201c <_vfiprintf_r+0xa4c>
   819f2:	9807      	ldr	r0, [sp, #28]
   819f4:	460a      	mov	r2, r1
   819f6:	4601      	mov	r1, r0
   819f8:	3104      	adds	r1, #4
   819fa:	8806      	ldrh	r6, [r0, #0]
   819fc:	2700      	movs	r7, #0
   819fe:	9107      	str	r1, [sp, #28]
   81a00:	e71f      	b.n	81842 <_vfiprintf_r+0x272>
   81a02:	9508      	str	r5, [sp, #32]
   81a04:	f043 0310 	orr.w	r3, r3, #16
   81a08:	e7e7      	b.n	819da <_vfiprintf_r+0x40a>
   81a0a:	9508      	str	r5, [sp, #32]
   81a0c:	f043 0310 	orr.w	r3, r3, #16
   81a10:	e707      	b.n	81822 <_vfiprintf_r+0x252>
   81a12:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   81a16:	f898 2000 	ldrb.w	r2, [r8]
   81a1a:	e64b      	b.n	816b4 <_vfiprintf_r+0xe4>
   81a1c:	2500      	movs	r5, #0
   81a1e:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81a22:	f818 2b01 	ldrb.w	r2, [r8], #1
   81a26:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   81a2a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
   81a2e:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81a32:	2909      	cmp	r1, #9
   81a34:	d9f5      	bls.n	81a22 <_vfiprintf_r+0x452>
   81a36:	e63f      	b.n	816b8 <_vfiprintf_r+0xe8>
   81a38:	9508      	str	r5, [sp, #32]
   81a3a:	2800      	cmp	r0, #0
   81a3c:	f040 8402 	bne.w	82244 <_vfiprintf_r+0xc74>
   81a40:	f043 0310 	orr.w	r3, r3, #16
   81a44:	069e      	lsls	r6, r3, #26
   81a46:	f100 833d 	bmi.w	820c4 <_vfiprintf_r+0xaf4>
   81a4a:	9907      	ldr	r1, [sp, #28]
   81a4c:	06dd      	lsls	r5, r3, #27
   81a4e:	460a      	mov	r2, r1
   81a50:	f100 82f0 	bmi.w	82034 <_vfiprintf_r+0xa64>
   81a54:	0658      	lsls	r0, r3, #25
   81a56:	f140 82ed 	bpl.w	82034 <_vfiprintf_r+0xa64>
   81a5a:	f9b1 6000 	ldrsh.w	r6, [r1]
   81a5e:	3204      	adds	r2, #4
   81a60:	17f7      	asrs	r7, r6, #31
   81a62:	4630      	mov	r0, r6
   81a64:	4639      	mov	r1, r7
   81a66:	9207      	str	r2, [sp, #28]
   81a68:	2800      	cmp	r0, #0
   81a6a:	f171 0200 	sbcs.w	r2, r1, #0
   81a6e:	f2c0 835a 	blt.w	82126 <_vfiprintf_r+0xb56>
   81a72:	1c61      	adds	r1, r4, #1
   81a74:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81a78:	f04f 0201 	mov.w	r2, #1
   81a7c:	f47f aee9 	bne.w	81852 <_vfiprintf_r+0x282>
   81a80:	ea56 0107 	orrs.w	r1, r6, r7
   81a84:	f000 824b 	beq.w	81f1e <_vfiprintf_r+0x94e>
   81a88:	9302      	str	r3, [sp, #8]
   81a8a:	2a01      	cmp	r2, #1
   81a8c:	f000 828a 	beq.w	81fa4 <_vfiprintf_r+0x9d4>
   81a90:	2a02      	cmp	r2, #2
   81a92:	f040 825a 	bne.w	81f4a <_vfiprintf_r+0x97a>
   81a96:	46d3      	mov	fp, sl
   81a98:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81a9a:	0933      	lsrs	r3, r6, #4
   81a9c:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
   81aa0:	0939      	lsrs	r1, r7, #4
   81aa2:	f006 020f 	and.w	r2, r6, #15
   81aa6:	460f      	mov	r7, r1
   81aa8:	461e      	mov	r6, r3
   81aaa:	5c83      	ldrb	r3, [r0, r2]
   81aac:	f80b 3d01 	strb.w	r3, [fp, #-1]!
   81ab0:	ea56 0307 	orrs.w	r3, r6, r7
   81ab4:	d1f1      	bne.n	81a9a <_vfiprintf_r+0x4ca>
   81ab6:	ebaa 030b 	sub.w	r3, sl, fp
   81aba:	9305      	str	r3, [sp, #20]
   81abc:	e6e0      	b.n	81880 <_vfiprintf_r+0x2b0>
   81abe:	2800      	cmp	r0, #0
   81ac0:	f040 83bd 	bne.w	8223e <_vfiprintf_r+0xc6e>
   81ac4:	0699      	lsls	r1, r3, #26
   81ac6:	f100 8359 	bmi.w	8217c <_vfiprintf_r+0xbac>
   81aca:	06da      	lsls	r2, r3, #27
   81acc:	f100 80e5 	bmi.w	81c9a <_vfiprintf_r+0x6ca>
   81ad0:	065b      	lsls	r3, r3, #25
   81ad2:	f140 80e2 	bpl.w	81c9a <_vfiprintf_r+0x6ca>
   81ad6:	9a07      	ldr	r2, [sp, #28]
   81ad8:	6813      	ldr	r3, [r2, #0]
   81ada:	3204      	adds	r2, #4
   81adc:	9207      	str	r2, [sp, #28]
   81ade:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   81ae2:	801a      	strh	r2, [r3, #0]
   81ae4:	e5b1      	b.n	8164a <_vfiprintf_r+0x7a>
   81ae6:	2278      	movs	r2, #120	; 0x78
   81ae8:	2130      	movs	r1, #48	; 0x30
   81aea:	9508      	str	r5, [sp, #32]
   81aec:	9d07      	ldr	r5, [sp, #28]
   81aee:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   81af2:	1d2a      	adds	r2, r5, #4
   81af4:	9207      	str	r2, [sp, #28]
   81af6:	4a3c      	ldr	r2, [pc, #240]	; (81be8 <_vfiprintf_r+0x618>)
   81af8:	682e      	ldr	r6, [r5, #0]
   81afa:	920b      	str	r2, [sp, #44]	; 0x2c
   81afc:	f043 0302 	orr.w	r3, r3, #2
   81b00:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   81b04:	2700      	movs	r7, #0
   81b06:	2202      	movs	r2, #2
   81b08:	e69b      	b.n	81842 <_vfiprintf_r+0x272>
   81b0a:	9508      	str	r5, [sp, #32]
   81b0c:	2800      	cmp	r0, #0
   81b0e:	d099      	beq.n	81a44 <_vfiprintf_r+0x474>
   81b10:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   81b14:	e796      	b.n	81a44 <_vfiprintf_r+0x474>
   81b16:	f898 2000 	ldrb.w	r2, [r8]
   81b1a:	2e00      	cmp	r6, #0
   81b1c:	f47f adca 	bne.w	816b4 <_vfiprintf_r+0xe4>
   81b20:	2001      	movs	r0, #1
   81b22:	2620      	movs	r6, #32
   81b24:	e5c6      	b.n	816b4 <_vfiprintf_r+0xe4>
   81b26:	f043 0301 	orr.w	r3, r3, #1
   81b2a:	f898 2000 	ldrb.w	r2, [r8]
   81b2e:	e5c1      	b.n	816b4 <_vfiprintf_r+0xe4>
   81b30:	9508      	str	r5, [sp, #32]
   81b32:	2800      	cmp	r0, #0
   81b34:	f040 8380 	bne.w	82238 <_vfiprintf_r+0xc68>
   81b38:	492b      	ldr	r1, [pc, #172]	; (81be8 <_vfiprintf_r+0x618>)
   81b3a:	910b      	str	r1, [sp, #44]	; 0x2c
   81b3c:	069f      	lsls	r7, r3, #26
   81b3e:	f100 82e5 	bmi.w	8210c <_vfiprintf_r+0xb3c>
   81b42:	9807      	ldr	r0, [sp, #28]
   81b44:	06de      	lsls	r6, r3, #27
   81b46:	4601      	mov	r1, r0
   81b48:	f100 826f 	bmi.w	8202a <_vfiprintf_r+0xa5a>
   81b4c:	065d      	lsls	r5, r3, #25
   81b4e:	f140 826c 	bpl.w	8202a <_vfiprintf_r+0xa5a>
   81b52:	2700      	movs	r7, #0
   81b54:	3104      	adds	r1, #4
   81b56:	8806      	ldrh	r6, [r0, #0]
   81b58:	9107      	str	r1, [sp, #28]
   81b5a:	07d8      	lsls	r0, r3, #31
   81b5c:	f140 8220 	bpl.w	81fa0 <_vfiprintf_r+0x9d0>
   81b60:	ea56 0107 	orrs.w	r1, r6, r7
   81b64:	f000 821c 	beq.w	81fa0 <_vfiprintf_r+0x9d0>
   81b68:	2130      	movs	r1, #48	; 0x30
   81b6a:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   81b6e:	f043 0302 	orr.w	r3, r3, #2
   81b72:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   81b76:	2202      	movs	r2, #2
   81b78:	e663      	b.n	81842 <_vfiprintf_r+0x272>
   81b7a:	9508      	str	r5, [sp, #32]
   81b7c:	2800      	cmp	r0, #0
   81b7e:	f040 8355 	bne.w	8222c <_vfiprintf_r+0xc5c>
   81b82:	491a      	ldr	r1, [pc, #104]	; (81bec <_vfiprintf_r+0x61c>)
   81b84:	910b      	str	r1, [sp, #44]	; 0x2c
   81b86:	e7d9      	b.n	81b3c <_vfiprintf_r+0x56c>
   81b88:	2201      	movs	r2, #1
   81b8a:	9807      	ldr	r0, [sp, #28]
   81b8c:	4611      	mov	r1, r2
   81b8e:	9201      	str	r2, [sp, #4]
   81b90:	6802      	ldr	r2, [r0, #0]
   81b92:	f04f 0400 	mov.w	r4, #0
   81b96:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   81b9a:	4602      	mov	r2, r0
   81b9c:	3204      	adds	r2, #4
   81b9e:	9508      	str	r5, [sp, #32]
   81ba0:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
   81ba4:	9105      	str	r1, [sp, #20]
   81ba6:	9207      	str	r2, [sp, #28]
   81ba8:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   81bac:	9302      	str	r3, [sp, #8]
   81bae:	2400      	movs	r4, #0
   81bb0:	e66e      	b.n	81890 <_vfiprintf_r+0x2c0>
   81bb2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   81bb6:	f898 2000 	ldrb.w	r2, [r8]
   81bba:	e57b      	b.n	816b4 <_vfiprintf_r+0xe4>
   81bbc:	f898 2000 	ldrb.w	r2, [r8]
   81bc0:	2a6c      	cmp	r2, #108	; 0x6c
   81bc2:	bf03      	ittte	eq
   81bc4:	f898 2001 	ldrbeq.w	r2, [r8, #1]
   81bc8:	f043 0320 	orreq.w	r3, r3, #32
   81bcc:	f108 0801 	addeq.w	r8, r8, #1
   81bd0:	f043 0310 	orrne.w	r3, r3, #16
   81bd4:	e56e      	b.n	816b4 <_vfiprintf_r+0xe4>
   81bd6:	f898 2000 	ldrb.w	r2, [r8]
   81bda:	2001      	movs	r0, #1
   81bdc:	262b      	movs	r6, #43	; 0x2b
   81bde:	e569      	b.n	816b4 <_vfiprintf_r+0xe4>
   81be0:	0008437c 	.word	0x0008437c
   81be4:	0008438c 	.word	0x0008438c
   81be8:	00084360 	.word	0x00084360
   81bec:	0008434c 	.word	0x0008434c
   81bf0:	f04f 0200 	mov.w	r2, #0
   81bf4:	9907      	ldr	r1, [sp, #28]
   81bf6:	9508      	str	r5, [sp, #32]
   81bf8:	f8d1 b000 	ldr.w	fp, [r1]
   81bfc:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   81c00:	1d0d      	adds	r5, r1, #4
   81c02:	f1bb 0f00 	cmp.w	fp, #0
   81c06:	f000 82e4 	beq.w	821d2 <_vfiprintf_r+0xc02>
   81c0a:	1c67      	adds	r7, r4, #1
   81c0c:	f000 82c3 	beq.w	82196 <_vfiprintf_r+0xbc6>
   81c10:	4622      	mov	r2, r4
   81c12:	2100      	movs	r1, #0
   81c14:	4658      	mov	r0, fp
   81c16:	9301      	str	r3, [sp, #4]
   81c18:	f001 fbfc 	bl	83414 <memchr>
   81c1c:	9b01      	ldr	r3, [sp, #4]
   81c1e:	2800      	cmp	r0, #0
   81c20:	f000 82e8 	beq.w	821f4 <_vfiprintf_r+0xc24>
   81c24:	eba0 020b 	sub.w	r2, r0, fp
   81c28:	9507      	str	r5, [sp, #28]
   81c2a:	9205      	str	r2, [sp, #20]
   81c2c:	9302      	str	r3, [sp, #8]
   81c2e:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81c32:	2400      	movs	r4, #0
   81c34:	e624      	b.n	81880 <_vfiprintf_r+0x2b0>
   81c36:	f898 2000 	ldrb.w	r2, [r8]
   81c3a:	f108 0701 	add.w	r7, r8, #1
   81c3e:	2a2a      	cmp	r2, #42	; 0x2a
   81c40:	f000 82e9 	beq.w	82216 <_vfiprintf_r+0xc46>
   81c44:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81c48:	2909      	cmp	r1, #9
   81c4a:	46b8      	mov	r8, r7
   81c4c:	f04f 0400 	mov.w	r4, #0
   81c50:	f63f ad32 	bhi.w	816b8 <_vfiprintf_r+0xe8>
   81c54:	f818 2b01 	ldrb.w	r2, [r8], #1
   81c58:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   81c5c:	eb01 0444 	add.w	r4, r1, r4, lsl #1
   81c60:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   81c64:	2909      	cmp	r1, #9
   81c66:	d9f5      	bls.n	81c54 <_vfiprintf_r+0x684>
   81c68:	e526      	b.n	816b8 <_vfiprintf_r+0xe8>
   81c6a:	f043 0320 	orr.w	r3, r3, #32
   81c6e:	f898 2000 	ldrb.w	r2, [r8]
   81c72:	e51f      	b.n	816b4 <_vfiprintf_r+0xe4>
   81c74:	9508      	str	r5, [sp, #32]
   81c76:	2800      	cmp	r0, #0
   81c78:	f040 82db 	bne.w	82232 <_vfiprintf_r+0xc62>
   81c7c:	2a00      	cmp	r2, #0
   81c7e:	f000 80f1 	beq.w	81e64 <_vfiprintf_r+0x894>
   81c82:	2101      	movs	r1, #1
   81c84:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   81c88:	f04f 0200 	mov.w	r2, #0
   81c8c:	9101      	str	r1, [sp, #4]
   81c8e:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   81c92:	9105      	str	r1, [sp, #20]
   81c94:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   81c98:	e788      	b.n	81bac <_vfiprintf_r+0x5dc>
   81c9a:	9a07      	ldr	r2, [sp, #28]
   81c9c:	6813      	ldr	r3, [r2, #0]
   81c9e:	3204      	adds	r2, #4
   81ca0:	9207      	str	r2, [sp, #28]
   81ca2:	9a03      	ldr	r2, [sp, #12]
   81ca4:	601a      	str	r2, [r3, #0]
   81ca6:	e4d0      	b.n	8164a <_vfiprintf_r+0x7a>
   81ca8:	aa0f      	add	r2, sp, #60	; 0x3c
   81caa:	9904      	ldr	r1, [sp, #16]
   81cac:	4620      	mov	r0, r4
   81cae:	f7ff fc4f 	bl	81550 <__sprint_r.part.0>
   81cb2:	2800      	cmp	r0, #0
   81cb4:	f040 8143 	bne.w	81f3e <_vfiprintf_r+0x96e>
   81cb8:	9910      	ldr	r1, [sp, #64]	; 0x40
   81cba:	46d6      	mov	lr, sl
   81cbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81cbe:	f101 0c01 	add.w	ip, r1, #1
   81cc2:	e60a      	b.n	818da <_vfiprintf_r+0x30a>
   81cc4:	aa0f      	add	r2, sp, #60	; 0x3c
   81cc6:	9904      	ldr	r1, [sp, #16]
   81cc8:	9806      	ldr	r0, [sp, #24]
   81cca:	f7ff fc41 	bl	81550 <__sprint_r.part.0>
   81cce:	2800      	cmp	r0, #0
   81cd0:	f040 8135 	bne.w	81f3e <_vfiprintf_r+0x96e>
   81cd4:	46d1      	mov	r9, sl
   81cd6:	9910      	ldr	r1, [sp, #64]	; 0x40
   81cd8:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   81cdc:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81cde:	1c48      	adds	r0, r1, #1
   81ce0:	2d00      	cmp	r5, #0
   81ce2:	f43f ae24 	beq.w	8192e <_vfiprintf_r+0x35e>
   81ce6:	2101      	movs	r1, #1
   81ce8:	f10d 0537 	add.w	r5, sp, #55	; 0x37
   81cec:	440a      	add	r2, r1
   81cee:	2807      	cmp	r0, #7
   81cf0:	9211      	str	r2, [sp, #68]	; 0x44
   81cf2:	9010      	str	r0, [sp, #64]	; 0x40
   81cf4:	f8c9 1004 	str.w	r1, [r9, #4]
   81cf8:	f8c9 5000 	str.w	r5, [r9]
   81cfc:	f340 8109 	ble.w	81f12 <_vfiprintf_r+0x942>
   81d00:	2a00      	cmp	r2, #0
   81d02:	f040 81af 	bne.w	82064 <_vfiprintf_r+0xa94>
   81d06:	9b09      	ldr	r3, [sp, #36]	; 0x24
   81d08:	2b00      	cmp	r3, #0
   81d0a:	f43f ae23 	beq.w	81954 <_vfiprintf_r+0x384>
   81d0e:	2202      	movs	r2, #2
   81d10:	4608      	mov	r0, r1
   81d12:	46d1      	mov	r9, sl
   81d14:	ab0e      	add	r3, sp, #56	; 0x38
   81d16:	921d      	str	r2, [sp, #116]	; 0x74
   81d18:	931c      	str	r3, [sp, #112]	; 0x70
   81d1a:	4601      	mov	r1, r0
   81d1c:	f109 0908 	add.w	r9, r9, #8
   81d20:	3001      	adds	r0, #1
   81d22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   81d24:	2b80      	cmp	r3, #128	; 0x80
   81d26:	f43f ae1c 	beq.w	81962 <_vfiprintf_r+0x392>
   81d2a:	9b05      	ldr	r3, [sp, #20]
   81d2c:	1ae4      	subs	r4, r4, r3
   81d2e:	2c00      	cmp	r4, #0
   81d30:	dd2f      	ble.n	81d92 <_vfiprintf_r+0x7c2>
   81d32:	2c10      	cmp	r4, #16
   81d34:	f340 8220 	ble.w	82178 <_vfiprintf_r+0xba8>
   81d38:	46ce      	mov	lr, r9
   81d3a:	2610      	movs	r6, #16
   81d3c:	4db2      	ldr	r5, [pc, #712]	; (82008 <_vfiprintf_r+0xa38>)
   81d3e:	9f06      	ldr	r7, [sp, #24]
   81d40:	f8dd 9010 	ldr.w	r9, [sp, #16]
   81d44:	e006      	b.n	81d54 <_vfiprintf_r+0x784>
   81d46:	1c88      	adds	r0, r1, #2
   81d48:	4619      	mov	r1, r3
   81d4a:	f10e 0e08 	add.w	lr, lr, #8
   81d4e:	3c10      	subs	r4, #16
   81d50:	2c10      	cmp	r4, #16
   81d52:	dd10      	ble.n	81d76 <_vfiprintf_r+0x7a6>
   81d54:	1c4b      	adds	r3, r1, #1
   81d56:	3210      	adds	r2, #16
   81d58:	2b07      	cmp	r3, #7
   81d5a:	9211      	str	r2, [sp, #68]	; 0x44
   81d5c:	e88e 0060 	stmia.w	lr, {r5, r6}
   81d60:	9310      	str	r3, [sp, #64]	; 0x40
   81d62:	ddf0      	ble.n	81d46 <_vfiprintf_r+0x776>
   81d64:	2a00      	cmp	r2, #0
   81d66:	d165      	bne.n	81e34 <_vfiprintf_r+0x864>
   81d68:	3c10      	subs	r4, #16
   81d6a:	2c10      	cmp	r4, #16
   81d6c:	f04f 0001 	mov.w	r0, #1
   81d70:	4611      	mov	r1, r2
   81d72:	46d6      	mov	lr, sl
   81d74:	dcee      	bgt.n	81d54 <_vfiprintf_r+0x784>
   81d76:	46f1      	mov	r9, lr
   81d78:	4422      	add	r2, r4
   81d7a:	2807      	cmp	r0, #7
   81d7c:	9211      	str	r2, [sp, #68]	; 0x44
   81d7e:	f8c9 5000 	str.w	r5, [r9]
   81d82:	f8c9 4004 	str.w	r4, [r9, #4]
   81d86:	9010      	str	r0, [sp, #64]	; 0x40
   81d88:	f300 8085 	bgt.w	81e96 <_vfiprintf_r+0x8c6>
   81d8c:	f109 0908 	add.w	r9, r9, #8
   81d90:	3001      	adds	r0, #1
   81d92:	9905      	ldr	r1, [sp, #20]
   81d94:	2807      	cmp	r0, #7
   81d96:	440a      	add	r2, r1
   81d98:	9211      	str	r2, [sp, #68]	; 0x44
   81d9a:	f8c9 b000 	str.w	fp, [r9]
   81d9e:	f8c9 1004 	str.w	r1, [r9, #4]
   81da2:	9010      	str	r0, [sp, #64]	; 0x40
   81da4:	f340 8082 	ble.w	81eac <_vfiprintf_r+0x8dc>
   81da8:	2a00      	cmp	r2, #0
   81daa:	f040 8118 	bne.w	81fde <_vfiprintf_r+0xa0e>
   81dae:	9b02      	ldr	r3, [sp, #8]
   81db0:	9210      	str	r2, [sp, #64]	; 0x40
   81db2:	0758      	lsls	r0, r3, #29
   81db4:	d535      	bpl.n	81e22 <_vfiprintf_r+0x852>
   81db6:	9b08      	ldr	r3, [sp, #32]
   81db8:	9901      	ldr	r1, [sp, #4]
   81dba:	1a5c      	subs	r4, r3, r1
   81dbc:	2c00      	cmp	r4, #0
   81dbe:	f340 80e7 	ble.w	81f90 <_vfiprintf_r+0x9c0>
   81dc2:	46d1      	mov	r9, sl
   81dc4:	2c10      	cmp	r4, #16
   81dc6:	f340 820d 	ble.w	821e4 <_vfiprintf_r+0xc14>
   81dca:	2510      	movs	r5, #16
   81dcc:	9910      	ldr	r1, [sp, #64]	; 0x40
   81dce:	4e8f      	ldr	r6, [pc, #572]	; (8200c <_vfiprintf_r+0xa3c>)
   81dd0:	9f06      	ldr	r7, [sp, #24]
   81dd2:	f8dd b010 	ldr.w	fp, [sp, #16]
   81dd6:	e006      	b.n	81de6 <_vfiprintf_r+0x816>
   81dd8:	1c88      	adds	r0, r1, #2
   81dda:	4619      	mov	r1, r3
   81ddc:	f109 0908 	add.w	r9, r9, #8
   81de0:	3c10      	subs	r4, #16
   81de2:	2c10      	cmp	r4, #16
   81de4:	dd11      	ble.n	81e0a <_vfiprintf_r+0x83a>
   81de6:	1c4b      	adds	r3, r1, #1
   81de8:	3210      	adds	r2, #16
   81dea:	2b07      	cmp	r3, #7
   81dec:	9211      	str	r2, [sp, #68]	; 0x44
   81dee:	f8c9 6000 	str.w	r6, [r9]
   81df2:	f8c9 5004 	str.w	r5, [r9, #4]
   81df6:	9310      	str	r3, [sp, #64]	; 0x40
   81df8:	ddee      	ble.n	81dd8 <_vfiprintf_r+0x808>
   81dfa:	bb42      	cbnz	r2, 81e4e <_vfiprintf_r+0x87e>
   81dfc:	3c10      	subs	r4, #16
   81dfe:	2c10      	cmp	r4, #16
   81e00:	f04f 0001 	mov.w	r0, #1
   81e04:	4611      	mov	r1, r2
   81e06:	46d1      	mov	r9, sl
   81e08:	dced      	bgt.n	81de6 <_vfiprintf_r+0x816>
   81e0a:	4422      	add	r2, r4
   81e0c:	2807      	cmp	r0, #7
   81e0e:	9211      	str	r2, [sp, #68]	; 0x44
   81e10:	f8c9 6000 	str.w	r6, [r9]
   81e14:	f8c9 4004 	str.w	r4, [r9, #4]
   81e18:	9010      	str	r0, [sp, #64]	; 0x40
   81e1a:	dd51      	ble.n	81ec0 <_vfiprintf_r+0x8f0>
   81e1c:	2a00      	cmp	r2, #0
   81e1e:	f040 819a 	bne.w	82156 <_vfiprintf_r+0xb86>
   81e22:	9b03      	ldr	r3, [sp, #12]
   81e24:	9a08      	ldr	r2, [sp, #32]
   81e26:	9901      	ldr	r1, [sp, #4]
   81e28:	428a      	cmp	r2, r1
   81e2a:	bfac      	ite	ge
   81e2c:	189b      	addge	r3, r3, r2
   81e2e:	185b      	addlt	r3, r3, r1
   81e30:	9303      	str	r3, [sp, #12]
   81e32:	e04e      	b.n	81ed2 <_vfiprintf_r+0x902>
   81e34:	aa0f      	add	r2, sp, #60	; 0x3c
   81e36:	4649      	mov	r1, r9
   81e38:	4638      	mov	r0, r7
   81e3a:	f7ff fb89 	bl	81550 <__sprint_r.part.0>
   81e3e:	2800      	cmp	r0, #0
   81e40:	f040 813e 	bne.w	820c0 <_vfiprintf_r+0xaf0>
   81e44:	9910      	ldr	r1, [sp, #64]	; 0x40
   81e46:	46d6      	mov	lr, sl
   81e48:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81e4a:	1c48      	adds	r0, r1, #1
   81e4c:	e77f      	b.n	81d4e <_vfiprintf_r+0x77e>
   81e4e:	aa0f      	add	r2, sp, #60	; 0x3c
   81e50:	4659      	mov	r1, fp
   81e52:	4638      	mov	r0, r7
   81e54:	f7ff fb7c 	bl	81550 <__sprint_r.part.0>
   81e58:	b960      	cbnz	r0, 81e74 <_vfiprintf_r+0x8a4>
   81e5a:	9910      	ldr	r1, [sp, #64]	; 0x40
   81e5c:	46d1      	mov	r9, sl
   81e5e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81e60:	1c48      	adds	r0, r1, #1
   81e62:	e7bd      	b.n	81de0 <_vfiprintf_r+0x810>
   81e64:	9b11      	ldr	r3, [sp, #68]	; 0x44
   81e66:	f8dd b010 	ldr.w	fp, [sp, #16]
   81e6a:	2b00      	cmp	r3, #0
   81e6c:	f040 81ca 	bne.w	82204 <_vfiprintf_r+0xc34>
   81e70:	2300      	movs	r3, #0
   81e72:	9310      	str	r3, [sp, #64]	; 0x40
   81e74:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   81e78:	f013 0f01 	tst.w	r3, #1
   81e7c:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   81e80:	d102      	bne.n	81e88 <_vfiprintf_r+0x8b8>
   81e82:	059a      	lsls	r2, r3, #22
   81e84:	f140 80dd 	bpl.w	82042 <_vfiprintf_r+0xa72>
   81e88:	065b      	lsls	r3, r3, #25
   81e8a:	f53f acad 	bmi.w	817e8 <_vfiprintf_r+0x218>
   81e8e:	9803      	ldr	r0, [sp, #12]
   81e90:	b02d      	add	sp, #180	; 0xb4
   81e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81e96:	2a00      	cmp	r2, #0
   81e98:	f040 8105 	bne.w	820a6 <_vfiprintf_r+0xad6>
   81e9c:	2301      	movs	r3, #1
   81e9e:	46d1      	mov	r9, sl
   81ea0:	9a05      	ldr	r2, [sp, #20]
   81ea2:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
   81ea6:	921d      	str	r2, [sp, #116]	; 0x74
   81ea8:	9211      	str	r2, [sp, #68]	; 0x44
   81eaa:	9310      	str	r3, [sp, #64]	; 0x40
   81eac:	f109 0908 	add.w	r9, r9, #8
   81eb0:	9b02      	ldr	r3, [sp, #8]
   81eb2:	0759      	lsls	r1, r3, #29
   81eb4:	d504      	bpl.n	81ec0 <_vfiprintf_r+0x8f0>
   81eb6:	9b08      	ldr	r3, [sp, #32]
   81eb8:	9901      	ldr	r1, [sp, #4]
   81eba:	1a5c      	subs	r4, r3, r1
   81ebc:	2c00      	cmp	r4, #0
   81ebe:	dc81      	bgt.n	81dc4 <_vfiprintf_r+0x7f4>
   81ec0:	9b03      	ldr	r3, [sp, #12]
   81ec2:	9908      	ldr	r1, [sp, #32]
   81ec4:	9801      	ldr	r0, [sp, #4]
   81ec6:	4281      	cmp	r1, r0
   81ec8:	bfac      	ite	ge
   81eca:	185b      	addge	r3, r3, r1
   81ecc:	181b      	addlt	r3, r3, r0
   81ece:	9303      	str	r3, [sp, #12]
   81ed0:	bb72      	cbnz	r2, 81f30 <_vfiprintf_r+0x960>
   81ed2:	2300      	movs	r3, #0
   81ed4:	46d1      	mov	r9, sl
   81ed6:	9310      	str	r3, [sp, #64]	; 0x40
   81ed8:	f7ff bbb7 	b.w	8164a <_vfiprintf_r+0x7a>
   81edc:	aa0f      	add	r2, sp, #60	; 0x3c
   81ede:	9904      	ldr	r1, [sp, #16]
   81ee0:	4620      	mov	r0, r4
   81ee2:	f7ff fb35 	bl	81550 <__sprint_r.part.0>
   81ee6:	bb50      	cbnz	r0, 81f3e <_vfiprintf_r+0x96e>
   81ee8:	9910      	ldr	r1, [sp, #64]	; 0x40
   81eea:	46d4      	mov	ip, sl
   81eec:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81eee:	f101 0e01 	add.w	lr, r1, #1
   81ef2:	e54a      	b.n	8198a <_vfiprintf_r+0x3ba>
   81ef4:	2a00      	cmp	r2, #0
   81ef6:	f47f aee5 	bne.w	81cc4 <_vfiprintf_r+0x6f4>
   81efa:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
   81efe:	2900      	cmp	r1, #0
   81f00:	f000 811a 	beq.w	82138 <_vfiprintf_r+0xb68>
   81f04:	2201      	movs	r2, #1
   81f06:	46d1      	mov	r9, sl
   81f08:	4610      	mov	r0, r2
   81f0a:	f10d 0137 	add.w	r1, sp, #55	; 0x37
   81f0e:	921d      	str	r2, [sp, #116]	; 0x74
   81f10:	911c      	str	r1, [sp, #112]	; 0x70
   81f12:	4601      	mov	r1, r0
   81f14:	f109 0908 	add.w	r9, r9, #8
   81f18:	3001      	adds	r0, #1
   81f1a:	e508      	b.n	8192e <_vfiprintf_r+0x35e>
   81f1c:	9b02      	ldr	r3, [sp, #8]
   81f1e:	2a01      	cmp	r2, #1
   81f20:	f000 8097 	beq.w	82052 <_vfiprintf_r+0xa82>
   81f24:	2a02      	cmp	r2, #2
   81f26:	d10d      	bne.n	81f44 <_vfiprintf_r+0x974>
   81f28:	9302      	str	r3, [sp, #8]
   81f2a:	2600      	movs	r6, #0
   81f2c:	2700      	movs	r7, #0
   81f2e:	e5b2      	b.n	81a96 <_vfiprintf_r+0x4c6>
   81f30:	aa0f      	add	r2, sp, #60	; 0x3c
   81f32:	9904      	ldr	r1, [sp, #16]
   81f34:	9806      	ldr	r0, [sp, #24]
   81f36:	f7ff fb0b 	bl	81550 <__sprint_r.part.0>
   81f3a:	2800      	cmp	r0, #0
   81f3c:	d0c9      	beq.n	81ed2 <_vfiprintf_r+0x902>
   81f3e:	f8dd b010 	ldr.w	fp, [sp, #16]
   81f42:	e797      	b.n	81e74 <_vfiprintf_r+0x8a4>
   81f44:	2600      	movs	r6, #0
   81f46:	2700      	movs	r7, #0
   81f48:	9302      	str	r3, [sp, #8]
   81f4a:	4651      	mov	r1, sl
   81f4c:	e000      	b.n	81f50 <_vfiprintf_r+0x980>
   81f4e:	4659      	mov	r1, fp
   81f50:	08f2      	lsrs	r2, r6, #3
   81f52:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
   81f56:	08f8      	lsrs	r0, r7, #3
   81f58:	f006 0307 	and.w	r3, r6, #7
   81f5c:	4607      	mov	r7, r0
   81f5e:	4616      	mov	r6, r2
   81f60:	3330      	adds	r3, #48	; 0x30
   81f62:	ea56 0207 	orrs.w	r2, r6, r7
   81f66:	f801 3c01 	strb.w	r3, [r1, #-1]
   81f6a:	f101 3bff 	add.w	fp, r1, #4294967295
   81f6e:	d1ee      	bne.n	81f4e <_vfiprintf_r+0x97e>
   81f70:	9a02      	ldr	r2, [sp, #8]
   81f72:	07d6      	lsls	r6, r2, #31
   81f74:	f57f ad9f 	bpl.w	81ab6 <_vfiprintf_r+0x4e6>
   81f78:	2b30      	cmp	r3, #48	; 0x30
   81f7a:	f43f ad9c 	beq.w	81ab6 <_vfiprintf_r+0x4e6>
   81f7e:	2330      	movs	r3, #48	; 0x30
   81f80:	3902      	subs	r1, #2
   81f82:	f80b 3c01 	strb.w	r3, [fp, #-1]
   81f86:	ebaa 0301 	sub.w	r3, sl, r1
   81f8a:	9305      	str	r3, [sp, #20]
   81f8c:	468b      	mov	fp, r1
   81f8e:	e477      	b.n	81880 <_vfiprintf_r+0x2b0>
   81f90:	9b03      	ldr	r3, [sp, #12]
   81f92:	9a08      	ldr	r2, [sp, #32]
   81f94:	428a      	cmp	r2, r1
   81f96:	bfac      	ite	ge
   81f98:	189b      	addge	r3, r3, r2
   81f9a:	185b      	addlt	r3, r3, r1
   81f9c:	9303      	str	r3, [sp, #12]
   81f9e:	e798      	b.n	81ed2 <_vfiprintf_r+0x902>
   81fa0:	2202      	movs	r2, #2
   81fa2:	e44e      	b.n	81842 <_vfiprintf_r+0x272>
   81fa4:	2f00      	cmp	r7, #0
   81fa6:	bf08      	it	eq
   81fa8:	2e0a      	cmpeq	r6, #10
   81faa:	d351      	bcc.n	82050 <_vfiprintf_r+0xa80>
   81fac:	46d3      	mov	fp, sl
   81fae:	4630      	mov	r0, r6
   81fb0:	4639      	mov	r1, r7
   81fb2:	220a      	movs	r2, #10
   81fb4:	2300      	movs	r3, #0
   81fb6:	f001 fff5 	bl	83fa4 <__aeabi_uldivmod>
   81fba:	3230      	adds	r2, #48	; 0x30
   81fbc:	f80b 2d01 	strb.w	r2, [fp, #-1]!
   81fc0:	4630      	mov	r0, r6
   81fc2:	4639      	mov	r1, r7
   81fc4:	2300      	movs	r3, #0
   81fc6:	220a      	movs	r2, #10
   81fc8:	f001 ffec 	bl	83fa4 <__aeabi_uldivmod>
   81fcc:	4606      	mov	r6, r0
   81fce:	460f      	mov	r7, r1
   81fd0:	ea56 0307 	orrs.w	r3, r6, r7
   81fd4:	d1eb      	bne.n	81fae <_vfiprintf_r+0x9de>
   81fd6:	e56e      	b.n	81ab6 <_vfiprintf_r+0x4e6>
   81fd8:	9405      	str	r4, [sp, #20]
   81fda:	46d3      	mov	fp, sl
   81fdc:	e450      	b.n	81880 <_vfiprintf_r+0x2b0>
   81fde:	aa0f      	add	r2, sp, #60	; 0x3c
   81fe0:	9904      	ldr	r1, [sp, #16]
   81fe2:	9806      	ldr	r0, [sp, #24]
   81fe4:	f7ff fab4 	bl	81550 <__sprint_r.part.0>
   81fe8:	2800      	cmp	r0, #0
   81fea:	d1a8      	bne.n	81f3e <_vfiprintf_r+0x96e>
   81fec:	46d1      	mov	r9, sl
   81fee:	9a11      	ldr	r2, [sp, #68]	; 0x44
   81ff0:	e75e      	b.n	81eb0 <_vfiprintf_r+0x8e0>
   81ff2:	aa0f      	add	r2, sp, #60	; 0x3c
   81ff4:	9904      	ldr	r1, [sp, #16]
   81ff6:	9806      	ldr	r0, [sp, #24]
   81ff8:	f7ff faaa 	bl	81550 <__sprint_r.part.0>
   81ffc:	2800      	cmp	r0, #0
   81ffe:	d19e      	bne.n	81f3e <_vfiprintf_r+0x96e>
   82000:	46d1      	mov	r9, sl
   82002:	f7ff bbbb 	b.w	8177c <_vfiprintf_r+0x1ac>
   82006:	bf00      	nop
   82008:	0008438c 	.word	0x0008438c
   8200c:	0008437c 	.word	0x0008437c
   82010:	3104      	adds	r1, #4
   82012:	6816      	ldr	r6, [r2, #0]
   82014:	2700      	movs	r7, #0
   82016:	2201      	movs	r2, #1
   82018:	9107      	str	r1, [sp, #28]
   8201a:	e412      	b.n	81842 <_vfiprintf_r+0x272>
   8201c:	9807      	ldr	r0, [sp, #28]
   8201e:	2700      	movs	r7, #0
   82020:	4601      	mov	r1, r0
   82022:	3104      	adds	r1, #4
   82024:	6806      	ldr	r6, [r0, #0]
   82026:	9107      	str	r1, [sp, #28]
   82028:	e40b      	b.n	81842 <_vfiprintf_r+0x272>
   8202a:	680e      	ldr	r6, [r1, #0]
   8202c:	3104      	adds	r1, #4
   8202e:	9107      	str	r1, [sp, #28]
   82030:	2700      	movs	r7, #0
   82032:	e592      	b.n	81b5a <_vfiprintf_r+0x58a>
   82034:	6816      	ldr	r6, [r2, #0]
   82036:	3204      	adds	r2, #4
   82038:	17f7      	asrs	r7, r6, #31
   8203a:	9207      	str	r2, [sp, #28]
   8203c:	4630      	mov	r0, r6
   8203e:	4639      	mov	r1, r7
   82040:	e512      	b.n	81a68 <_vfiprintf_r+0x498>
   82042:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   82046:	f000 feab 	bl	82da0 <__retarget_lock_release_recursive>
   8204a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   8204e:	e71b      	b.n	81e88 <_vfiprintf_r+0x8b8>
   82050:	9b02      	ldr	r3, [sp, #8]
   82052:	9302      	str	r3, [sp, #8]
   82054:	2301      	movs	r3, #1
   82056:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   8205a:	3630      	adds	r6, #48	; 0x30
   8205c:	f80b 6d41 	strb.w	r6, [fp, #-65]!
   82060:	9305      	str	r3, [sp, #20]
   82062:	e40d      	b.n	81880 <_vfiprintf_r+0x2b0>
   82064:	aa0f      	add	r2, sp, #60	; 0x3c
   82066:	9904      	ldr	r1, [sp, #16]
   82068:	9806      	ldr	r0, [sp, #24]
   8206a:	f7ff fa71 	bl	81550 <__sprint_r.part.0>
   8206e:	2800      	cmp	r0, #0
   82070:	f47f af65 	bne.w	81f3e <_vfiprintf_r+0x96e>
   82074:	9910      	ldr	r1, [sp, #64]	; 0x40
   82076:	46d1      	mov	r9, sl
   82078:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8207a:	1c48      	adds	r0, r1, #1
   8207c:	e457      	b.n	8192e <_vfiprintf_r+0x35e>
   8207e:	aa0f      	add	r2, sp, #60	; 0x3c
   82080:	9904      	ldr	r1, [sp, #16]
   82082:	9806      	ldr	r0, [sp, #24]
   82084:	f7ff fa64 	bl	81550 <__sprint_r.part.0>
   82088:	2800      	cmp	r0, #0
   8208a:	f47f af58 	bne.w	81f3e <_vfiprintf_r+0x96e>
   8208e:	9910      	ldr	r1, [sp, #64]	; 0x40
   82090:	46d1      	mov	r9, sl
   82092:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82094:	1c48      	adds	r0, r1, #1
   82096:	e644      	b.n	81d22 <_vfiprintf_r+0x752>
   82098:	2a00      	cmp	r2, #0
   8209a:	f040 8087 	bne.w	821ac <_vfiprintf_r+0xbdc>
   8209e:	2001      	movs	r0, #1
   820a0:	4611      	mov	r1, r2
   820a2:	46d1      	mov	r9, sl
   820a4:	e641      	b.n	81d2a <_vfiprintf_r+0x75a>
   820a6:	aa0f      	add	r2, sp, #60	; 0x3c
   820a8:	9904      	ldr	r1, [sp, #16]
   820aa:	9806      	ldr	r0, [sp, #24]
   820ac:	f7ff fa50 	bl	81550 <__sprint_r.part.0>
   820b0:	2800      	cmp	r0, #0
   820b2:	f47f af44 	bne.w	81f3e <_vfiprintf_r+0x96e>
   820b6:	9810      	ldr	r0, [sp, #64]	; 0x40
   820b8:	46d1      	mov	r9, sl
   820ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
   820bc:	3001      	adds	r0, #1
   820be:	e668      	b.n	81d92 <_vfiprintf_r+0x7c2>
   820c0:	46cb      	mov	fp, r9
   820c2:	e6d7      	b.n	81e74 <_vfiprintf_r+0x8a4>
   820c4:	9d07      	ldr	r5, [sp, #28]
   820c6:	3507      	adds	r5, #7
   820c8:	f025 0507 	bic.w	r5, r5, #7
   820cc:	f105 0208 	add.w	r2, r5, #8
   820d0:	e9d5 0100 	ldrd	r0, r1, [r5]
   820d4:	9207      	str	r2, [sp, #28]
   820d6:	4606      	mov	r6, r0
   820d8:	460f      	mov	r7, r1
   820da:	e4c5      	b.n	81a68 <_vfiprintf_r+0x498>
   820dc:	9d07      	ldr	r5, [sp, #28]
   820de:	3507      	adds	r5, #7
   820e0:	f025 0207 	bic.w	r2, r5, #7
   820e4:	f102 0108 	add.w	r1, r2, #8
   820e8:	e9d2 6700 	ldrd	r6, r7, [r2]
   820ec:	9107      	str	r1, [sp, #28]
   820ee:	2201      	movs	r2, #1
   820f0:	f7ff bba7 	b.w	81842 <_vfiprintf_r+0x272>
   820f4:	9d07      	ldr	r5, [sp, #28]
   820f6:	3507      	adds	r5, #7
   820f8:	f025 0207 	bic.w	r2, r5, #7
   820fc:	f102 0108 	add.w	r1, r2, #8
   82100:	e9d2 6700 	ldrd	r6, r7, [r2]
   82104:	9107      	str	r1, [sp, #28]
   82106:	2200      	movs	r2, #0
   82108:	f7ff bb9b 	b.w	81842 <_vfiprintf_r+0x272>
   8210c:	9d07      	ldr	r5, [sp, #28]
   8210e:	3507      	adds	r5, #7
   82110:	f025 0107 	bic.w	r1, r5, #7
   82114:	f101 0008 	add.w	r0, r1, #8
   82118:	9007      	str	r0, [sp, #28]
   8211a:	e9d1 6700 	ldrd	r6, r7, [r1]
   8211e:	e51c      	b.n	81b5a <_vfiprintf_r+0x58a>
   82120:	46d3      	mov	fp, sl
   82122:	f7ff bbad 	b.w	81880 <_vfiprintf_r+0x2b0>
   82126:	252d      	movs	r5, #45	; 0x2d
   82128:	4276      	negs	r6, r6
   8212a:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
   8212e:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   82132:	2201      	movs	r2, #1
   82134:	f7ff bb8a 	b.w	8184c <_vfiprintf_r+0x27c>
   82138:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8213a:	b9b3      	cbnz	r3, 8216a <_vfiprintf_r+0xb9a>
   8213c:	4611      	mov	r1, r2
   8213e:	2001      	movs	r0, #1
   82140:	46d1      	mov	r9, sl
   82142:	e5f2      	b.n	81d2a <_vfiprintf_r+0x75a>
   82144:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   82148:	f000 fe2a 	bl	82da0 <__retarget_lock_release_recursive>
   8214c:	f04f 33ff 	mov.w	r3, #4294967295
   82150:	9303      	str	r3, [sp, #12]
   82152:	f7ff bb4c 	b.w	817ee <_vfiprintf_r+0x21e>
   82156:	aa0f      	add	r2, sp, #60	; 0x3c
   82158:	9904      	ldr	r1, [sp, #16]
   8215a:	9806      	ldr	r0, [sp, #24]
   8215c:	f7ff f9f8 	bl	81550 <__sprint_r.part.0>
   82160:	2800      	cmp	r0, #0
   82162:	f47f aeec 	bne.w	81f3e <_vfiprintf_r+0x96e>
   82166:	9a11      	ldr	r2, [sp, #68]	; 0x44
   82168:	e6aa      	b.n	81ec0 <_vfiprintf_r+0x8f0>
   8216a:	2202      	movs	r2, #2
   8216c:	ab0e      	add	r3, sp, #56	; 0x38
   8216e:	921d      	str	r2, [sp, #116]	; 0x74
   82170:	931c      	str	r3, [sp, #112]	; 0x70
   82172:	2001      	movs	r0, #1
   82174:	46d1      	mov	r9, sl
   82176:	e5d0      	b.n	81d1a <_vfiprintf_r+0x74a>
   82178:	4d34      	ldr	r5, [pc, #208]	; (8224c <_vfiprintf_r+0xc7c>)
   8217a:	e5fd      	b.n	81d78 <_vfiprintf_r+0x7a8>
   8217c:	9a07      	ldr	r2, [sp, #28]
   8217e:	4613      	mov	r3, r2
   82180:	3304      	adds	r3, #4
   82182:	9307      	str	r3, [sp, #28]
   82184:	9b03      	ldr	r3, [sp, #12]
   82186:	6811      	ldr	r1, [r2, #0]
   82188:	17dd      	asrs	r5, r3, #31
   8218a:	461a      	mov	r2, r3
   8218c:	462b      	mov	r3, r5
   8218e:	e9c1 2300 	strd	r2, r3, [r1]
   82192:	f7ff ba5a 	b.w	8164a <_vfiprintf_r+0x7a>
   82196:	4658      	mov	r0, fp
   82198:	9507      	str	r5, [sp, #28]
   8219a:	9302      	str	r3, [sp, #8]
   8219c:	f001 fd08 	bl	83bb0 <strlen>
   821a0:	2400      	movs	r4, #0
   821a2:	9005      	str	r0, [sp, #20]
   821a4:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   821a8:	f7ff bb6a 	b.w	81880 <_vfiprintf_r+0x2b0>
   821ac:	aa0f      	add	r2, sp, #60	; 0x3c
   821ae:	9904      	ldr	r1, [sp, #16]
   821b0:	9806      	ldr	r0, [sp, #24]
   821b2:	f7ff f9cd 	bl	81550 <__sprint_r.part.0>
   821b6:	2800      	cmp	r0, #0
   821b8:	f47f aec1 	bne.w	81f3e <_vfiprintf_r+0x96e>
   821bc:	9910      	ldr	r1, [sp, #64]	; 0x40
   821be:	46d1      	mov	r9, sl
   821c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
   821c2:	1c48      	adds	r0, r1, #1
   821c4:	e5b1      	b.n	81d2a <_vfiprintf_r+0x75a>
   821c6:	9910      	ldr	r1, [sp, #64]	; 0x40
   821c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
   821ca:	3101      	adds	r1, #1
   821cc:	4e20      	ldr	r6, [pc, #128]	; (82250 <_vfiprintf_r+0xc80>)
   821ce:	f7ff bb9c 	b.w	8190a <_vfiprintf_r+0x33a>
   821d2:	2c06      	cmp	r4, #6
   821d4:	bf28      	it	cs
   821d6:	2406      	movcs	r4, #6
   821d8:	9507      	str	r5, [sp, #28]
   821da:	9405      	str	r4, [sp, #20]
   821dc:	9401      	str	r4, [sp, #4]
   821de:	f8df b074 	ldr.w	fp, [pc, #116]	; 82254 <_vfiprintf_r+0xc84>
   821e2:	e4e3      	b.n	81bac <_vfiprintf_r+0x5dc>
   821e4:	9810      	ldr	r0, [sp, #64]	; 0x40
   821e6:	4e1a      	ldr	r6, [pc, #104]	; (82250 <_vfiprintf_r+0xc80>)
   821e8:	3001      	adds	r0, #1
   821ea:	e60e      	b.n	81e0a <_vfiprintf_r+0x83a>
   821ec:	4686      	mov	lr, r0
   821ee:	4d17      	ldr	r5, [pc, #92]	; (8224c <_vfiprintf_r+0xc7c>)
   821f0:	f7ff bbe2 	b.w	819b8 <_vfiprintf_r+0x3e8>
   821f4:	9405      	str	r4, [sp, #20]
   821f6:	9507      	str	r5, [sp, #28]
   821f8:	9302      	str	r3, [sp, #8]
   821fa:	4604      	mov	r4, r0
   821fc:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   82200:	f7ff bb3e 	b.w	81880 <_vfiprintf_r+0x2b0>
   82204:	9806      	ldr	r0, [sp, #24]
   82206:	aa0f      	add	r2, sp, #60	; 0x3c
   82208:	4659      	mov	r1, fp
   8220a:	f7ff f9a1 	bl	81550 <__sprint_r.part.0>
   8220e:	2800      	cmp	r0, #0
   82210:	f43f ae2e 	beq.w	81e70 <_vfiprintf_r+0x8a0>
   82214:	e62e      	b.n	81e74 <_vfiprintf_r+0x8a4>
   82216:	9907      	ldr	r1, [sp, #28]
   82218:	f898 2001 	ldrb.w	r2, [r8, #1]
   8221c:	680c      	ldr	r4, [r1, #0]
   8221e:	3104      	adds	r1, #4
   82220:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
   82224:	46b8      	mov	r8, r7
   82226:	9107      	str	r1, [sp, #28]
   82228:	f7ff ba44 	b.w	816b4 <_vfiprintf_r+0xe4>
   8222c:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   82230:	e4a7      	b.n	81b82 <_vfiprintf_r+0x5b2>
   82232:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   82236:	e521      	b.n	81c7c <_vfiprintf_r+0x6ac>
   82238:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   8223c:	e47c      	b.n	81b38 <_vfiprintf_r+0x568>
   8223e:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   82242:	e43f      	b.n	81ac4 <_vfiprintf_r+0x4f4>
   82244:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   82248:	f7ff bbfa 	b.w	81a40 <_vfiprintf_r+0x470>
   8224c:	0008438c 	.word	0x0008438c
   82250:	0008437c 	.word	0x0008437c
   82254:	00084374 	.word	0x00084374

00082258 <__sbprintf>:
   82258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8225c:	460c      	mov	r4, r1
   8225e:	f04f 0e00 	mov.w	lr, #0
   82262:	f44f 6580 	mov.w	r5, #1024	; 0x400
   82266:	4606      	mov	r6, r0
   82268:	4617      	mov	r7, r2
   8226a:	4698      	mov	r8, r3
   8226c:	6e62      	ldr	r2, [r4, #100]	; 0x64
   8226e:	89e3      	ldrh	r3, [r4, #14]
   82270:	8989      	ldrh	r1, [r1, #12]
   82272:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   82276:	f021 0102 	bic.w	r1, r1, #2
   8227a:	9219      	str	r2, [sp, #100]	; 0x64
   8227c:	f8ad 300e 	strh.w	r3, [sp, #14]
   82280:	69e2      	ldr	r2, [r4, #28]
   82282:	6a63      	ldr	r3, [r4, #36]	; 0x24
   82284:	f8ad 100c 	strh.w	r1, [sp, #12]
   82288:	a816      	add	r0, sp, #88	; 0x58
   8228a:	a91a      	add	r1, sp, #104	; 0x68
   8228c:	f8cd e018 	str.w	lr, [sp, #24]
   82290:	9207      	str	r2, [sp, #28]
   82292:	9309      	str	r3, [sp, #36]	; 0x24
   82294:	9100      	str	r1, [sp, #0]
   82296:	9104      	str	r1, [sp, #16]
   82298:	9502      	str	r5, [sp, #8]
   8229a:	9505      	str	r5, [sp, #20]
   8229c:	f000 fd7a 	bl	82d94 <__retarget_lock_init_recursive>
   822a0:	4643      	mov	r3, r8
   822a2:	463a      	mov	r2, r7
   822a4:	4669      	mov	r1, sp
   822a6:	4630      	mov	r0, r6
   822a8:	f7ff f992 	bl	815d0 <_vfiprintf_r>
   822ac:	1e05      	subs	r5, r0, #0
   822ae:	db07      	blt.n	822c0 <__sbprintf+0x68>
   822b0:	4630      	mov	r0, r6
   822b2:	4669      	mov	r1, sp
   822b4:	f000 f924 	bl	82500 <_fflush_r>
   822b8:	2800      	cmp	r0, #0
   822ba:	bf18      	it	ne
   822bc:	f04f 35ff 	movne.w	r5, #4294967295
   822c0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   822c4:	065b      	lsls	r3, r3, #25
   822c6:	d503      	bpl.n	822d0 <__sbprintf+0x78>
   822c8:	89a3      	ldrh	r3, [r4, #12]
   822ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   822ce:	81a3      	strh	r3, [r4, #12]
   822d0:	9816      	ldr	r0, [sp, #88]	; 0x58
   822d2:	f000 fd61 	bl	82d98 <__retarget_lock_close_recursive>
   822d6:	4628      	mov	r0, r5
   822d8:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   822dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000822e0 <__swsetup_r>:
   822e0:	b538      	push	{r3, r4, r5, lr}
   822e2:	4b30      	ldr	r3, [pc, #192]	; (823a4 <__swsetup_r+0xc4>)
   822e4:	4605      	mov	r5, r0
   822e6:	6818      	ldr	r0, [r3, #0]
   822e8:	460c      	mov	r4, r1
   822ea:	b110      	cbz	r0, 822f2 <__swsetup_r+0x12>
   822ec:	6b83      	ldr	r3, [r0, #56]	; 0x38
   822ee:	2b00      	cmp	r3, #0
   822f0:	d038      	beq.n	82364 <__swsetup_r+0x84>
   822f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   822f6:	b293      	uxth	r3, r2
   822f8:	0718      	lsls	r0, r3, #28
   822fa:	d50c      	bpl.n	82316 <__swsetup_r+0x36>
   822fc:	6920      	ldr	r0, [r4, #16]
   822fe:	b1a8      	cbz	r0, 8232c <__swsetup_r+0x4c>
   82300:	f013 0201 	ands.w	r2, r3, #1
   82304:	d01e      	beq.n	82344 <__swsetup_r+0x64>
   82306:	2200      	movs	r2, #0
   82308:	6963      	ldr	r3, [r4, #20]
   8230a:	60a2      	str	r2, [r4, #8]
   8230c:	425b      	negs	r3, r3
   8230e:	61a3      	str	r3, [r4, #24]
   82310:	b1f0      	cbz	r0, 82350 <__swsetup_r+0x70>
   82312:	2000      	movs	r0, #0
   82314:	bd38      	pop	{r3, r4, r5, pc}
   82316:	06d9      	lsls	r1, r3, #27
   82318:	d53b      	bpl.n	82392 <__swsetup_r+0xb2>
   8231a:	0758      	lsls	r0, r3, #29
   8231c:	d425      	bmi.n	8236a <__swsetup_r+0x8a>
   8231e:	6920      	ldr	r0, [r4, #16]
   82320:	f042 0308 	orr.w	r3, r2, #8
   82324:	81a3      	strh	r3, [r4, #12]
   82326:	b29b      	uxth	r3, r3
   82328:	2800      	cmp	r0, #0
   8232a:	d1e9      	bne.n	82300 <__swsetup_r+0x20>
   8232c:	f403 7220 	and.w	r2, r3, #640	; 0x280
   82330:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   82334:	d0e4      	beq.n	82300 <__swsetup_r+0x20>
   82336:	4628      	mov	r0, r5
   82338:	4621      	mov	r1, r4
   8233a:	f000 fd61 	bl	82e00 <__smakebuf_r>
   8233e:	89a3      	ldrh	r3, [r4, #12]
   82340:	6920      	ldr	r0, [r4, #16]
   82342:	e7dd      	b.n	82300 <__swsetup_r+0x20>
   82344:	0799      	lsls	r1, r3, #30
   82346:	bf58      	it	pl
   82348:	6962      	ldrpl	r2, [r4, #20]
   8234a:	60a2      	str	r2, [r4, #8]
   8234c:	2800      	cmp	r0, #0
   8234e:	d1e0      	bne.n	82312 <__swsetup_r+0x32>
   82350:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82354:	061a      	lsls	r2, r3, #24
   82356:	d5dd      	bpl.n	82314 <__swsetup_r+0x34>
   82358:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8235c:	81a3      	strh	r3, [r4, #12]
   8235e:	f04f 30ff 	mov.w	r0, #4294967295
   82362:	bd38      	pop	{r3, r4, r5, pc}
   82364:	f000 f936 	bl	825d4 <__sinit>
   82368:	e7c3      	b.n	822f2 <__swsetup_r+0x12>
   8236a:	6b21      	ldr	r1, [r4, #48]	; 0x30
   8236c:	b151      	cbz	r1, 82384 <__swsetup_r+0xa4>
   8236e:	f104 0340 	add.w	r3, r4, #64	; 0x40
   82372:	4299      	cmp	r1, r3
   82374:	d004      	beq.n	82380 <__swsetup_r+0xa0>
   82376:	4628      	mov	r0, r5
   82378:	f000 fa52 	bl	82820 <_free_r>
   8237c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   82380:	2300      	movs	r3, #0
   82382:	6323      	str	r3, [r4, #48]	; 0x30
   82384:	2300      	movs	r3, #0
   82386:	6920      	ldr	r0, [r4, #16]
   82388:	f022 0224 	bic.w	r2, r2, #36	; 0x24
   8238c:	e884 0009 	stmia.w	r4, {r0, r3}
   82390:	e7c6      	b.n	82320 <__swsetup_r+0x40>
   82392:	2309      	movs	r3, #9
   82394:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   82398:	602b      	str	r3, [r5, #0]
   8239a:	f04f 30ff 	mov.w	r0, #4294967295
   8239e:	81a2      	strh	r2, [r4, #12]
   823a0:	bd38      	pop	{r3, r4, r5, pc}
   823a2:	bf00      	nop
   823a4:	2007013c 	.word	0x2007013c

000823a8 <register_fini>:
   823a8:	4b02      	ldr	r3, [pc, #8]	; (823b4 <register_fini+0xc>)
   823aa:	b113      	cbz	r3, 823b2 <register_fini+0xa>
   823ac:	4802      	ldr	r0, [pc, #8]	; (823b8 <register_fini+0x10>)
   823ae:	f000 b805 	b.w	823bc <atexit>
   823b2:	4770      	bx	lr
   823b4:	00000000 	.word	0x00000000
   823b8:	0008264d 	.word	0x0008264d

000823bc <atexit>:
   823bc:	2300      	movs	r3, #0
   823be:	4601      	mov	r1, r0
   823c0:	461a      	mov	r2, r3
   823c2:	4618      	mov	r0, r3
   823c4:	f001 bcc6 	b.w	83d54 <__register_exitproc>

000823c8 <__sflush_r>:
   823c8:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   823cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   823d0:	b29a      	uxth	r2, r3
   823d2:	460d      	mov	r5, r1
   823d4:	0711      	lsls	r1, r2, #28
   823d6:	4680      	mov	r8, r0
   823d8:	d43a      	bmi.n	82450 <__sflush_r+0x88>
   823da:	686a      	ldr	r2, [r5, #4]
   823dc:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   823e0:	2a00      	cmp	r2, #0
   823e2:	81ab      	strh	r3, [r5, #12]
   823e4:	dd70      	ble.n	824c8 <__sflush_r+0x100>
   823e6:	6aac      	ldr	r4, [r5, #40]	; 0x28
   823e8:	2c00      	cmp	r4, #0
   823ea:	d04a      	beq.n	82482 <__sflush_r+0xba>
   823ec:	2200      	movs	r2, #0
   823ee:	b29b      	uxth	r3, r3
   823f0:	f8d8 6000 	ldr.w	r6, [r8]
   823f4:	f8c8 2000 	str.w	r2, [r8]
   823f8:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   823fc:	d068      	beq.n	824d0 <__sflush_r+0x108>
   823fe:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   82400:	075f      	lsls	r7, r3, #29
   82402:	d505      	bpl.n	82410 <__sflush_r+0x48>
   82404:	6869      	ldr	r1, [r5, #4]
   82406:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   82408:	1a52      	subs	r2, r2, r1
   8240a:	b10b      	cbz	r3, 82410 <__sflush_r+0x48>
   8240c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   8240e:	1ad2      	subs	r2, r2, r3
   82410:	2300      	movs	r3, #0
   82412:	69e9      	ldr	r1, [r5, #28]
   82414:	4640      	mov	r0, r8
   82416:	47a0      	blx	r4
   82418:	1c44      	adds	r4, r0, #1
   8241a:	d03d      	beq.n	82498 <__sflush_r+0xd0>
   8241c:	2100      	movs	r1, #0
   8241e:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   82422:	692a      	ldr	r2, [r5, #16]
   82424:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   82428:	81ab      	strh	r3, [r5, #12]
   8242a:	04db      	lsls	r3, r3, #19
   8242c:	6069      	str	r1, [r5, #4]
   8242e:	602a      	str	r2, [r5, #0]
   82430:	d448      	bmi.n	824c4 <__sflush_r+0xfc>
   82432:	6b29      	ldr	r1, [r5, #48]	; 0x30
   82434:	f8c8 6000 	str.w	r6, [r8]
   82438:	b319      	cbz	r1, 82482 <__sflush_r+0xba>
   8243a:	f105 0340 	add.w	r3, r5, #64	; 0x40
   8243e:	4299      	cmp	r1, r3
   82440:	d002      	beq.n	82448 <__sflush_r+0x80>
   82442:	4640      	mov	r0, r8
   82444:	f000 f9ec 	bl	82820 <_free_r>
   82448:	2000      	movs	r0, #0
   8244a:	6328      	str	r0, [r5, #48]	; 0x30
   8244c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82450:	692e      	ldr	r6, [r5, #16]
   82452:	b1b6      	cbz	r6, 82482 <__sflush_r+0xba>
   82454:	0791      	lsls	r1, r2, #30
   82456:	bf18      	it	ne
   82458:	2300      	movne	r3, #0
   8245a:	682c      	ldr	r4, [r5, #0]
   8245c:	bf08      	it	eq
   8245e:	696b      	ldreq	r3, [r5, #20]
   82460:	602e      	str	r6, [r5, #0]
   82462:	1ba4      	subs	r4, r4, r6
   82464:	60ab      	str	r3, [r5, #8]
   82466:	e00a      	b.n	8247e <__sflush_r+0xb6>
   82468:	4623      	mov	r3, r4
   8246a:	4632      	mov	r2, r6
   8246c:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   8246e:	69e9      	ldr	r1, [r5, #28]
   82470:	4640      	mov	r0, r8
   82472:	47b8      	blx	r7
   82474:	2800      	cmp	r0, #0
   82476:	eba4 0400 	sub.w	r4, r4, r0
   8247a:	4406      	add	r6, r0
   8247c:	dd04      	ble.n	82488 <__sflush_r+0xc0>
   8247e:	2c00      	cmp	r4, #0
   82480:	dcf2      	bgt.n	82468 <__sflush_r+0xa0>
   82482:	2000      	movs	r0, #0
   82484:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82488:	89ab      	ldrh	r3, [r5, #12]
   8248a:	f04f 30ff 	mov.w	r0, #4294967295
   8248e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82492:	81ab      	strh	r3, [r5, #12]
   82494:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82498:	f8d8 4000 	ldr.w	r4, [r8]
   8249c:	2c1d      	cmp	r4, #29
   8249e:	d8f3      	bhi.n	82488 <__sflush_r+0xc0>
   824a0:	4b16      	ldr	r3, [pc, #88]	; (824fc <__sflush_r+0x134>)
   824a2:	40e3      	lsrs	r3, r4
   824a4:	43db      	mvns	r3, r3
   824a6:	f013 0301 	ands.w	r3, r3, #1
   824aa:	d1ed      	bne.n	82488 <__sflush_r+0xc0>
   824ac:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   824b0:	6929      	ldr	r1, [r5, #16]
   824b2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   824b6:	81aa      	strh	r2, [r5, #12]
   824b8:	04d2      	lsls	r2, r2, #19
   824ba:	606b      	str	r3, [r5, #4]
   824bc:	6029      	str	r1, [r5, #0]
   824be:	d5b8      	bpl.n	82432 <__sflush_r+0x6a>
   824c0:	2c00      	cmp	r4, #0
   824c2:	d1b6      	bne.n	82432 <__sflush_r+0x6a>
   824c4:	6528      	str	r0, [r5, #80]	; 0x50
   824c6:	e7b4      	b.n	82432 <__sflush_r+0x6a>
   824c8:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   824ca:	2a00      	cmp	r2, #0
   824cc:	dc8b      	bgt.n	823e6 <__sflush_r+0x1e>
   824ce:	e7d8      	b.n	82482 <__sflush_r+0xba>
   824d0:	2301      	movs	r3, #1
   824d2:	69e9      	ldr	r1, [r5, #28]
   824d4:	4640      	mov	r0, r8
   824d6:	47a0      	blx	r4
   824d8:	1c43      	adds	r3, r0, #1
   824da:	4602      	mov	r2, r0
   824dc:	d002      	beq.n	824e4 <__sflush_r+0x11c>
   824de:	89ab      	ldrh	r3, [r5, #12]
   824e0:	6aac      	ldr	r4, [r5, #40]	; 0x28
   824e2:	e78d      	b.n	82400 <__sflush_r+0x38>
   824e4:	f8d8 3000 	ldr.w	r3, [r8]
   824e8:	2b00      	cmp	r3, #0
   824ea:	d0f8      	beq.n	824de <__sflush_r+0x116>
   824ec:	2b1d      	cmp	r3, #29
   824ee:	d001      	beq.n	824f4 <__sflush_r+0x12c>
   824f0:	2b16      	cmp	r3, #22
   824f2:	d1c9      	bne.n	82488 <__sflush_r+0xc0>
   824f4:	f8c8 6000 	str.w	r6, [r8]
   824f8:	e7c3      	b.n	82482 <__sflush_r+0xba>
   824fa:	bf00      	nop
   824fc:	20400001 	.word	0x20400001

00082500 <_fflush_r>:
   82500:	b538      	push	{r3, r4, r5, lr}
   82502:	460d      	mov	r5, r1
   82504:	4604      	mov	r4, r0
   82506:	b108      	cbz	r0, 8250c <_fflush_r+0xc>
   82508:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8250a:	b1bb      	cbz	r3, 8253c <_fflush_r+0x3c>
   8250c:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   82510:	b188      	cbz	r0, 82536 <_fflush_r+0x36>
   82512:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   82514:	07db      	lsls	r3, r3, #31
   82516:	d401      	bmi.n	8251c <_fflush_r+0x1c>
   82518:	0581      	lsls	r1, r0, #22
   8251a:	d517      	bpl.n	8254c <_fflush_r+0x4c>
   8251c:	4620      	mov	r0, r4
   8251e:	4629      	mov	r1, r5
   82520:	f7ff ff52 	bl	823c8 <__sflush_r>
   82524:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   82526:	4604      	mov	r4, r0
   82528:	07da      	lsls	r2, r3, #31
   8252a:	d402      	bmi.n	82532 <_fflush_r+0x32>
   8252c:	89ab      	ldrh	r3, [r5, #12]
   8252e:	059b      	lsls	r3, r3, #22
   82530:	d507      	bpl.n	82542 <_fflush_r+0x42>
   82532:	4620      	mov	r0, r4
   82534:	bd38      	pop	{r3, r4, r5, pc}
   82536:	4604      	mov	r4, r0
   82538:	4620      	mov	r0, r4
   8253a:	bd38      	pop	{r3, r4, r5, pc}
   8253c:	f000 f84a 	bl	825d4 <__sinit>
   82540:	e7e4      	b.n	8250c <_fflush_r+0xc>
   82542:	6da8      	ldr	r0, [r5, #88]	; 0x58
   82544:	f000 fc2c 	bl	82da0 <__retarget_lock_release_recursive>
   82548:	4620      	mov	r0, r4
   8254a:	bd38      	pop	{r3, r4, r5, pc}
   8254c:	6da8      	ldr	r0, [r5, #88]	; 0x58
   8254e:	f000 fc25 	bl	82d9c <__retarget_lock_acquire_recursive>
   82552:	e7e3      	b.n	8251c <_fflush_r+0x1c>

00082554 <fflush>:
   82554:	b120      	cbz	r0, 82560 <fflush+0xc>
   82556:	4b05      	ldr	r3, [pc, #20]	; (8256c <fflush+0x18>)
   82558:	4601      	mov	r1, r0
   8255a:	6818      	ldr	r0, [r3, #0]
   8255c:	f7ff bfd0 	b.w	82500 <_fflush_r>
   82560:	4b03      	ldr	r3, [pc, #12]	; (82570 <fflush+0x1c>)
   82562:	4904      	ldr	r1, [pc, #16]	; (82574 <fflush+0x20>)
   82564:	6818      	ldr	r0, [r3, #0]
   82566:	f000 bbdf 	b.w	82d28 <_fwalk_reent>
   8256a:	bf00      	nop
   8256c:	2007013c 	.word	0x2007013c
   82570:	00084348 	.word	0x00084348
   82574:	00082501 	.word	0x00082501

00082578 <_cleanup_r>:
   82578:	4901      	ldr	r1, [pc, #4]	; (82580 <_cleanup_r+0x8>)
   8257a:	f000 bbd5 	b.w	82d28 <_fwalk_reent>
   8257e:	bf00      	nop
   82580:	00083e3d 	.word	0x00083e3d

00082584 <std.isra.0>:
   82584:	2300      	movs	r3, #0
   82586:	b510      	push	{r4, lr}
   82588:	4604      	mov	r4, r0
   8258a:	8181      	strh	r1, [r0, #12]
   8258c:	81c2      	strh	r2, [r0, #14]
   8258e:	6003      	str	r3, [r0, #0]
   82590:	6043      	str	r3, [r0, #4]
   82592:	6083      	str	r3, [r0, #8]
   82594:	6643      	str	r3, [r0, #100]	; 0x64
   82596:	6103      	str	r3, [r0, #16]
   82598:	6143      	str	r3, [r0, #20]
   8259a:	6183      	str	r3, [r0, #24]
   8259c:	4619      	mov	r1, r3
   8259e:	2208      	movs	r2, #8
   825a0:	305c      	adds	r0, #92	; 0x5c
   825a2:	f7fe fe9d 	bl	812e0 <memset>
   825a6:	4807      	ldr	r0, [pc, #28]	; (825c4 <std.isra.0+0x40>)
   825a8:	4907      	ldr	r1, [pc, #28]	; (825c8 <std.isra.0+0x44>)
   825aa:	4a08      	ldr	r2, [pc, #32]	; (825cc <std.isra.0+0x48>)
   825ac:	4b08      	ldr	r3, [pc, #32]	; (825d0 <std.isra.0+0x4c>)
   825ae:	6220      	str	r0, [r4, #32]
   825b0:	61e4      	str	r4, [r4, #28]
   825b2:	6261      	str	r1, [r4, #36]	; 0x24
   825b4:	62a2      	str	r2, [r4, #40]	; 0x28
   825b6:	62e3      	str	r3, [r4, #44]	; 0x2c
   825b8:	f104 0058 	add.w	r0, r4, #88	; 0x58
   825bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   825c0:	f000 bbe8 	b.w	82d94 <__retarget_lock_init_recursive>
   825c4:	00083b29 	.word	0x00083b29
   825c8:	00083b4d 	.word	0x00083b4d
   825cc:	00083b89 	.word	0x00083b89
   825d0:	00083ba9 	.word	0x00083ba9

000825d4 <__sinit>:
   825d4:	b510      	push	{r4, lr}
   825d6:	4604      	mov	r4, r0
   825d8:	4814      	ldr	r0, [pc, #80]	; (8262c <__sinit+0x58>)
   825da:	f000 fbdf 	bl	82d9c <__retarget_lock_acquire_recursive>
   825de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   825e0:	b9fa      	cbnz	r2, 82622 <__sinit+0x4e>
   825e2:	2003      	movs	r0, #3
   825e4:	4912      	ldr	r1, [pc, #72]	; (82630 <__sinit+0x5c>)
   825e6:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   825ea:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   825ee:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   825f2:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   825f6:	63e1      	str	r1, [r4, #60]	; 0x3c
   825f8:	6860      	ldr	r0, [r4, #4]
   825fa:	2104      	movs	r1, #4
   825fc:	f7ff ffc2 	bl	82584 <std.isra.0>
   82600:	68a0      	ldr	r0, [r4, #8]
   82602:	2201      	movs	r2, #1
   82604:	2109      	movs	r1, #9
   82606:	f7ff ffbd 	bl	82584 <std.isra.0>
   8260a:	68e0      	ldr	r0, [r4, #12]
   8260c:	2202      	movs	r2, #2
   8260e:	2112      	movs	r1, #18
   82610:	f7ff ffb8 	bl	82584 <std.isra.0>
   82614:	2301      	movs	r3, #1
   82616:	4805      	ldr	r0, [pc, #20]	; (8262c <__sinit+0x58>)
   82618:	63a3      	str	r3, [r4, #56]	; 0x38
   8261a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   8261e:	f000 bbbf 	b.w	82da0 <__retarget_lock_release_recursive>
   82622:	4802      	ldr	r0, [pc, #8]	; (8262c <__sinit+0x58>)
   82624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   82628:	f000 bbba 	b.w	82da0 <__retarget_lock_release_recursive>
   8262c:	20070bd4 	.word	0x20070bd4
   82630:	00082579 	.word	0x00082579

00082634 <__sfp_lock_acquire>:
   82634:	4801      	ldr	r0, [pc, #4]	; (8263c <__sfp_lock_acquire+0x8>)
   82636:	f000 bbb1 	b.w	82d9c <__retarget_lock_acquire_recursive>
   8263a:	bf00      	nop
   8263c:	20070be8 	.word	0x20070be8

00082640 <__sfp_lock_release>:
   82640:	4801      	ldr	r0, [pc, #4]	; (82648 <__sfp_lock_release+0x8>)
   82642:	f000 bbad 	b.w	82da0 <__retarget_lock_release_recursive>
   82646:	bf00      	nop
   82648:	20070be8 	.word	0x20070be8

0008264c <__libc_fini_array>:
   8264c:	b538      	push	{r3, r4, r5, lr}
   8264e:	4c0a      	ldr	r4, [pc, #40]	; (82678 <__libc_fini_array+0x2c>)
   82650:	4d0a      	ldr	r5, [pc, #40]	; (8267c <__libc_fini_array+0x30>)
   82652:	1b64      	subs	r4, r4, r5
   82654:	10a4      	asrs	r4, r4, #2
   82656:	d00a      	beq.n	8266e <__libc_fini_array+0x22>
   82658:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   8265c:	3b01      	subs	r3, #1
   8265e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   82662:	3c01      	subs	r4, #1
   82664:	f855 3904 	ldr.w	r3, [r5], #-4
   82668:	4798      	blx	r3
   8266a:	2c00      	cmp	r4, #0
   8266c:	d1f9      	bne.n	82662 <__libc_fini_array+0x16>
   8266e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   82672:	f001 bf27 	b.w	844c4 <_fini>
   82676:	bf00      	nop
   82678:	000844d4 	.word	0x000844d4
   8267c:	000844d0 	.word	0x000844d0

00082680 <__fputwc>:
   82680:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   82684:	b083      	sub	sp, #12
   82686:	4607      	mov	r7, r0
   82688:	4688      	mov	r8, r1
   8268a:	4614      	mov	r4, r2
   8268c:	f000 fb74 	bl	82d78 <__locale_mb_cur_max>
   82690:	2801      	cmp	r0, #1
   82692:	d033      	beq.n	826fc <__fputwc+0x7c>
   82694:	4642      	mov	r2, r8
   82696:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   8269a:	a901      	add	r1, sp, #4
   8269c:	4638      	mov	r0, r7
   8269e:	f001 fb0d 	bl	83cbc <_wcrtomb_r>
   826a2:	1c42      	adds	r2, r0, #1
   826a4:	4606      	mov	r6, r0
   826a6:	d022      	beq.n	826ee <__fputwc+0x6e>
   826a8:	b390      	cbz	r0, 82710 <__fputwc+0x90>
   826aa:	f89d 1004 	ldrb.w	r1, [sp, #4]
   826ae:	2500      	movs	r5, #0
   826b0:	f10d 0904 	add.w	r9, sp, #4
   826b4:	e008      	b.n	826c8 <__fputwc+0x48>
   826b6:	6823      	ldr	r3, [r4, #0]
   826b8:	1c5a      	adds	r2, r3, #1
   826ba:	6022      	str	r2, [r4, #0]
   826bc:	7019      	strb	r1, [r3, #0]
   826be:	3501      	adds	r5, #1
   826c0:	42b5      	cmp	r5, r6
   826c2:	d225      	bcs.n	82710 <__fputwc+0x90>
   826c4:	f815 1009 	ldrb.w	r1, [r5, r9]
   826c8:	68a3      	ldr	r3, [r4, #8]
   826ca:	3b01      	subs	r3, #1
   826cc:	2b00      	cmp	r3, #0
   826ce:	60a3      	str	r3, [r4, #8]
   826d0:	daf1      	bge.n	826b6 <__fputwc+0x36>
   826d2:	69a2      	ldr	r2, [r4, #24]
   826d4:	4293      	cmp	r3, r2
   826d6:	db01      	blt.n	826dc <__fputwc+0x5c>
   826d8:	290a      	cmp	r1, #10
   826da:	d1ec      	bne.n	826b6 <__fputwc+0x36>
   826dc:	4622      	mov	r2, r4
   826de:	4638      	mov	r0, r7
   826e0:	f001 fa94 	bl	83c0c <__swbuf_r>
   826e4:	1c43      	adds	r3, r0, #1
   826e6:	d1ea      	bne.n	826be <__fputwc+0x3e>
   826e8:	b003      	add	sp, #12
   826ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   826ee:	89a3      	ldrh	r3, [r4, #12]
   826f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   826f4:	81a3      	strh	r3, [r4, #12]
   826f6:	b003      	add	sp, #12
   826f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   826fc:	f108 33ff 	add.w	r3, r8, #4294967295
   82700:	2bfe      	cmp	r3, #254	; 0xfe
   82702:	d8c7      	bhi.n	82694 <__fputwc+0x14>
   82704:	fa5f f188 	uxtb.w	r1, r8
   82708:	4606      	mov	r6, r0
   8270a:	f88d 1004 	strb.w	r1, [sp, #4]
   8270e:	e7ce      	b.n	826ae <__fputwc+0x2e>
   82710:	4640      	mov	r0, r8
   82712:	b003      	add	sp, #12
   82714:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00082718 <_fputwc_r>:
   82718:	b530      	push	{r4, r5, lr}
   8271a:	6e53      	ldr	r3, [r2, #100]	; 0x64
   8271c:	4614      	mov	r4, r2
   8271e:	f013 0f01 	tst.w	r3, #1
   82722:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   82726:	b083      	sub	sp, #12
   82728:	4605      	mov	r5, r0
   8272a:	b29a      	uxth	r2, r3
   8272c:	d101      	bne.n	82732 <_fputwc_r+0x1a>
   8272e:	0590      	lsls	r0, r2, #22
   82730:	d51c      	bpl.n	8276c <_fputwc_r+0x54>
   82732:	0490      	lsls	r0, r2, #18
   82734:	d406      	bmi.n	82744 <_fputwc_r+0x2c>
   82736:	6e62      	ldr	r2, [r4, #100]	; 0x64
   82738:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   8273c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   82740:	81a3      	strh	r3, [r4, #12]
   82742:	6662      	str	r2, [r4, #100]	; 0x64
   82744:	4628      	mov	r0, r5
   82746:	4622      	mov	r2, r4
   82748:	f7ff ff9a 	bl	82680 <__fputwc>
   8274c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8274e:	4605      	mov	r5, r0
   82750:	07da      	lsls	r2, r3, #31
   82752:	d402      	bmi.n	8275a <_fputwc_r+0x42>
   82754:	89a3      	ldrh	r3, [r4, #12]
   82756:	059b      	lsls	r3, r3, #22
   82758:	d502      	bpl.n	82760 <_fputwc_r+0x48>
   8275a:	4628      	mov	r0, r5
   8275c:	b003      	add	sp, #12
   8275e:	bd30      	pop	{r4, r5, pc}
   82760:	6da0      	ldr	r0, [r4, #88]	; 0x58
   82762:	f000 fb1d 	bl	82da0 <__retarget_lock_release_recursive>
   82766:	4628      	mov	r0, r5
   82768:	b003      	add	sp, #12
   8276a:	bd30      	pop	{r4, r5, pc}
   8276c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8276e:	9101      	str	r1, [sp, #4]
   82770:	f000 fb14 	bl	82d9c <__retarget_lock_acquire_recursive>
   82774:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82778:	9901      	ldr	r1, [sp, #4]
   8277a:	b29a      	uxth	r2, r3
   8277c:	e7d9      	b.n	82732 <_fputwc_r+0x1a>
   8277e:	bf00      	nop

00082780 <_malloc_trim_r>:
   82780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82782:	460c      	mov	r4, r1
   82784:	4f23      	ldr	r7, [pc, #140]	; (82814 <_malloc_trim_r+0x94>)
   82786:	4606      	mov	r6, r0
   82788:	f000 ff64 	bl	83654 <__malloc_lock>
   8278c:	68bb      	ldr	r3, [r7, #8]
   8278e:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   82792:	685d      	ldr	r5, [r3, #4]
   82794:	310f      	adds	r1, #15
   82796:	f025 0503 	bic.w	r5, r5, #3
   8279a:	4429      	add	r1, r5
   8279c:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   827a0:	f021 010f 	bic.w	r1, r1, #15
   827a4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   827a8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   827ac:	db07      	blt.n	827be <_malloc_trim_r+0x3e>
   827ae:	2100      	movs	r1, #0
   827b0:	4630      	mov	r0, r6
   827b2:	f001 f9a7 	bl	83b04 <_sbrk_r>
   827b6:	68bb      	ldr	r3, [r7, #8]
   827b8:	442b      	add	r3, r5
   827ba:	4298      	cmp	r0, r3
   827bc:	d004      	beq.n	827c8 <_malloc_trim_r+0x48>
   827be:	4630      	mov	r0, r6
   827c0:	f000 ff4e 	bl	83660 <__malloc_unlock>
   827c4:	2000      	movs	r0, #0
   827c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   827c8:	4261      	negs	r1, r4
   827ca:	4630      	mov	r0, r6
   827cc:	f001 f99a 	bl	83b04 <_sbrk_r>
   827d0:	3001      	adds	r0, #1
   827d2:	d00d      	beq.n	827f0 <_malloc_trim_r+0x70>
   827d4:	4b10      	ldr	r3, [pc, #64]	; (82818 <_malloc_trim_r+0x98>)
   827d6:	68ba      	ldr	r2, [r7, #8]
   827d8:	6819      	ldr	r1, [r3, #0]
   827da:	1b2d      	subs	r5, r5, r4
   827dc:	f045 0501 	orr.w	r5, r5, #1
   827e0:	4630      	mov	r0, r6
   827e2:	1b09      	subs	r1, r1, r4
   827e4:	6055      	str	r5, [r2, #4]
   827e6:	6019      	str	r1, [r3, #0]
   827e8:	f000 ff3a 	bl	83660 <__malloc_unlock>
   827ec:	2001      	movs	r0, #1
   827ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   827f0:	2100      	movs	r1, #0
   827f2:	4630      	mov	r0, r6
   827f4:	f001 f986 	bl	83b04 <_sbrk_r>
   827f8:	68ba      	ldr	r2, [r7, #8]
   827fa:	1a83      	subs	r3, r0, r2
   827fc:	2b0f      	cmp	r3, #15
   827fe:	ddde      	ble.n	827be <_malloc_trim_r+0x3e>
   82800:	4c06      	ldr	r4, [pc, #24]	; (8281c <_malloc_trim_r+0x9c>)
   82802:	4905      	ldr	r1, [pc, #20]	; (82818 <_malloc_trim_r+0x98>)
   82804:	6824      	ldr	r4, [r4, #0]
   82806:	f043 0301 	orr.w	r3, r3, #1
   8280a:	1b00      	subs	r0, r0, r4
   8280c:	6053      	str	r3, [r2, #4]
   8280e:	6008      	str	r0, [r1, #0]
   82810:	e7d5      	b.n	827be <_malloc_trim_r+0x3e>
   82812:	bf00      	nop
   82814:	200706d8 	.word	0x200706d8
   82818:	20070b78 	.word	0x20070b78
   8281c:	20070ae0 	.word	0x20070ae0

00082820 <_free_r>:
   82820:	2900      	cmp	r1, #0
   82822:	d044      	beq.n	828ae <_free_r+0x8e>
   82824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82828:	460d      	mov	r5, r1
   8282a:	4680      	mov	r8, r0
   8282c:	f000 ff12 	bl	83654 <__malloc_lock>
   82830:	f855 7c04 	ldr.w	r7, [r5, #-4]
   82834:	4969      	ldr	r1, [pc, #420]	; (829dc <_free_r+0x1bc>)
   82836:	f1a5 0408 	sub.w	r4, r5, #8
   8283a:	f027 0301 	bic.w	r3, r7, #1
   8283e:	18e2      	adds	r2, r4, r3
   82840:	688e      	ldr	r6, [r1, #8]
   82842:	6850      	ldr	r0, [r2, #4]
   82844:	42b2      	cmp	r2, r6
   82846:	f020 0003 	bic.w	r0, r0, #3
   8284a:	d05e      	beq.n	8290a <_free_r+0xea>
   8284c:	07fe      	lsls	r6, r7, #31
   8284e:	6050      	str	r0, [r2, #4]
   82850:	d40b      	bmi.n	8286a <_free_r+0x4a>
   82852:	f855 7c08 	ldr.w	r7, [r5, #-8]
   82856:	f101 0e08 	add.w	lr, r1, #8
   8285a:	1be4      	subs	r4, r4, r7
   8285c:	68a5      	ldr	r5, [r4, #8]
   8285e:	443b      	add	r3, r7
   82860:	4575      	cmp	r5, lr
   82862:	d06d      	beq.n	82940 <_free_r+0x120>
   82864:	68e7      	ldr	r7, [r4, #12]
   82866:	60ef      	str	r7, [r5, #12]
   82868:	60bd      	str	r5, [r7, #8]
   8286a:	1815      	adds	r5, r2, r0
   8286c:	686d      	ldr	r5, [r5, #4]
   8286e:	07ed      	lsls	r5, r5, #31
   82870:	d53e      	bpl.n	828f0 <_free_r+0xd0>
   82872:	f043 0201 	orr.w	r2, r3, #1
   82876:	6062      	str	r2, [r4, #4]
   82878:	50e3      	str	r3, [r4, r3]
   8287a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8287e:	d217      	bcs.n	828b0 <_free_r+0x90>
   82880:	2201      	movs	r2, #1
   82882:	08db      	lsrs	r3, r3, #3
   82884:	1098      	asrs	r0, r3, #2
   82886:	684d      	ldr	r5, [r1, #4]
   82888:	4413      	add	r3, r2
   8288a:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   8288e:	4082      	lsls	r2, r0
   82890:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   82894:	432a      	orrs	r2, r5
   82896:	3808      	subs	r0, #8
   82898:	60e0      	str	r0, [r4, #12]
   8289a:	60a7      	str	r7, [r4, #8]
   8289c:	604a      	str	r2, [r1, #4]
   8289e:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   828a2:	60fc      	str	r4, [r7, #12]
   828a4:	4640      	mov	r0, r8
   828a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   828aa:	f000 bed9 	b.w	83660 <__malloc_unlock>
   828ae:	4770      	bx	lr
   828b0:	0a5a      	lsrs	r2, r3, #9
   828b2:	2a04      	cmp	r2, #4
   828b4:	d852      	bhi.n	8295c <_free_r+0x13c>
   828b6:	099a      	lsrs	r2, r3, #6
   828b8:	f102 0739 	add.w	r7, r2, #57	; 0x39
   828bc:	00ff      	lsls	r7, r7, #3
   828be:	f102 0538 	add.w	r5, r2, #56	; 0x38
   828c2:	19c8      	adds	r0, r1, r7
   828c4:	59ca      	ldr	r2, [r1, r7]
   828c6:	3808      	subs	r0, #8
   828c8:	4290      	cmp	r0, r2
   828ca:	d04f      	beq.n	8296c <_free_r+0x14c>
   828cc:	6851      	ldr	r1, [r2, #4]
   828ce:	f021 0103 	bic.w	r1, r1, #3
   828d2:	428b      	cmp	r3, r1
   828d4:	d232      	bcs.n	8293c <_free_r+0x11c>
   828d6:	6892      	ldr	r2, [r2, #8]
   828d8:	4290      	cmp	r0, r2
   828da:	d1f7      	bne.n	828cc <_free_r+0xac>
   828dc:	68c3      	ldr	r3, [r0, #12]
   828de:	60a0      	str	r0, [r4, #8]
   828e0:	60e3      	str	r3, [r4, #12]
   828e2:	609c      	str	r4, [r3, #8]
   828e4:	60c4      	str	r4, [r0, #12]
   828e6:	4640      	mov	r0, r8
   828e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   828ec:	f000 beb8 	b.w	83660 <__malloc_unlock>
   828f0:	6895      	ldr	r5, [r2, #8]
   828f2:	4f3b      	ldr	r7, [pc, #236]	; (829e0 <_free_r+0x1c0>)
   828f4:	4403      	add	r3, r0
   828f6:	42bd      	cmp	r5, r7
   828f8:	d040      	beq.n	8297c <_free_r+0x15c>
   828fa:	68d0      	ldr	r0, [r2, #12]
   828fc:	f043 0201 	orr.w	r2, r3, #1
   82900:	60e8      	str	r0, [r5, #12]
   82902:	6085      	str	r5, [r0, #8]
   82904:	6062      	str	r2, [r4, #4]
   82906:	50e3      	str	r3, [r4, r3]
   82908:	e7b7      	b.n	8287a <_free_r+0x5a>
   8290a:	07ff      	lsls	r7, r7, #31
   8290c:	4403      	add	r3, r0
   8290e:	d407      	bmi.n	82920 <_free_r+0x100>
   82910:	f855 5c08 	ldr.w	r5, [r5, #-8]
   82914:	1b64      	subs	r4, r4, r5
   82916:	68e2      	ldr	r2, [r4, #12]
   82918:	68a0      	ldr	r0, [r4, #8]
   8291a:	442b      	add	r3, r5
   8291c:	60c2      	str	r2, [r0, #12]
   8291e:	6090      	str	r0, [r2, #8]
   82920:	4a30      	ldr	r2, [pc, #192]	; (829e4 <_free_r+0x1c4>)
   82922:	f043 0001 	orr.w	r0, r3, #1
   82926:	6812      	ldr	r2, [r2, #0]
   82928:	6060      	str	r0, [r4, #4]
   8292a:	4293      	cmp	r3, r2
   8292c:	608c      	str	r4, [r1, #8]
   8292e:	d3b9      	bcc.n	828a4 <_free_r+0x84>
   82930:	4b2d      	ldr	r3, [pc, #180]	; (829e8 <_free_r+0x1c8>)
   82932:	4640      	mov	r0, r8
   82934:	6819      	ldr	r1, [r3, #0]
   82936:	f7ff ff23 	bl	82780 <_malloc_trim_r>
   8293a:	e7b3      	b.n	828a4 <_free_r+0x84>
   8293c:	4610      	mov	r0, r2
   8293e:	e7cd      	b.n	828dc <_free_r+0xbc>
   82940:	1811      	adds	r1, r2, r0
   82942:	6849      	ldr	r1, [r1, #4]
   82944:	07c9      	lsls	r1, r1, #31
   82946:	d444      	bmi.n	829d2 <_free_r+0x1b2>
   82948:	6891      	ldr	r1, [r2, #8]
   8294a:	4403      	add	r3, r0
   8294c:	68d2      	ldr	r2, [r2, #12]
   8294e:	f043 0001 	orr.w	r0, r3, #1
   82952:	60ca      	str	r2, [r1, #12]
   82954:	6091      	str	r1, [r2, #8]
   82956:	6060      	str	r0, [r4, #4]
   82958:	50e3      	str	r3, [r4, r3]
   8295a:	e7a3      	b.n	828a4 <_free_r+0x84>
   8295c:	2a14      	cmp	r2, #20
   8295e:	d816      	bhi.n	8298e <_free_r+0x16e>
   82960:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   82964:	00ff      	lsls	r7, r7, #3
   82966:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   8296a:	e7aa      	b.n	828c2 <_free_r+0xa2>
   8296c:	2301      	movs	r3, #1
   8296e:	10aa      	asrs	r2, r5, #2
   82970:	684d      	ldr	r5, [r1, #4]
   82972:	4093      	lsls	r3, r2
   82974:	432b      	orrs	r3, r5
   82976:	604b      	str	r3, [r1, #4]
   82978:	4603      	mov	r3, r0
   8297a:	e7b0      	b.n	828de <_free_r+0xbe>
   8297c:	f043 0201 	orr.w	r2, r3, #1
   82980:	614c      	str	r4, [r1, #20]
   82982:	610c      	str	r4, [r1, #16]
   82984:	60e5      	str	r5, [r4, #12]
   82986:	60a5      	str	r5, [r4, #8]
   82988:	6062      	str	r2, [r4, #4]
   8298a:	50e3      	str	r3, [r4, r3]
   8298c:	e78a      	b.n	828a4 <_free_r+0x84>
   8298e:	2a54      	cmp	r2, #84	; 0x54
   82990:	d806      	bhi.n	829a0 <_free_r+0x180>
   82992:	0b1a      	lsrs	r2, r3, #12
   82994:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   82998:	00ff      	lsls	r7, r7, #3
   8299a:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   8299e:	e790      	b.n	828c2 <_free_r+0xa2>
   829a0:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   829a4:	d806      	bhi.n	829b4 <_free_r+0x194>
   829a6:	0bda      	lsrs	r2, r3, #15
   829a8:	f102 0778 	add.w	r7, r2, #120	; 0x78
   829ac:	00ff      	lsls	r7, r7, #3
   829ae:	f102 0577 	add.w	r5, r2, #119	; 0x77
   829b2:	e786      	b.n	828c2 <_free_r+0xa2>
   829b4:	f240 5054 	movw	r0, #1364	; 0x554
   829b8:	4282      	cmp	r2, r0
   829ba:	d806      	bhi.n	829ca <_free_r+0x1aa>
   829bc:	0c9a      	lsrs	r2, r3, #18
   829be:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   829c2:	00ff      	lsls	r7, r7, #3
   829c4:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   829c8:	e77b      	b.n	828c2 <_free_r+0xa2>
   829ca:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   829ce:	257e      	movs	r5, #126	; 0x7e
   829d0:	e777      	b.n	828c2 <_free_r+0xa2>
   829d2:	f043 0101 	orr.w	r1, r3, #1
   829d6:	6061      	str	r1, [r4, #4]
   829d8:	6013      	str	r3, [r2, #0]
   829da:	e763      	b.n	828a4 <_free_r+0x84>
   829dc:	200706d8 	.word	0x200706d8
   829e0:	200706e0 	.word	0x200706e0
   829e4:	20070ae4 	.word	0x20070ae4
   829e8:	20070ba8 	.word	0x20070ba8

000829ec <__sfvwrite_r>:
   829ec:	6893      	ldr	r3, [r2, #8]
   829ee:	2b00      	cmp	r3, #0
   829f0:	d071      	beq.n	82ad6 <__sfvwrite_r+0xea>
   829f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   829f6:	898b      	ldrh	r3, [r1, #12]
   829f8:	b083      	sub	sp, #12
   829fa:	460c      	mov	r4, r1
   829fc:	0719      	lsls	r1, r3, #28
   829fe:	9000      	str	r0, [sp, #0]
   82a00:	4616      	mov	r6, r2
   82a02:	d525      	bpl.n	82a50 <__sfvwrite_r+0x64>
   82a04:	6922      	ldr	r2, [r4, #16]
   82a06:	b31a      	cbz	r2, 82a50 <__sfvwrite_r+0x64>
   82a08:	f013 0002 	ands.w	r0, r3, #2
   82a0c:	6835      	ldr	r5, [r6, #0]
   82a0e:	d02b      	beq.n	82a68 <__sfvwrite_r+0x7c>
   82a10:	f04f 0900 	mov.w	r9, #0
   82a14:	46b0      	mov	r8, r6
   82a16:	464f      	mov	r7, r9
   82a18:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 82cdc <__sfvwrite_r+0x2f0>
   82a1c:	2f00      	cmp	r7, #0
   82a1e:	d055      	beq.n	82acc <__sfvwrite_r+0xe0>
   82a20:	4557      	cmp	r7, sl
   82a22:	463b      	mov	r3, r7
   82a24:	464a      	mov	r2, r9
   82a26:	bf28      	it	cs
   82a28:	4653      	movcs	r3, sl
   82a2a:	69e1      	ldr	r1, [r4, #28]
   82a2c:	9800      	ldr	r0, [sp, #0]
   82a2e:	6a66      	ldr	r6, [r4, #36]	; 0x24
   82a30:	47b0      	blx	r6
   82a32:	2800      	cmp	r0, #0
   82a34:	dd56      	ble.n	82ae4 <__sfvwrite_r+0xf8>
   82a36:	f8d8 3008 	ldr.w	r3, [r8, #8]
   82a3a:	4481      	add	r9, r0
   82a3c:	1a1b      	subs	r3, r3, r0
   82a3e:	1a3f      	subs	r7, r7, r0
   82a40:	f8c8 3008 	str.w	r3, [r8, #8]
   82a44:	2b00      	cmp	r3, #0
   82a46:	d1e9      	bne.n	82a1c <__sfvwrite_r+0x30>
   82a48:	2000      	movs	r0, #0
   82a4a:	b003      	add	sp, #12
   82a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a50:	4621      	mov	r1, r4
   82a52:	9800      	ldr	r0, [sp, #0]
   82a54:	f7ff fc44 	bl	822e0 <__swsetup_r>
   82a58:	2800      	cmp	r0, #0
   82a5a:	f040 8135 	bne.w	82cc8 <__sfvwrite_r+0x2dc>
   82a5e:	89a3      	ldrh	r3, [r4, #12]
   82a60:	6835      	ldr	r5, [r6, #0]
   82a62:	f013 0002 	ands.w	r0, r3, #2
   82a66:	d1d3      	bne.n	82a10 <__sfvwrite_r+0x24>
   82a68:	f013 0901 	ands.w	r9, r3, #1
   82a6c:	d144      	bne.n	82af8 <__sfvwrite_r+0x10c>
   82a6e:	464f      	mov	r7, r9
   82a70:	9601      	str	r6, [sp, #4]
   82a72:	b337      	cbz	r7, 82ac2 <__sfvwrite_r+0xd6>
   82a74:	059a      	lsls	r2, r3, #22
   82a76:	f8d4 8008 	ldr.w	r8, [r4, #8]
   82a7a:	f140 8085 	bpl.w	82b88 <__sfvwrite_r+0x19c>
   82a7e:	4547      	cmp	r7, r8
   82a80:	46c3      	mov	fp, r8
   82a82:	f0c0 80ad 	bcc.w	82be0 <__sfvwrite_r+0x1f4>
   82a86:	f413 6f90 	tst.w	r3, #1152	; 0x480
   82a8a:	f040 80ae 	bne.w	82bea <__sfvwrite_r+0x1fe>
   82a8e:	46ba      	mov	sl, r7
   82a90:	6820      	ldr	r0, [r4, #0]
   82a92:	465a      	mov	r2, fp
   82a94:	4649      	mov	r1, r9
   82a96:	f000 fd79 	bl	8358c <memmove>
   82a9a:	68a2      	ldr	r2, [r4, #8]
   82a9c:	6823      	ldr	r3, [r4, #0]
   82a9e:	eba2 0208 	sub.w	r2, r2, r8
   82aa2:	445b      	add	r3, fp
   82aa4:	60a2      	str	r2, [r4, #8]
   82aa6:	6023      	str	r3, [r4, #0]
   82aa8:	9a01      	ldr	r2, [sp, #4]
   82aaa:	44d1      	add	r9, sl
   82aac:	6893      	ldr	r3, [r2, #8]
   82aae:	eba7 070a 	sub.w	r7, r7, sl
   82ab2:	eba3 030a 	sub.w	r3, r3, sl
   82ab6:	6093      	str	r3, [r2, #8]
   82ab8:	2b00      	cmp	r3, #0
   82aba:	d0c5      	beq.n	82a48 <__sfvwrite_r+0x5c>
   82abc:	89a3      	ldrh	r3, [r4, #12]
   82abe:	2f00      	cmp	r7, #0
   82ac0:	d1d8      	bne.n	82a74 <__sfvwrite_r+0x88>
   82ac2:	f8d5 9000 	ldr.w	r9, [r5]
   82ac6:	686f      	ldr	r7, [r5, #4]
   82ac8:	3508      	adds	r5, #8
   82aca:	e7d2      	b.n	82a72 <__sfvwrite_r+0x86>
   82acc:	f8d5 9000 	ldr.w	r9, [r5]
   82ad0:	686f      	ldr	r7, [r5, #4]
   82ad2:	3508      	adds	r5, #8
   82ad4:	e7a2      	b.n	82a1c <__sfvwrite_r+0x30>
   82ad6:	2000      	movs	r0, #0
   82ad8:	4770      	bx	lr
   82ada:	4621      	mov	r1, r4
   82adc:	9800      	ldr	r0, [sp, #0]
   82ade:	f7ff fd0f 	bl	82500 <_fflush_r>
   82ae2:	b378      	cbz	r0, 82b44 <__sfvwrite_r+0x158>
   82ae4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82ae8:	f04f 30ff 	mov.w	r0, #4294967295
   82aec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82af0:	81a3      	strh	r3, [r4, #12]
   82af2:	b003      	add	sp, #12
   82af4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82af8:	4681      	mov	r9, r0
   82afa:	4633      	mov	r3, r6
   82afc:	464e      	mov	r6, r9
   82afe:	46a8      	mov	r8, r5
   82b00:	469a      	mov	sl, r3
   82b02:	464d      	mov	r5, r9
   82b04:	b356      	cbz	r6, 82b5c <__sfvwrite_r+0x170>
   82b06:	2800      	cmp	r0, #0
   82b08:	d032      	beq.n	82b70 <__sfvwrite_r+0x184>
   82b0a:	45b1      	cmp	r9, r6
   82b0c:	46cb      	mov	fp, r9
   82b0e:	bf28      	it	cs
   82b10:	46b3      	movcs	fp, r6
   82b12:	6820      	ldr	r0, [r4, #0]
   82b14:	6923      	ldr	r3, [r4, #16]
   82b16:	465f      	mov	r7, fp
   82b18:	4298      	cmp	r0, r3
   82b1a:	6962      	ldr	r2, [r4, #20]
   82b1c:	d904      	bls.n	82b28 <__sfvwrite_r+0x13c>
   82b1e:	68a3      	ldr	r3, [r4, #8]
   82b20:	4413      	add	r3, r2
   82b22:	459b      	cmp	fp, r3
   82b24:	f300 80a8 	bgt.w	82c78 <__sfvwrite_r+0x28c>
   82b28:	4593      	cmp	fp, r2
   82b2a:	db4d      	blt.n	82bc8 <__sfvwrite_r+0x1dc>
   82b2c:	4613      	mov	r3, r2
   82b2e:	6a67      	ldr	r7, [r4, #36]	; 0x24
   82b30:	462a      	mov	r2, r5
   82b32:	69e1      	ldr	r1, [r4, #28]
   82b34:	9800      	ldr	r0, [sp, #0]
   82b36:	47b8      	blx	r7
   82b38:	1e07      	subs	r7, r0, #0
   82b3a:	ddd3      	ble.n	82ae4 <__sfvwrite_r+0xf8>
   82b3c:	ebb9 0907 	subs.w	r9, r9, r7
   82b40:	d0cb      	beq.n	82ada <__sfvwrite_r+0xee>
   82b42:	2001      	movs	r0, #1
   82b44:	f8da 3008 	ldr.w	r3, [sl, #8]
   82b48:	443d      	add	r5, r7
   82b4a:	1bdb      	subs	r3, r3, r7
   82b4c:	1bf6      	subs	r6, r6, r7
   82b4e:	f8ca 3008 	str.w	r3, [sl, #8]
   82b52:	2b00      	cmp	r3, #0
   82b54:	f43f af78 	beq.w	82a48 <__sfvwrite_r+0x5c>
   82b58:	2e00      	cmp	r6, #0
   82b5a:	d1d4      	bne.n	82b06 <__sfvwrite_r+0x11a>
   82b5c:	f108 0308 	add.w	r3, r8, #8
   82b60:	f853 6c04 	ldr.w	r6, [r3, #-4]
   82b64:	4698      	mov	r8, r3
   82b66:	f853 5c08 	ldr.w	r5, [r3, #-8]
   82b6a:	3308      	adds	r3, #8
   82b6c:	2e00      	cmp	r6, #0
   82b6e:	d0f7      	beq.n	82b60 <__sfvwrite_r+0x174>
   82b70:	4632      	mov	r2, r6
   82b72:	210a      	movs	r1, #10
   82b74:	4628      	mov	r0, r5
   82b76:	f000 fc4d 	bl	83414 <memchr>
   82b7a:	2800      	cmp	r0, #0
   82b7c:	f000 80a1 	beq.w	82cc2 <__sfvwrite_r+0x2d6>
   82b80:	3001      	adds	r0, #1
   82b82:	eba0 0905 	sub.w	r9, r0, r5
   82b86:	e7c0      	b.n	82b0a <__sfvwrite_r+0x11e>
   82b88:	6820      	ldr	r0, [r4, #0]
   82b8a:	6923      	ldr	r3, [r4, #16]
   82b8c:	4298      	cmp	r0, r3
   82b8e:	d802      	bhi.n	82b96 <__sfvwrite_r+0x1aa>
   82b90:	6963      	ldr	r3, [r4, #20]
   82b92:	429f      	cmp	r7, r3
   82b94:	d25d      	bcs.n	82c52 <__sfvwrite_r+0x266>
   82b96:	45b8      	cmp	r8, r7
   82b98:	bf28      	it	cs
   82b9a:	46b8      	movcs	r8, r7
   82b9c:	4649      	mov	r1, r9
   82b9e:	4642      	mov	r2, r8
   82ba0:	f000 fcf4 	bl	8358c <memmove>
   82ba4:	68a3      	ldr	r3, [r4, #8]
   82ba6:	6822      	ldr	r2, [r4, #0]
   82ba8:	eba3 0308 	sub.w	r3, r3, r8
   82bac:	4442      	add	r2, r8
   82bae:	60a3      	str	r3, [r4, #8]
   82bb0:	6022      	str	r2, [r4, #0]
   82bb2:	b10b      	cbz	r3, 82bb8 <__sfvwrite_r+0x1cc>
   82bb4:	46c2      	mov	sl, r8
   82bb6:	e777      	b.n	82aa8 <__sfvwrite_r+0xbc>
   82bb8:	4621      	mov	r1, r4
   82bba:	9800      	ldr	r0, [sp, #0]
   82bbc:	f7ff fca0 	bl	82500 <_fflush_r>
   82bc0:	2800      	cmp	r0, #0
   82bc2:	d18f      	bne.n	82ae4 <__sfvwrite_r+0xf8>
   82bc4:	46c2      	mov	sl, r8
   82bc6:	e76f      	b.n	82aa8 <__sfvwrite_r+0xbc>
   82bc8:	465a      	mov	r2, fp
   82bca:	4629      	mov	r1, r5
   82bcc:	f000 fcde 	bl	8358c <memmove>
   82bd0:	68a2      	ldr	r2, [r4, #8]
   82bd2:	6823      	ldr	r3, [r4, #0]
   82bd4:	eba2 020b 	sub.w	r2, r2, fp
   82bd8:	445b      	add	r3, fp
   82bda:	60a2      	str	r2, [r4, #8]
   82bdc:	6023      	str	r3, [r4, #0]
   82bde:	e7ad      	b.n	82b3c <__sfvwrite_r+0x150>
   82be0:	46b8      	mov	r8, r7
   82be2:	46ba      	mov	sl, r7
   82be4:	46bb      	mov	fp, r7
   82be6:	6820      	ldr	r0, [r4, #0]
   82be8:	e753      	b.n	82a92 <__sfvwrite_r+0xa6>
   82bea:	6962      	ldr	r2, [r4, #20]
   82bec:	6820      	ldr	r0, [r4, #0]
   82bee:	6921      	ldr	r1, [r4, #16]
   82bf0:	eb02 0842 	add.w	r8, r2, r2, lsl #1
   82bf4:	eba0 0a01 	sub.w	sl, r0, r1
   82bf8:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
   82bfc:	f10a 0001 	add.w	r0, sl, #1
   82c00:	ea4f 0868 	mov.w	r8, r8, asr #1
   82c04:	4438      	add	r0, r7
   82c06:	4540      	cmp	r0, r8
   82c08:	4642      	mov	r2, r8
   82c0a:	bf84      	itt	hi
   82c0c:	4680      	movhi	r8, r0
   82c0e:	4642      	movhi	r2, r8
   82c10:	055b      	lsls	r3, r3, #21
   82c12:	d544      	bpl.n	82c9e <__sfvwrite_r+0x2b2>
   82c14:	4611      	mov	r1, r2
   82c16:	9800      	ldr	r0, [sp, #0]
   82c18:	f000 f944 	bl	82ea4 <_malloc_r>
   82c1c:	4683      	mov	fp, r0
   82c1e:	2800      	cmp	r0, #0
   82c20:	d055      	beq.n	82cce <__sfvwrite_r+0x2e2>
   82c22:	4652      	mov	r2, sl
   82c24:	6921      	ldr	r1, [r4, #16]
   82c26:	f000 fc3b 	bl	834a0 <memcpy>
   82c2a:	89a3      	ldrh	r3, [r4, #12]
   82c2c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   82c30:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   82c34:	81a3      	strh	r3, [r4, #12]
   82c36:	eb0b 000a 	add.w	r0, fp, sl
   82c3a:	eba8 030a 	sub.w	r3, r8, sl
   82c3e:	f8c4 b010 	str.w	fp, [r4, #16]
   82c42:	f8c4 8014 	str.w	r8, [r4, #20]
   82c46:	6020      	str	r0, [r4, #0]
   82c48:	60a3      	str	r3, [r4, #8]
   82c4a:	46b8      	mov	r8, r7
   82c4c:	46ba      	mov	sl, r7
   82c4e:	46bb      	mov	fp, r7
   82c50:	e71f      	b.n	82a92 <__sfvwrite_r+0xa6>
   82c52:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   82c56:	42ba      	cmp	r2, r7
   82c58:	bf28      	it	cs
   82c5a:	463a      	movcs	r2, r7
   82c5c:	fb92 f2f3 	sdiv	r2, r2, r3
   82c60:	69e1      	ldr	r1, [r4, #28]
   82c62:	fb03 f302 	mul.w	r3, r3, r2
   82c66:	9800      	ldr	r0, [sp, #0]
   82c68:	464a      	mov	r2, r9
   82c6a:	6a66      	ldr	r6, [r4, #36]	; 0x24
   82c6c:	47b0      	blx	r6
   82c6e:	f1b0 0a00 	subs.w	sl, r0, #0
   82c72:	f73f af19 	bgt.w	82aa8 <__sfvwrite_r+0xbc>
   82c76:	e735      	b.n	82ae4 <__sfvwrite_r+0xf8>
   82c78:	461a      	mov	r2, r3
   82c7a:	4629      	mov	r1, r5
   82c7c:	9301      	str	r3, [sp, #4]
   82c7e:	f000 fc85 	bl	8358c <memmove>
   82c82:	6822      	ldr	r2, [r4, #0]
   82c84:	9b01      	ldr	r3, [sp, #4]
   82c86:	4621      	mov	r1, r4
   82c88:	441a      	add	r2, r3
   82c8a:	6022      	str	r2, [r4, #0]
   82c8c:	9800      	ldr	r0, [sp, #0]
   82c8e:	f7ff fc37 	bl	82500 <_fflush_r>
   82c92:	9b01      	ldr	r3, [sp, #4]
   82c94:	2800      	cmp	r0, #0
   82c96:	f47f af25 	bne.w	82ae4 <__sfvwrite_r+0xf8>
   82c9a:	461f      	mov	r7, r3
   82c9c:	e74e      	b.n	82b3c <__sfvwrite_r+0x150>
   82c9e:	9800      	ldr	r0, [sp, #0]
   82ca0:	f000 fce4 	bl	8366c <_realloc_r>
   82ca4:	4683      	mov	fp, r0
   82ca6:	2800      	cmp	r0, #0
   82ca8:	d1c5      	bne.n	82c36 <__sfvwrite_r+0x24a>
   82caa:	9d00      	ldr	r5, [sp, #0]
   82cac:	6921      	ldr	r1, [r4, #16]
   82cae:	4628      	mov	r0, r5
   82cb0:	f7ff fdb6 	bl	82820 <_free_r>
   82cb4:	220c      	movs	r2, #12
   82cb6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82cba:	602a      	str	r2, [r5, #0]
   82cbc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   82cc0:	e712      	b.n	82ae8 <__sfvwrite_r+0xfc>
   82cc2:	f106 0901 	add.w	r9, r6, #1
   82cc6:	e720      	b.n	82b0a <__sfvwrite_r+0x11e>
   82cc8:	f04f 30ff 	mov.w	r0, #4294967295
   82ccc:	e6bd      	b.n	82a4a <__sfvwrite_r+0x5e>
   82cce:	220c      	movs	r2, #12
   82cd0:	9900      	ldr	r1, [sp, #0]
   82cd2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82cd6:	600a      	str	r2, [r1, #0]
   82cd8:	e706      	b.n	82ae8 <__sfvwrite_r+0xfc>
   82cda:	bf00      	nop
   82cdc:	7ffffc00 	.word	0x7ffffc00

00082ce0 <_fwalk>:
   82ce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82ce4:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
   82ce8:	d01a      	beq.n	82d20 <_fwalk+0x40>
   82cea:	4688      	mov	r8, r1
   82cec:	2600      	movs	r6, #0
   82cee:	687d      	ldr	r5, [r7, #4]
   82cf0:	68bc      	ldr	r4, [r7, #8]
   82cf2:	3d01      	subs	r5, #1
   82cf4:	d40e      	bmi.n	82d14 <_fwalk+0x34>
   82cf6:	89a3      	ldrh	r3, [r4, #12]
   82cf8:	3d01      	subs	r5, #1
   82cfa:	2b01      	cmp	r3, #1
   82cfc:	d906      	bls.n	82d0c <_fwalk+0x2c>
   82cfe:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   82d02:	3301      	adds	r3, #1
   82d04:	d002      	beq.n	82d0c <_fwalk+0x2c>
   82d06:	4620      	mov	r0, r4
   82d08:	47c0      	blx	r8
   82d0a:	4306      	orrs	r6, r0
   82d0c:	1c6b      	adds	r3, r5, #1
   82d0e:	f104 0468 	add.w	r4, r4, #104	; 0x68
   82d12:	d1f0      	bne.n	82cf6 <_fwalk+0x16>
   82d14:	683f      	ldr	r7, [r7, #0]
   82d16:	2f00      	cmp	r7, #0
   82d18:	d1e9      	bne.n	82cee <_fwalk+0xe>
   82d1a:	4630      	mov	r0, r6
   82d1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82d20:	463e      	mov	r6, r7
   82d22:	4630      	mov	r0, r6
   82d24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00082d28 <_fwalk_reent>:
   82d28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   82d2c:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   82d30:	d01e      	beq.n	82d70 <_fwalk_reent+0x48>
   82d32:	4688      	mov	r8, r1
   82d34:	4607      	mov	r7, r0
   82d36:	f04f 0900 	mov.w	r9, #0
   82d3a:	6875      	ldr	r5, [r6, #4]
   82d3c:	68b4      	ldr	r4, [r6, #8]
   82d3e:	3d01      	subs	r5, #1
   82d40:	d410      	bmi.n	82d64 <_fwalk_reent+0x3c>
   82d42:	89a3      	ldrh	r3, [r4, #12]
   82d44:	3d01      	subs	r5, #1
   82d46:	2b01      	cmp	r3, #1
   82d48:	d908      	bls.n	82d5c <_fwalk_reent+0x34>
   82d4a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   82d4e:	3301      	adds	r3, #1
   82d50:	d004      	beq.n	82d5c <_fwalk_reent+0x34>
   82d52:	4621      	mov	r1, r4
   82d54:	4638      	mov	r0, r7
   82d56:	47c0      	blx	r8
   82d58:	ea49 0900 	orr.w	r9, r9, r0
   82d5c:	1c6b      	adds	r3, r5, #1
   82d5e:	f104 0468 	add.w	r4, r4, #104	; 0x68
   82d62:	d1ee      	bne.n	82d42 <_fwalk_reent+0x1a>
   82d64:	6836      	ldr	r6, [r6, #0]
   82d66:	2e00      	cmp	r6, #0
   82d68:	d1e7      	bne.n	82d3a <_fwalk_reent+0x12>
   82d6a:	4648      	mov	r0, r9
   82d6c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   82d70:	46b1      	mov	r9, r6
   82d72:	4648      	mov	r0, r9
   82d74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00082d78 <__locale_mb_cur_max>:
   82d78:	4b04      	ldr	r3, [pc, #16]	; (82d8c <__locale_mb_cur_max+0x14>)
   82d7a:	4a05      	ldr	r2, [pc, #20]	; (82d90 <__locale_mb_cur_max+0x18>)
   82d7c:	681b      	ldr	r3, [r3, #0]
   82d7e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   82d80:	2b00      	cmp	r3, #0
   82d82:	bf08      	it	eq
   82d84:	4613      	moveq	r3, r2
   82d86:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   82d8a:	4770      	bx	lr
   82d8c:	2007013c 	.word	0x2007013c
   82d90:	2007056c 	.word	0x2007056c

00082d94 <__retarget_lock_init_recursive>:
   82d94:	4770      	bx	lr
   82d96:	bf00      	nop

00082d98 <__retarget_lock_close_recursive>:
   82d98:	4770      	bx	lr
   82d9a:	bf00      	nop

00082d9c <__retarget_lock_acquire_recursive>:
   82d9c:	4770      	bx	lr
   82d9e:	bf00      	nop

00082da0 <__retarget_lock_release_recursive>:
   82da0:	4770      	bx	lr
   82da2:	bf00      	nop

00082da4 <__swhatbuf_r>:
   82da4:	b570      	push	{r4, r5, r6, lr}
   82da6:	460c      	mov	r4, r1
   82da8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   82dac:	b090      	sub	sp, #64	; 0x40
   82dae:	2900      	cmp	r1, #0
   82db0:	4615      	mov	r5, r2
   82db2:	461e      	mov	r6, r3
   82db4:	db14      	blt.n	82de0 <__swhatbuf_r+0x3c>
   82db6:	aa01      	add	r2, sp, #4
   82db8:	f001 f8a2 	bl	83f00 <_fstat_r>
   82dbc:	2800      	cmp	r0, #0
   82dbe:	db0f      	blt.n	82de0 <__swhatbuf_r+0x3c>
   82dc0:	9a02      	ldr	r2, [sp, #8]
   82dc2:	f44f 6380 	mov.w	r3, #1024	; 0x400
   82dc6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   82dca:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   82dce:	fab2 f282 	clz	r2, r2
   82dd2:	f44f 6000 	mov.w	r0, #2048	; 0x800
   82dd6:	0952      	lsrs	r2, r2, #5
   82dd8:	6032      	str	r2, [r6, #0]
   82dda:	602b      	str	r3, [r5, #0]
   82ddc:	b010      	add	sp, #64	; 0x40
   82dde:	bd70      	pop	{r4, r5, r6, pc}
   82de0:	2300      	movs	r3, #0
   82de2:	89a2      	ldrh	r2, [r4, #12]
   82de4:	6033      	str	r3, [r6, #0]
   82de6:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   82dea:	d004      	beq.n	82df6 <__swhatbuf_r+0x52>
   82dec:	2240      	movs	r2, #64	; 0x40
   82dee:	4618      	mov	r0, r3
   82df0:	602a      	str	r2, [r5, #0]
   82df2:	b010      	add	sp, #64	; 0x40
   82df4:	bd70      	pop	{r4, r5, r6, pc}
   82df6:	f44f 6380 	mov.w	r3, #1024	; 0x400
   82dfa:	602b      	str	r3, [r5, #0]
   82dfc:	b010      	add	sp, #64	; 0x40
   82dfe:	bd70      	pop	{r4, r5, r6, pc}

00082e00 <__smakebuf_r>:
   82e00:	898a      	ldrh	r2, [r1, #12]
   82e02:	460b      	mov	r3, r1
   82e04:	0792      	lsls	r2, r2, #30
   82e06:	d506      	bpl.n	82e16 <__smakebuf_r+0x16>
   82e08:	2101      	movs	r1, #1
   82e0a:	f103 0243 	add.w	r2, r3, #67	; 0x43
   82e0e:	6159      	str	r1, [r3, #20]
   82e10:	601a      	str	r2, [r3, #0]
   82e12:	611a      	str	r2, [r3, #16]
   82e14:	4770      	bx	lr
   82e16:	b5f0      	push	{r4, r5, r6, r7, lr}
   82e18:	b083      	sub	sp, #12
   82e1a:	ab01      	add	r3, sp, #4
   82e1c:	466a      	mov	r2, sp
   82e1e:	460c      	mov	r4, r1
   82e20:	4606      	mov	r6, r0
   82e22:	f7ff ffbf 	bl	82da4 <__swhatbuf_r>
   82e26:	9900      	ldr	r1, [sp, #0]
   82e28:	4605      	mov	r5, r0
   82e2a:	4630      	mov	r0, r6
   82e2c:	f000 f83a 	bl	82ea4 <_malloc_r>
   82e30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82e34:	b1d8      	cbz	r0, 82e6e <__smakebuf_r+0x6e>
   82e36:	e89d 0006 	ldmia.w	sp, {r1, r2}
   82e3a:	4f15      	ldr	r7, [pc, #84]	; (82e90 <__smakebuf_r+0x90>)
   82e3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   82e40:	63f7      	str	r7, [r6, #60]	; 0x3c
   82e42:	81a3      	strh	r3, [r4, #12]
   82e44:	6020      	str	r0, [r4, #0]
   82e46:	6120      	str	r0, [r4, #16]
   82e48:	6161      	str	r1, [r4, #20]
   82e4a:	b91a      	cbnz	r2, 82e54 <__smakebuf_r+0x54>
   82e4c:	432b      	orrs	r3, r5
   82e4e:	81a3      	strh	r3, [r4, #12]
   82e50:	b003      	add	sp, #12
   82e52:	bdf0      	pop	{r4, r5, r6, r7, pc}
   82e54:	4630      	mov	r0, r6
   82e56:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   82e5a:	f001 f865 	bl	83f28 <_isatty_r>
   82e5e:	b1a0      	cbz	r0, 82e8a <__smakebuf_r+0x8a>
   82e60:	89a3      	ldrh	r3, [r4, #12]
   82e62:	f023 0303 	bic.w	r3, r3, #3
   82e66:	f043 0301 	orr.w	r3, r3, #1
   82e6a:	b21b      	sxth	r3, r3
   82e6c:	e7ee      	b.n	82e4c <__smakebuf_r+0x4c>
   82e6e:	059a      	lsls	r2, r3, #22
   82e70:	d4ee      	bmi.n	82e50 <__smakebuf_r+0x50>
   82e72:	2101      	movs	r1, #1
   82e74:	f023 0303 	bic.w	r3, r3, #3
   82e78:	f104 0243 	add.w	r2, r4, #67	; 0x43
   82e7c:	f043 0302 	orr.w	r3, r3, #2
   82e80:	81a3      	strh	r3, [r4, #12]
   82e82:	6161      	str	r1, [r4, #20]
   82e84:	6022      	str	r2, [r4, #0]
   82e86:	6122      	str	r2, [r4, #16]
   82e88:	e7e2      	b.n	82e50 <__smakebuf_r+0x50>
   82e8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   82e8e:	e7dd      	b.n	82e4c <__smakebuf_r+0x4c>
   82e90:	00082579 	.word	0x00082579

00082e94 <malloc>:
   82e94:	4b02      	ldr	r3, [pc, #8]	; (82ea0 <malloc+0xc>)
   82e96:	4601      	mov	r1, r0
   82e98:	6818      	ldr	r0, [r3, #0]
   82e9a:	f000 b803 	b.w	82ea4 <_malloc_r>
   82e9e:	bf00      	nop
   82ea0:	2007013c 	.word	0x2007013c

00082ea4 <_malloc_r>:
   82ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82ea8:	f101 060b 	add.w	r6, r1, #11
   82eac:	2e16      	cmp	r6, #22
   82eae:	b083      	sub	sp, #12
   82eb0:	4605      	mov	r5, r0
   82eb2:	f240 809e 	bls.w	82ff2 <_malloc_r+0x14e>
   82eb6:	f036 0607 	bics.w	r6, r6, #7
   82eba:	f100 80bd 	bmi.w	83038 <_malloc_r+0x194>
   82ebe:	42b1      	cmp	r1, r6
   82ec0:	f200 80ba 	bhi.w	83038 <_malloc_r+0x194>
   82ec4:	f000 fbc6 	bl	83654 <__malloc_lock>
   82ec8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   82ecc:	f0c0 8285 	bcc.w	833da <_malloc_r+0x536>
   82ed0:	0a73      	lsrs	r3, r6, #9
   82ed2:	f000 80b8 	beq.w	83046 <_malloc_r+0x1a2>
   82ed6:	2b04      	cmp	r3, #4
   82ed8:	f200 816c 	bhi.w	831b4 <_malloc_r+0x310>
   82edc:	09b3      	lsrs	r3, r6, #6
   82ede:	f103 0039 	add.w	r0, r3, #57	; 0x39
   82ee2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   82ee6:	00c1      	lsls	r1, r0, #3
   82ee8:	4fb8      	ldr	r7, [pc, #736]	; (831cc <_malloc_r+0x328>)
   82eea:	4439      	add	r1, r7
   82eec:	684c      	ldr	r4, [r1, #4]
   82eee:	3908      	subs	r1, #8
   82ef0:	42a1      	cmp	r1, r4
   82ef2:	d106      	bne.n	82f02 <_malloc_r+0x5e>
   82ef4:	e00c      	b.n	82f10 <_malloc_r+0x6c>
   82ef6:	2a00      	cmp	r2, #0
   82ef8:	f280 80ab 	bge.w	83052 <_malloc_r+0x1ae>
   82efc:	68e4      	ldr	r4, [r4, #12]
   82efe:	42a1      	cmp	r1, r4
   82f00:	d006      	beq.n	82f10 <_malloc_r+0x6c>
   82f02:	6863      	ldr	r3, [r4, #4]
   82f04:	f023 0303 	bic.w	r3, r3, #3
   82f08:	1b9a      	subs	r2, r3, r6
   82f0a:	2a0f      	cmp	r2, #15
   82f0c:	ddf3      	ble.n	82ef6 <_malloc_r+0x52>
   82f0e:	4670      	mov	r0, lr
   82f10:	693c      	ldr	r4, [r7, #16]
   82f12:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 831e0 <_malloc_r+0x33c>
   82f16:	4574      	cmp	r4, lr
   82f18:	f000 819e 	beq.w	83258 <_malloc_r+0x3b4>
   82f1c:	6863      	ldr	r3, [r4, #4]
   82f1e:	f023 0303 	bic.w	r3, r3, #3
   82f22:	1b9a      	subs	r2, r3, r6
   82f24:	2a0f      	cmp	r2, #15
   82f26:	f300 8183 	bgt.w	83230 <_malloc_r+0x38c>
   82f2a:	2a00      	cmp	r2, #0
   82f2c:	f8c7 e014 	str.w	lr, [r7, #20]
   82f30:	f8c7 e010 	str.w	lr, [r7, #16]
   82f34:	f280 8091 	bge.w	8305a <_malloc_r+0x1b6>
   82f38:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   82f3c:	f080 8154 	bcs.w	831e8 <_malloc_r+0x344>
   82f40:	2201      	movs	r2, #1
   82f42:	08db      	lsrs	r3, r3, #3
   82f44:	6879      	ldr	r1, [r7, #4]
   82f46:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   82f4a:	4413      	add	r3, r2
   82f4c:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   82f50:	fa02 f20c 	lsl.w	r2, r2, ip
   82f54:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   82f58:	430a      	orrs	r2, r1
   82f5a:	f1ac 0108 	sub.w	r1, ip, #8
   82f5e:	60e1      	str	r1, [r4, #12]
   82f60:	f8c4 8008 	str.w	r8, [r4, #8]
   82f64:	607a      	str	r2, [r7, #4]
   82f66:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   82f6a:	f8c8 400c 	str.w	r4, [r8, #12]
   82f6e:	2401      	movs	r4, #1
   82f70:	1083      	asrs	r3, r0, #2
   82f72:	409c      	lsls	r4, r3
   82f74:	4294      	cmp	r4, r2
   82f76:	d87d      	bhi.n	83074 <_malloc_r+0x1d0>
   82f78:	4214      	tst	r4, r2
   82f7a:	d106      	bne.n	82f8a <_malloc_r+0xe6>
   82f7c:	f020 0003 	bic.w	r0, r0, #3
   82f80:	0064      	lsls	r4, r4, #1
   82f82:	4214      	tst	r4, r2
   82f84:	f100 0004 	add.w	r0, r0, #4
   82f88:	d0fa      	beq.n	82f80 <_malloc_r+0xdc>
   82f8a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   82f8e:	46cc      	mov	ip, r9
   82f90:	4680      	mov	r8, r0
   82f92:	f8dc 300c 	ldr.w	r3, [ip, #12]
   82f96:	459c      	cmp	ip, r3
   82f98:	d107      	bne.n	82faa <_malloc_r+0x106>
   82f9a:	e15f      	b.n	8325c <_malloc_r+0x3b8>
   82f9c:	2a00      	cmp	r2, #0
   82f9e:	f280 816d 	bge.w	8327c <_malloc_r+0x3d8>
   82fa2:	68db      	ldr	r3, [r3, #12]
   82fa4:	459c      	cmp	ip, r3
   82fa6:	f000 8159 	beq.w	8325c <_malloc_r+0x3b8>
   82faa:	6859      	ldr	r1, [r3, #4]
   82fac:	f021 0103 	bic.w	r1, r1, #3
   82fb0:	1b8a      	subs	r2, r1, r6
   82fb2:	2a0f      	cmp	r2, #15
   82fb4:	ddf2      	ble.n	82f9c <_malloc_r+0xf8>
   82fb6:	68dc      	ldr	r4, [r3, #12]
   82fb8:	f8d3 c008 	ldr.w	ip, [r3, #8]
   82fbc:	f046 0801 	orr.w	r8, r6, #1
   82fc0:	4628      	mov	r0, r5
   82fc2:	441e      	add	r6, r3
   82fc4:	f042 0501 	orr.w	r5, r2, #1
   82fc8:	f8c3 8004 	str.w	r8, [r3, #4]
   82fcc:	f8cc 400c 	str.w	r4, [ip, #12]
   82fd0:	f8c4 c008 	str.w	ip, [r4, #8]
   82fd4:	617e      	str	r6, [r7, #20]
   82fd6:	613e      	str	r6, [r7, #16]
   82fd8:	f8c6 e00c 	str.w	lr, [r6, #12]
   82fdc:	f8c6 e008 	str.w	lr, [r6, #8]
   82fe0:	6075      	str	r5, [r6, #4]
   82fe2:	505a      	str	r2, [r3, r1]
   82fe4:	9300      	str	r3, [sp, #0]
   82fe6:	f000 fb3b 	bl	83660 <__malloc_unlock>
   82fea:	9b00      	ldr	r3, [sp, #0]
   82fec:	f103 0408 	add.w	r4, r3, #8
   82ff0:	e01e      	b.n	83030 <_malloc_r+0x18c>
   82ff2:	2910      	cmp	r1, #16
   82ff4:	d820      	bhi.n	83038 <_malloc_r+0x194>
   82ff6:	f000 fb2d 	bl	83654 <__malloc_lock>
   82ffa:	2610      	movs	r6, #16
   82ffc:	2318      	movs	r3, #24
   82ffe:	2002      	movs	r0, #2
   83000:	4f72      	ldr	r7, [pc, #456]	; (831cc <_malloc_r+0x328>)
   83002:	443b      	add	r3, r7
   83004:	685c      	ldr	r4, [r3, #4]
   83006:	f1a3 0208 	sub.w	r2, r3, #8
   8300a:	4294      	cmp	r4, r2
   8300c:	f000 812f 	beq.w	8326e <_malloc_r+0x3ca>
   83010:	6863      	ldr	r3, [r4, #4]
   83012:	68e1      	ldr	r1, [r4, #12]
   83014:	f023 0303 	bic.w	r3, r3, #3
   83018:	4423      	add	r3, r4
   8301a:	685a      	ldr	r2, [r3, #4]
   8301c:	68a6      	ldr	r6, [r4, #8]
   8301e:	f042 0201 	orr.w	r2, r2, #1
   83022:	60f1      	str	r1, [r6, #12]
   83024:	4628      	mov	r0, r5
   83026:	608e      	str	r6, [r1, #8]
   83028:	605a      	str	r2, [r3, #4]
   8302a:	f000 fb19 	bl	83660 <__malloc_unlock>
   8302e:	3408      	adds	r4, #8
   83030:	4620      	mov	r0, r4
   83032:	b003      	add	sp, #12
   83034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83038:	2400      	movs	r4, #0
   8303a:	230c      	movs	r3, #12
   8303c:	4620      	mov	r0, r4
   8303e:	602b      	str	r3, [r5, #0]
   83040:	b003      	add	sp, #12
   83042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83046:	2040      	movs	r0, #64	; 0x40
   83048:	f44f 7100 	mov.w	r1, #512	; 0x200
   8304c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   83050:	e74a      	b.n	82ee8 <_malloc_r+0x44>
   83052:	4423      	add	r3, r4
   83054:	685a      	ldr	r2, [r3, #4]
   83056:	68e1      	ldr	r1, [r4, #12]
   83058:	e7e0      	b.n	8301c <_malloc_r+0x178>
   8305a:	4423      	add	r3, r4
   8305c:	685a      	ldr	r2, [r3, #4]
   8305e:	4628      	mov	r0, r5
   83060:	f042 0201 	orr.w	r2, r2, #1
   83064:	605a      	str	r2, [r3, #4]
   83066:	3408      	adds	r4, #8
   83068:	f000 fafa 	bl	83660 <__malloc_unlock>
   8306c:	4620      	mov	r0, r4
   8306e:	b003      	add	sp, #12
   83070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83074:	68bc      	ldr	r4, [r7, #8]
   83076:	6863      	ldr	r3, [r4, #4]
   83078:	f023 0803 	bic.w	r8, r3, #3
   8307c:	45b0      	cmp	r8, r6
   8307e:	d304      	bcc.n	8308a <_malloc_r+0x1e6>
   83080:	eba8 0306 	sub.w	r3, r8, r6
   83084:	2b0f      	cmp	r3, #15
   83086:	f300 8085 	bgt.w	83194 <_malloc_r+0x2f0>
   8308a:	f8df 9158 	ldr.w	r9, [pc, #344]	; 831e4 <_malloc_r+0x340>
   8308e:	4b50      	ldr	r3, [pc, #320]	; (831d0 <_malloc_r+0x32c>)
   83090:	f8d9 2000 	ldr.w	r2, [r9]
   83094:	681b      	ldr	r3, [r3, #0]
   83096:	3201      	adds	r2, #1
   83098:	4433      	add	r3, r6
   8309a:	eb04 0a08 	add.w	sl, r4, r8
   8309e:	f000 8154 	beq.w	8334a <_malloc_r+0x4a6>
   830a2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   830a6:	330f      	adds	r3, #15
   830a8:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   830ac:	f02b 0b0f 	bic.w	fp, fp, #15
   830b0:	4659      	mov	r1, fp
   830b2:	4628      	mov	r0, r5
   830b4:	f000 fd26 	bl	83b04 <_sbrk_r>
   830b8:	1c41      	adds	r1, r0, #1
   830ba:	4602      	mov	r2, r0
   830bc:	f000 80fb 	beq.w	832b6 <_malloc_r+0x412>
   830c0:	4582      	cmp	sl, r0
   830c2:	f200 80f6 	bhi.w	832b2 <_malloc_r+0x40e>
   830c6:	4b43      	ldr	r3, [pc, #268]	; (831d4 <_malloc_r+0x330>)
   830c8:	6819      	ldr	r1, [r3, #0]
   830ca:	4459      	add	r1, fp
   830cc:	6019      	str	r1, [r3, #0]
   830ce:	f000 814c 	beq.w	8336a <_malloc_r+0x4c6>
   830d2:	f8d9 0000 	ldr.w	r0, [r9]
   830d6:	3001      	adds	r0, #1
   830d8:	bf1b      	ittet	ne
   830da:	eba2 0a0a 	subne.w	sl, r2, sl
   830de:	4451      	addne	r1, sl
   830e0:	f8c9 2000 	streq.w	r2, [r9]
   830e4:	6019      	strne	r1, [r3, #0]
   830e6:	f012 0107 	ands.w	r1, r2, #7
   830ea:	f000 8114 	beq.w	83316 <_malloc_r+0x472>
   830ee:	f1c1 0008 	rsb	r0, r1, #8
   830f2:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   830f6:	4402      	add	r2, r0
   830f8:	3108      	adds	r1, #8
   830fa:	eb02 090b 	add.w	r9, r2, fp
   830fe:	f3c9 090b 	ubfx	r9, r9, #0, #12
   83102:	eba1 0909 	sub.w	r9, r1, r9
   83106:	4649      	mov	r1, r9
   83108:	4628      	mov	r0, r5
   8310a:	9301      	str	r3, [sp, #4]
   8310c:	9200      	str	r2, [sp, #0]
   8310e:	f000 fcf9 	bl	83b04 <_sbrk_r>
   83112:	1c43      	adds	r3, r0, #1
   83114:	e89d 000c 	ldmia.w	sp, {r2, r3}
   83118:	f000 8142 	beq.w	833a0 <_malloc_r+0x4fc>
   8311c:	1a80      	subs	r0, r0, r2
   8311e:	4448      	add	r0, r9
   83120:	f040 0001 	orr.w	r0, r0, #1
   83124:	6819      	ldr	r1, [r3, #0]
   83126:	42bc      	cmp	r4, r7
   83128:	4449      	add	r1, r9
   8312a:	60ba      	str	r2, [r7, #8]
   8312c:	6019      	str	r1, [r3, #0]
   8312e:	6050      	str	r0, [r2, #4]
   83130:	d017      	beq.n	83162 <_malloc_r+0x2be>
   83132:	f1b8 0f0f 	cmp.w	r8, #15
   83136:	f240 80fa 	bls.w	8332e <_malloc_r+0x48a>
   8313a:	f04f 0c05 	mov.w	ip, #5
   8313e:	6862      	ldr	r2, [r4, #4]
   83140:	f1a8 000c 	sub.w	r0, r8, #12
   83144:	f020 0007 	bic.w	r0, r0, #7
   83148:	f002 0201 	and.w	r2, r2, #1
   8314c:	eb04 0e00 	add.w	lr, r4, r0
   83150:	4302      	orrs	r2, r0
   83152:	280f      	cmp	r0, #15
   83154:	6062      	str	r2, [r4, #4]
   83156:	f8ce c004 	str.w	ip, [lr, #4]
   8315a:	f8ce c008 	str.w	ip, [lr, #8]
   8315e:	f200 8116 	bhi.w	8338e <_malloc_r+0x4ea>
   83162:	4b1d      	ldr	r3, [pc, #116]	; (831d8 <_malloc_r+0x334>)
   83164:	68bc      	ldr	r4, [r7, #8]
   83166:	681a      	ldr	r2, [r3, #0]
   83168:	4291      	cmp	r1, r2
   8316a:	bf88      	it	hi
   8316c:	6019      	strhi	r1, [r3, #0]
   8316e:	4b1b      	ldr	r3, [pc, #108]	; (831dc <_malloc_r+0x338>)
   83170:	681a      	ldr	r2, [r3, #0]
   83172:	4291      	cmp	r1, r2
   83174:	6862      	ldr	r2, [r4, #4]
   83176:	bf88      	it	hi
   83178:	6019      	strhi	r1, [r3, #0]
   8317a:	f022 0203 	bic.w	r2, r2, #3
   8317e:	4296      	cmp	r6, r2
   83180:	eba2 0306 	sub.w	r3, r2, r6
   83184:	d801      	bhi.n	8318a <_malloc_r+0x2e6>
   83186:	2b0f      	cmp	r3, #15
   83188:	dc04      	bgt.n	83194 <_malloc_r+0x2f0>
   8318a:	4628      	mov	r0, r5
   8318c:	f000 fa68 	bl	83660 <__malloc_unlock>
   83190:	2400      	movs	r4, #0
   83192:	e74d      	b.n	83030 <_malloc_r+0x18c>
   83194:	f046 0201 	orr.w	r2, r6, #1
   83198:	f043 0301 	orr.w	r3, r3, #1
   8319c:	4426      	add	r6, r4
   8319e:	6062      	str	r2, [r4, #4]
   831a0:	4628      	mov	r0, r5
   831a2:	60be      	str	r6, [r7, #8]
   831a4:	3408      	adds	r4, #8
   831a6:	6073      	str	r3, [r6, #4]
   831a8:	f000 fa5a 	bl	83660 <__malloc_unlock>
   831ac:	4620      	mov	r0, r4
   831ae:	b003      	add	sp, #12
   831b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   831b4:	2b14      	cmp	r3, #20
   831b6:	d970      	bls.n	8329a <_malloc_r+0x3f6>
   831b8:	2b54      	cmp	r3, #84	; 0x54
   831ba:	f200 80a2 	bhi.w	83302 <_malloc_r+0x45e>
   831be:	0b33      	lsrs	r3, r6, #12
   831c0:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   831c4:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   831c8:	00c1      	lsls	r1, r0, #3
   831ca:	e68d      	b.n	82ee8 <_malloc_r+0x44>
   831cc:	200706d8 	.word	0x200706d8
   831d0:	20070ba8 	.word	0x20070ba8
   831d4:	20070b78 	.word	0x20070b78
   831d8:	20070ba0 	.word	0x20070ba0
   831dc:	20070ba4 	.word	0x20070ba4
   831e0:	200706e0 	.word	0x200706e0
   831e4:	20070ae0 	.word	0x20070ae0
   831e8:	0a5a      	lsrs	r2, r3, #9
   831ea:	2a04      	cmp	r2, #4
   831ec:	d95b      	bls.n	832a6 <_malloc_r+0x402>
   831ee:	2a14      	cmp	r2, #20
   831f0:	f200 80ae 	bhi.w	83350 <_malloc_r+0x4ac>
   831f4:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   831f8:	00c9      	lsls	r1, r1, #3
   831fa:	325b      	adds	r2, #91	; 0x5b
   831fc:	eb07 0c01 	add.w	ip, r7, r1
   83200:	5879      	ldr	r1, [r7, r1]
   83202:	f1ac 0c08 	sub.w	ip, ip, #8
   83206:	458c      	cmp	ip, r1
   83208:	f000 8088 	beq.w	8331c <_malloc_r+0x478>
   8320c:	684a      	ldr	r2, [r1, #4]
   8320e:	f022 0203 	bic.w	r2, r2, #3
   83212:	4293      	cmp	r3, r2
   83214:	d273      	bcs.n	832fe <_malloc_r+0x45a>
   83216:	6889      	ldr	r1, [r1, #8]
   83218:	458c      	cmp	ip, r1
   8321a:	d1f7      	bne.n	8320c <_malloc_r+0x368>
   8321c:	f8dc 300c 	ldr.w	r3, [ip, #12]
   83220:	687a      	ldr	r2, [r7, #4]
   83222:	60e3      	str	r3, [r4, #12]
   83224:	f8c4 c008 	str.w	ip, [r4, #8]
   83228:	609c      	str	r4, [r3, #8]
   8322a:	f8cc 400c 	str.w	r4, [ip, #12]
   8322e:	e69e      	b.n	82f6e <_malloc_r+0xca>
   83230:	f046 0c01 	orr.w	ip, r6, #1
   83234:	f042 0101 	orr.w	r1, r2, #1
   83238:	4426      	add	r6, r4
   8323a:	f8c4 c004 	str.w	ip, [r4, #4]
   8323e:	4628      	mov	r0, r5
   83240:	617e      	str	r6, [r7, #20]
   83242:	613e      	str	r6, [r7, #16]
   83244:	f8c6 e00c 	str.w	lr, [r6, #12]
   83248:	f8c6 e008 	str.w	lr, [r6, #8]
   8324c:	6071      	str	r1, [r6, #4]
   8324e:	50e2      	str	r2, [r4, r3]
   83250:	f000 fa06 	bl	83660 <__malloc_unlock>
   83254:	3408      	adds	r4, #8
   83256:	e6eb      	b.n	83030 <_malloc_r+0x18c>
   83258:	687a      	ldr	r2, [r7, #4]
   8325a:	e688      	b.n	82f6e <_malloc_r+0xca>
   8325c:	f108 0801 	add.w	r8, r8, #1
   83260:	f018 0f03 	tst.w	r8, #3
   83264:	f10c 0c08 	add.w	ip, ip, #8
   83268:	f47f ae93 	bne.w	82f92 <_malloc_r+0xee>
   8326c:	e02d      	b.n	832ca <_malloc_r+0x426>
   8326e:	68dc      	ldr	r4, [r3, #12]
   83270:	42a3      	cmp	r3, r4
   83272:	bf08      	it	eq
   83274:	3002      	addeq	r0, #2
   83276:	f43f ae4b 	beq.w	82f10 <_malloc_r+0x6c>
   8327a:	e6c9      	b.n	83010 <_malloc_r+0x16c>
   8327c:	461c      	mov	r4, r3
   8327e:	4419      	add	r1, r3
   83280:	684a      	ldr	r2, [r1, #4]
   83282:	68db      	ldr	r3, [r3, #12]
   83284:	f854 6f08 	ldr.w	r6, [r4, #8]!
   83288:	f042 0201 	orr.w	r2, r2, #1
   8328c:	604a      	str	r2, [r1, #4]
   8328e:	4628      	mov	r0, r5
   83290:	60f3      	str	r3, [r6, #12]
   83292:	609e      	str	r6, [r3, #8]
   83294:	f000 f9e4 	bl	83660 <__malloc_unlock>
   83298:	e6ca      	b.n	83030 <_malloc_r+0x18c>
   8329a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   8329e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   832a2:	00c1      	lsls	r1, r0, #3
   832a4:	e620      	b.n	82ee8 <_malloc_r+0x44>
   832a6:	099a      	lsrs	r2, r3, #6
   832a8:	f102 0139 	add.w	r1, r2, #57	; 0x39
   832ac:	00c9      	lsls	r1, r1, #3
   832ae:	3238      	adds	r2, #56	; 0x38
   832b0:	e7a4      	b.n	831fc <_malloc_r+0x358>
   832b2:	42bc      	cmp	r4, r7
   832b4:	d054      	beq.n	83360 <_malloc_r+0x4bc>
   832b6:	68bc      	ldr	r4, [r7, #8]
   832b8:	6862      	ldr	r2, [r4, #4]
   832ba:	f022 0203 	bic.w	r2, r2, #3
   832be:	e75e      	b.n	8317e <_malloc_r+0x2da>
   832c0:	f859 3908 	ldr.w	r3, [r9], #-8
   832c4:	4599      	cmp	r9, r3
   832c6:	f040 8086 	bne.w	833d6 <_malloc_r+0x532>
   832ca:	f010 0f03 	tst.w	r0, #3
   832ce:	f100 30ff 	add.w	r0, r0, #4294967295
   832d2:	d1f5      	bne.n	832c0 <_malloc_r+0x41c>
   832d4:	687b      	ldr	r3, [r7, #4]
   832d6:	ea23 0304 	bic.w	r3, r3, r4
   832da:	607b      	str	r3, [r7, #4]
   832dc:	0064      	lsls	r4, r4, #1
   832de:	429c      	cmp	r4, r3
   832e0:	f63f aec8 	bhi.w	83074 <_malloc_r+0x1d0>
   832e4:	2c00      	cmp	r4, #0
   832e6:	f43f aec5 	beq.w	83074 <_malloc_r+0x1d0>
   832ea:	421c      	tst	r4, r3
   832ec:	4640      	mov	r0, r8
   832ee:	f47f ae4c 	bne.w	82f8a <_malloc_r+0xe6>
   832f2:	0064      	lsls	r4, r4, #1
   832f4:	421c      	tst	r4, r3
   832f6:	f100 0004 	add.w	r0, r0, #4
   832fa:	d0fa      	beq.n	832f2 <_malloc_r+0x44e>
   832fc:	e645      	b.n	82f8a <_malloc_r+0xe6>
   832fe:	468c      	mov	ip, r1
   83300:	e78c      	b.n	8321c <_malloc_r+0x378>
   83302:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   83306:	d815      	bhi.n	83334 <_malloc_r+0x490>
   83308:	0bf3      	lsrs	r3, r6, #15
   8330a:	f103 0078 	add.w	r0, r3, #120	; 0x78
   8330e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   83312:	00c1      	lsls	r1, r0, #3
   83314:	e5e8      	b.n	82ee8 <_malloc_r+0x44>
   83316:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   8331a:	e6ee      	b.n	830fa <_malloc_r+0x256>
   8331c:	2101      	movs	r1, #1
   8331e:	687b      	ldr	r3, [r7, #4]
   83320:	1092      	asrs	r2, r2, #2
   83322:	fa01 f202 	lsl.w	r2, r1, r2
   83326:	431a      	orrs	r2, r3
   83328:	607a      	str	r2, [r7, #4]
   8332a:	4663      	mov	r3, ip
   8332c:	e779      	b.n	83222 <_malloc_r+0x37e>
   8332e:	2301      	movs	r3, #1
   83330:	6053      	str	r3, [r2, #4]
   83332:	e72a      	b.n	8318a <_malloc_r+0x2e6>
   83334:	f240 5254 	movw	r2, #1364	; 0x554
   83338:	4293      	cmp	r3, r2
   8333a:	d822      	bhi.n	83382 <_malloc_r+0x4de>
   8333c:	0cb3      	lsrs	r3, r6, #18
   8333e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   83342:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   83346:	00c1      	lsls	r1, r0, #3
   83348:	e5ce      	b.n	82ee8 <_malloc_r+0x44>
   8334a:	f103 0b10 	add.w	fp, r3, #16
   8334e:	e6af      	b.n	830b0 <_malloc_r+0x20c>
   83350:	2a54      	cmp	r2, #84	; 0x54
   83352:	d829      	bhi.n	833a8 <_malloc_r+0x504>
   83354:	0b1a      	lsrs	r2, r3, #12
   83356:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   8335a:	00c9      	lsls	r1, r1, #3
   8335c:	326e      	adds	r2, #110	; 0x6e
   8335e:	e74d      	b.n	831fc <_malloc_r+0x358>
   83360:	4b20      	ldr	r3, [pc, #128]	; (833e4 <_malloc_r+0x540>)
   83362:	6819      	ldr	r1, [r3, #0]
   83364:	4459      	add	r1, fp
   83366:	6019      	str	r1, [r3, #0]
   83368:	e6b3      	b.n	830d2 <_malloc_r+0x22e>
   8336a:	f3ca 000b 	ubfx	r0, sl, #0, #12
   8336e:	2800      	cmp	r0, #0
   83370:	f47f aeaf 	bne.w	830d2 <_malloc_r+0x22e>
   83374:	eb08 030b 	add.w	r3, r8, fp
   83378:	68ba      	ldr	r2, [r7, #8]
   8337a:	f043 0301 	orr.w	r3, r3, #1
   8337e:	6053      	str	r3, [r2, #4]
   83380:	e6ef      	b.n	83162 <_malloc_r+0x2be>
   83382:	207f      	movs	r0, #127	; 0x7f
   83384:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   83388:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   8338c:	e5ac      	b.n	82ee8 <_malloc_r+0x44>
   8338e:	f104 0108 	add.w	r1, r4, #8
   83392:	4628      	mov	r0, r5
   83394:	9300      	str	r3, [sp, #0]
   83396:	f7ff fa43 	bl	82820 <_free_r>
   8339a:	9b00      	ldr	r3, [sp, #0]
   8339c:	6819      	ldr	r1, [r3, #0]
   8339e:	e6e0      	b.n	83162 <_malloc_r+0x2be>
   833a0:	2001      	movs	r0, #1
   833a2:	f04f 0900 	mov.w	r9, #0
   833a6:	e6bd      	b.n	83124 <_malloc_r+0x280>
   833a8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   833ac:	d805      	bhi.n	833ba <_malloc_r+0x516>
   833ae:	0bda      	lsrs	r2, r3, #15
   833b0:	f102 0178 	add.w	r1, r2, #120	; 0x78
   833b4:	00c9      	lsls	r1, r1, #3
   833b6:	3277      	adds	r2, #119	; 0x77
   833b8:	e720      	b.n	831fc <_malloc_r+0x358>
   833ba:	f240 5154 	movw	r1, #1364	; 0x554
   833be:	428a      	cmp	r2, r1
   833c0:	d805      	bhi.n	833ce <_malloc_r+0x52a>
   833c2:	0c9a      	lsrs	r2, r3, #18
   833c4:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   833c8:	00c9      	lsls	r1, r1, #3
   833ca:	327c      	adds	r2, #124	; 0x7c
   833cc:	e716      	b.n	831fc <_malloc_r+0x358>
   833ce:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   833d2:	227e      	movs	r2, #126	; 0x7e
   833d4:	e712      	b.n	831fc <_malloc_r+0x358>
   833d6:	687b      	ldr	r3, [r7, #4]
   833d8:	e780      	b.n	832dc <_malloc_r+0x438>
   833da:	08f0      	lsrs	r0, r6, #3
   833dc:	f106 0308 	add.w	r3, r6, #8
   833e0:	e60e      	b.n	83000 <_malloc_r+0x15c>
   833e2:	bf00      	nop
   833e4:	20070b78 	.word	0x20070b78

000833e8 <__ascii_mbtowc>:
   833e8:	b082      	sub	sp, #8
   833ea:	b149      	cbz	r1, 83400 <__ascii_mbtowc+0x18>
   833ec:	b15a      	cbz	r2, 83406 <__ascii_mbtowc+0x1e>
   833ee:	b16b      	cbz	r3, 8340c <__ascii_mbtowc+0x24>
   833f0:	7813      	ldrb	r3, [r2, #0]
   833f2:	600b      	str	r3, [r1, #0]
   833f4:	7812      	ldrb	r2, [r2, #0]
   833f6:	1c10      	adds	r0, r2, #0
   833f8:	bf18      	it	ne
   833fa:	2001      	movne	r0, #1
   833fc:	b002      	add	sp, #8
   833fe:	4770      	bx	lr
   83400:	a901      	add	r1, sp, #4
   83402:	2a00      	cmp	r2, #0
   83404:	d1f3      	bne.n	833ee <__ascii_mbtowc+0x6>
   83406:	4610      	mov	r0, r2
   83408:	b002      	add	sp, #8
   8340a:	4770      	bx	lr
   8340c:	f06f 0001 	mvn.w	r0, #1
   83410:	e7f4      	b.n	833fc <__ascii_mbtowc+0x14>
   83412:	bf00      	nop

00083414 <memchr>:
   83414:	0783      	lsls	r3, r0, #30
   83416:	b470      	push	{r4, r5, r6}
   83418:	b2cd      	uxtb	r5, r1
   8341a:	d03d      	beq.n	83498 <memchr+0x84>
   8341c:	1e54      	subs	r4, r2, #1
   8341e:	b30a      	cbz	r2, 83464 <memchr+0x50>
   83420:	7803      	ldrb	r3, [r0, #0]
   83422:	42ab      	cmp	r3, r5
   83424:	d01f      	beq.n	83466 <memchr+0x52>
   83426:	1c43      	adds	r3, r0, #1
   83428:	e005      	b.n	83436 <memchr+0x22>
   8342a:	f114 34ff 	adds.w	r4, r4, #4294967295
   8342e:	d319      	bcc.n	83464 <memchr+0x50>
   83430:	7802      	ldrb	r2, [r0, #0]
   83432:	42aa      	cmp	r2, r5
   83434:	d017      	beq.n	83466 <memchr+0x52>
   83436:	f013 0f03 	tst.w	r3, #3
   8343a:	4618      	mov	r0, r3
   8343c:	f103 0301 	add.w	r3, r3, #1
   83440:	d1f3      	bne.n	8342a <memchr+0x16>
   83442:	2c03      	cmp	r4, #3
   83444:	d811      	bhi.n	8346a <memchr+0x56>
   83446:	b34c      	cbz	r4, 8349c <memchr+0x88>
   83448:	7803      	ldrb	r3, [r0, #0]
   8344a:	42ab      	cmp	r3, r5
   8344c:	d00b      	beq.n	83466 <memchr+0x52>
   8344e:	4404      	add	r4, r0
   83450:	1c43      	adds	r3, r0, #1
   83452:	e002      	b.n	8345a <memchr+0x46>
   83454:	7802      	ldrb	r2, [r0, #0]
   83456:	42aa      	cmp	r2, r5
   83458:	d005      	beq.n	83466 <memchr+0x52>
   8345a:	429c      	cmp	r4, r3
   8345c:	4618      	mov	r0, r3
   8345e:	f103 0301 	add.w	r3, r3, #1
   83462:	d1f7      	bne.n	83454 <memchr+0x40>
   83464:	2000      	movs	r0, #0
   83466:	bc70      	pop	{r4, r5, r6}
   83468:	4770      	bx	lr
   8346a:	0209      	lsls	r1, r1, #8
   8346c:	b289      	uxth	r1, r1
   8346e:	4329      	orrs	r1, r5
   83470:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   83474:	6803      	ldr	r3, [r0, #0]
   83476:	4606      	mov	r6, r0
   83478:	404b      	eors	r3, r1
   8347a:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   8347e:	ea22 0303 	bic.w	r3, r2, r3
   83482:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   83486:	f100 0004 	add.w	r0, r0, #4
   8348a:	d103      	bne.n	83494 <memchr+0x80>
   8348c:	3c04      	subs	r4, #4
   8348e:	2c03      	cmp	r4, #3
   83490:	d8f0      	bhi.n	83474 <memchr+0x60>
   83492:	e7d8      	b.n	83446 <memchr+0x32>
   83494:	4630      	mov	r0, r6
   83496:	e7d7      	b.n	83448 <memchr+0x34>
   83498:	4614      	mov	r4, r2
   8349a:	e7d2      	b.n	83442 <memchr+0x2e>
   8349c:	4620      	mov	r0, r4
   8349e:	e7e2      	b.n	83466 <memchr+0x52>

000834a0 <memcpy>:
   834a0:	4684      	mov	ip, r0
   834a2:	ea41 0300 	orr.w	r3, r1, r0
   834a6:	f013 0303 	ands.w	r3, r3, #3
   834aa:	d149      	bne.n	83540 <memcpy+0xa0>
   834ac:	3a40      	subs	r2, #64	; 0x40
   834ae:	d323      	bcc.n	834f8 <memcpy+0x58>
   834b0:	680b      	ldr	r3, [r1, #0]
   834b2:	6003      	str	r3, [r0, #0]
   834b4:	684b      	ldr	r3, [r1, #4]
   834b6:	6043      	str	r3, [r0, #4]
   834b8:	688b      	ldr	r3, [r1, #8]
   834ba:	6083      	str	r3, [r0, #8]
   834bc:	68cb      	ldr	r3, [r1, #12]
   834be:	60c3      	str	r3, [r0, #12]
   834c0:	690b      	ldr	r3, [r1, #16]
   834c2:	6103      	str	r3, [r0, #16]
   834c4:	694b      	ldr	r3, [r1, #20]
   834c6:	6143      	str	r3, [r0, #20]
   834c8:	698b      	ldr	r3, [r1, #24]
   834ca:	6183      	str	r3, [r0, #24]
   834cc:	69cb      	ldr	r3, [r1, #28]
   834ce:	61c3      	str	r3, [r0, #28]
   834d0:	6a0b      	ldr	r3, [r1, #32]
   834d2:	6203      	str	r3, [r0, #32]
   834d4:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   834d6:	6243      	str	r3, [r0, #36]	; 0x24
   834d8:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   834da:	6283      	str	r3, [r0, #40]	; 0x28
   834dc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   834de:	62c3      	str	r3, [r0, #44]	; 0x2c
   834e0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   834e2:	6303      	str	r3, [r0, #48]	; 0x30
   834e4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   834e6:	6343      	str	r3, [r0, #52]	; 0x34
   834e8:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   834ea:	6383      	str	r3, [r0, #56]	; 0x38
   834ec:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   834ee:	63c3      	str	r3, [r0, #60]	; 0x3c
   834f0:	3040      	adds	r0, #64	; 0x40
   834f2:	3140      	adds	r1, #64	; 0x40
   834f4:	3a40      	subs	r2, #64	; 0x40
   834f6:	d2db      	bcs.n	834b0 <memcpy+0x10>
   834f8:	3230      	adds	r2, #48	; 0x30
   834fa:	d30b      	bcc.n	83514 <memcpy+0x74>
   834fc:	680b      	ldr	r3, [r1, #0]
   834fe:	6003      	str	r3, [r0, #0]
   83500:	684b      	ldr	r3, [r1, #4]
   83502:	6043      	str	r3, [r0, #4]
   83504:	688b      	ldr	r3, [r1, #8]
   83506:	6083      	str	r3, [r0, #8]
   83508:	68cb      	ldr	r3, [r1, #12]
   8350a:	60c3      	str	r3, [r0, #12]
   8350c:	3010      	adds	r0, #16
   8350e:	3110      	adds	r1, #16
   83510:	3a10      	subs	r2, #16
   83512:	d2f3      	bcs.n	834fc <memcpy+0x5c>
   83514:	320c      	adds	r2, #12
   83516:	d305      	bcc.n	83524 <memcpy+0x84>
   83518:	f851 3b04 	ldr.w	r3, [r1], #4
   8351c:	f840 3b04 	str.w	r3, [r0], #4
   83520:	3a04      	subs	r2, #4
   83522:	d2f9      	bcs.n	83518 <memcpy+0x78>
   83524:	3204      	adds	r2, #4
   83526:	d008      	beq.n	8353a <memcpy+0x9a>
   83528:	07d2      	lsls	r2, r2, #31
   8352a:	bf1c      	itt	ne
   8352c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83530:	f800 3b01 	strbne.w	r3, [r0], #1
   83534:	d301      	bcc.n	8353a <memcpy+0x9a>
   83536:	880b      	ldrh	r3, [r1, #0]
   83538:	8003      	strh	r3, [r0, #0]
   8353a:	4660      	mov	r0, ip
   8353c:	4770      	bx	lr
   8353e:	bf00      	nop
   83540:	2a08      	cmp	r2, #8
   83542:	d313      	bcc.n	8356c <memcpy+0xcc>
   83544:	078b      	lsls	r3, r1, #30
   83546:	d0b1      	beq.n	834ac <memcpy+0xc>
   83548:	f010 0303 	ands.w	r3, r0, #3
   8354c:	d0ae      	beq.n	834ac <memcpy+0xc>
   8354e:	f1c3 0304 	rsb	r3, r3, #4
   83552:	1ad2      	subs	r2, r2, r3
   83554:	07db      	lsls	r3, r3, #31
   83556:	bf1c      	itt	ne
   83558:	f811 3b01 	ldrbne.w	r3, [r1], #1
   8355c:	f800 3b01 	strbne.w	r3, [r0], #1
   83560:	d3a4      	bcc.n	834ac <memcpy+0xc>
   83562:	f831 3b02 	ldrh.w	r3, [r1], #2
   83566:	f820 3b02 	strh.w	r3, [r0], #2
   8356a:	e79f      	b.n	834ac <memcpy+0xc>
   8356c:	3a04      	subs	r2, #4
   8356e:	d3d9      	bcc.n	83524 <memcpy+0x84>
   83570:	3a01      	subs	r2, #1
   83572:	f811 3b01 	ldrb.w	r3, [r1], #1
   83576:	f800 3b01 	strb.w	r3, [r0], #1
   8357a:	d2f9      	bcs.n	83570 <memcpy+0xd0>
   8357c:	780b      	ldrb	r3, [r1, #0]
   8357e:	7003      	strb	r3, [r0, #0]
   83580:	784b      	ldrb	r3, [r1, #1]
   83582:	7043      	strb	r3, [r0, #1]
   83584:	788b      	ldrb	r3, [r1, #2]
   83586:	7083      	strb	r3, [r0, #2]
   83588:	4660      	mov	r0, ip
   8358a:	4770      	bx	lr

0008358c <memmove>:
   8358c:	4288      	cmp	r0, r1
   8358e:	b5f0      	push	{r4, r5, r6, r7, lr}
   83590:	d90d      	bls.n	835ae <memmove+0x22>
   83592:	188b      	adds	r3, r1, r2
   83594:	4298      	cmp	r0, r3
   83596:	d20a      	bcs.n	835ae <memmove+0x22>
   83598:	1884      	adds	r4, r0, r2
   8359a:	2a00      	cmp	r2, #0
   8359c:	d051      	beq.n	83642 <memmove+0xb6>
   8359e:	4622      	mov	r2, r4
   835a0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   835a4:	4299      	cmp	r1, r3
   835a6:	f802 4d01 	strb.w	r4, [r2, #-1]!
   835aa:	d1f9      	bne.n	835a0 <memmove+0x14>
   835ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
   835ae:	2a0f      	cmp	r2, #15
   835b0:	d948      	bls.n	83644 <memmove+0xb8>
   835b2:	ea41 0300 	orr.w	r3, r1, r0
   835b6:	079b      	lsls	r3, r3, #30
   835b8:	d146      	bne.n	83648 <memmove+0xbc>
   835ba:	4615      	mov	r5, r2
   835bc:	f100 0410 	add.w	r4, r0, #16
   835c0:	f101 0310 	add.w	r3, r1, #16
   835c4:	f853 6c10 	ldr.w	r6, [r3, #-16]
   835c8:	3d10      	subs	r5, #16
   835ca:	f844 6c10 	str.w	r6, [r4, #-16]
   835ce:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   835d2:	2d0f      	cmp	r5, #15
   835d4:	f844 6c0c 	str.w	r6, [r4, #-12]
   835d8:	f853 6c08 	ldr.w	r6, [r3, #-8]
   835dc:	f104 0410 	add.w	r4, r4, #16
   835e0:	f844 6c18 	str.w	r6, [r4, #-24]
   835e4:	f853 6c04 	ldr.w	r6, [r3, #-4]
   835e8:	f103 0310 	add.w	r3, r3, #16
   835ec:	f844 6c14 	str.w	r6, [r4, #-20]
   835f0:	d8e8      	bhi.n	835c4 <memmove+0x38>
   835f2:	f1a2 0310 	sub.w	r3, r2, #16
   835f6:	f023 030f 	bic.w	r3, r3, #15
   835fa:	f002 0e0f 	and.w	lr, r2, #15
   835fe:	3310      	adds	r3, #16
   83600:	f1be 0f03 	cmp.w	lr, #3
   83604:	4419      	add	r1, r3
   83606:	4403      	add	r3, r0
   83608:	d921      	bls.n	8364e <memmove+0xc2>
   8360a:	460e      	mov	r6, r1
   8360c:	4674      	mov	r4, lr
   8360e:	1f1d      	subs	r5, r3, #4
   83610:	f856 7b04 	ldr.w	r7, [r6], #4
   83614:	3c04      	subs	r4, #4
   83616:	2c03      	cmp	r4, #3
   83618:	f845 7f04 	str.w	r7, [r5, #4]!
   8361c:	d8f8      	bhi.n	83610 <memmove+0x84>
   8361e:	f1ae 0404 	sub.w	r4, lr, #4
   83622:	f024 0403 	bic.w	r4, r4, #3
   83626:	3404      	adds	r4, #4
   83628:	4421      	add	r1, r4
   8362a:	4423      	add	r3, r4
   8362c:	f002 0203 	and.w	r2, r2, #3
   83630:	b162      	cbz	r2, 8364c <memmove+0xc0>
   83632:	3b01      	subs	r3, #1
   83634:	440a      	add	r2, r1
   83636:	f811 4b01 	ldrb.w	r4, [r1], #1
   8363a:	428a      	cmp	r2, r1
   8363c:	f803 4f01 	strb.w	r4, [r3, #1]!
   83640:	d1f9      	bne.n	83636 <memmove+0xaa>
   83642:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83644:	4603      	mov	r3, r0
   83646:	e7f3      	b.n	83630 <memmove+0xa4>
   83648:	4603      	mov	r3, r0
   8364a:	e7f2      	b.n	83632 <memmove+0xa6>
   8364c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8364e:	4672      	mov	r2, lr
   83650:	e7ee      	b.n	83630 <memmove+0xa4>
   83652:	bf00      	nop

00083654 <__malloc_lock>:
   83654:	4801      	ldr	r0, [pc, #4]	; (8365c <__malloc_lock+0x8>)
   83656:	f7ff bba1 	b.w	82d9c <__retarget_lock_acquire_recursive>
   8365a:	bf00      	nop
   8365c:	20070bd8 	.word	0x20070bd8

00083660 <__malloc_unlock>:
   83660:	4801      	ldr	r0, [pc, #4]	; (83668 <__malloc_unlock+0x8>)
   83662:	f7ff bb9d 	b.w	82da0 <__retarget_lock_release_recursive>
   83666:	bf00      	nop
   83668:	20070bd8 	.word	0x20070bd8

0008366c <_realloc_r>:
   8366c:	2900      	cmp	r1, #0
   8366e:	f000 8094 	beq.w	8379a <_realloc_r+0x12e>
   83672:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83676:	460c      	mov	r4, r1
   83678:	4615      	mov	r5, r2
   8367a:	b083      	sub	sp, #12
   8367c:	4680      	mov	r8, r0
   8367e:	f105 060b 	add.w	r6, r5, #11
   83682:	f7ff ffe7 	bl	83654 <__malloc_lock>
   83686:	f854 ec04 	ldr.w	lr, [r4, #-4]
   8368a:	2e16      	cmp	r6, #22
   8368c:	f02e 0703 	bic.w	r7, lr, #3
   83690:	f1a4 0908 	sub.w	r9, r4, #8
   83694:	d83c      	bhi.n	83710 <_realloc_r+0xa4>
   83696:	2210      	movs	r2, #16
   83698:	4616      	mov	r6, r2
   8369a:	42b5      	cmp	r5, r6
   8369c:	d83d      	bhi.n	8371a <_realloc_r+0xae>
   8369e:	4297      	cmp	r7, r2
   836a0:	da43      	bge.n	8372a <_realloc_r+0xbe>
   836a2:	4bc6      	ldr	r3, [pc, #792]	; (839bc <_realloc_r+0x350>)
   836a4:	eb09 0007 	add.w	r0, r9, r7
   836a8:	6899      	ldr	r1, [r3, #8]
   836aa:	4288      	cmp	r0, r1
   836ac:	f000 80c3 	beq.w	83836 <_realloc_r+0x1ca>
   836b0:	6843      	ldr	r3, [r0, #4]
   836b2:	f023 0101 	bic.w	r1, r3, #1
   836b6:	4401      	add	r1, r0
   836b8:	6849      	ldr	r1, [r1, #4]
   836ba:	07c9      	lsls	r1, r1, #31
   836bc:	d54d      	bpl.n	8375a <_realloc_r+0xee>
   836be:	f01e 0f01 	tst.w	lr, #1
   836c2:	f000 809b 	beq.w	837fc <_realloc_r+0x190>
   836c6:	4629      	mov	r1, r5
   836c8:	4640      	mov	r0, r8
   836ca:	f7ff fbeb 	bl	82ea4 <_malloc_r>
   836ce:	4605      	mov	r5, r0
   836d0:	2800      	cmp	r0, #0
   836d2:	d03b      	beq.n	8374c <_realloc_r+0xe0>
   836d4:	f854 3c04 	ldr.w	r3, [r4, #-4]
   836d8:	f1a0 0208 	sub.w	r2, r0, #8
   836dc:	f023 0301 	bic.w	r3, r3, #1
   836e0:	444b      	add	r3, r9
   836e2:	429a      	cmp	r2, r3
   836e4:	f000 812b 	beq.w	8393e <_realloc_r+0x2d2>
   836e8:	1f3a      	subs	r2, r7, #4
   836ea:	2a24      	cmp	r2, #36	; 0x24
   836ec:	f200 8118 	bhi.w	83920 <_realloc_r+0x2b4>
   836f0:	2a13      	cmp	r2, #19
   836f2:	f200 80eb 	bhi.w	838cc <_realloc_r+0x260>
   836f6:	4603      	mov	r3, r0
   836f8:	4622      	mov	r2, r4
   836fa:	6811      	ldr	r1, [r2, #0]
   836fc:	6019      	str	r1, [r3, #0]
   836fe:	6851      	ldr	r1, [r2, #4]
   83700:	6059      	str	r1, [r3, #4]
   83702:	6892      	ldr	r2, [r2, #8]
   83704:	609a      	str	r2, [r3, #8]
   83706:	4621      	mov	r1, r4
   83708:	4640      	mov	r0, r8
   8370a:	f7ff f889 	bl	82820 <_free_r>
   8370e:	e01d      	b.n	8374c <_realloc_r+0xe0>
   83710:	f026 0607 	bic.w	r6, r6, #7
   83714:	2e00      	cmp	r6, #0
   83716:	4632      	mov	r2, r6
   83718:	dabf      	bge.n	8369a <_realloc_r+0x2e>
   8371a:	2500      	movs	r5, #0
   8371c:	230c      	movs	r3, #12
   8371e:	4628      	mov	r0, r5
   83720:	f8c8 3000 	str.w	r3, [r8]
   83724:	b003      	add	sp, #12
   83726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8372a:	4625      	mov	r5, r4
   8372c:	1bbb      	subs	r3, r7, r6
   8372e:	2b0f      	cmp	r3, #15
   83730:	f8d9 2004 	ldr.w	r2, [r9, #4]
   83734:	d81d      	bhi.n	83772 <_realloc_r+0x106>
   83736:	f002 0201 	and.w	r2, r2, #1
   8373a:	433a      	orrs	r2, r7
   8373c:	eb09 0107 	add.w	r1, r9, r7
   83740:	f8c9 2004 	str.w	r2, [r9, #4]
   83744:	684b      	ldr	r3, [r1, #4]
   83746:	f043 0301 	orr.w	r3, r3, #1
   8374a:	604b      	str	r3, [r1, #4]
   8374c:	4640      	mov	r0, r8
   8374e:	f7ff ff87 	bl	83660 <__malloc_unlock>
   83752:	4628      	mov	r0, r5
   83754:	b003      	add	sp, #12
   83756:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8375a:	f023 0303 	bic.w	r3, r3, #3
   8375e:	18f9      	adds	r1, r7, r3
   83760:	4291      	cmp	r1, r2
   83762:	db1d      	blt.n	837a0 <_realloc_r+0x134>
   83764:	68c3      	ldr	r3, [r0, #12]
   83766:	6882      	ldr	r2, [r0, #8]
   83768:	4625      	mov	r5, r4
   8376a:	60d3      	str	r3, [r2, #12]
   8376c:	460f      	mov	r7, r1
   8376e:	609a      	str	r2, [r3, #8]
   83770:	e7dc      	b.n	8372c <_realloc_r+0xc0>
   83772:	f002 0201 	and.w	r2, r2, #1
   83776:	eb09 0106 	add.w	r1, r9, r6
   8377a:	f043 0301 	orr.w	r3, r3, #1
   8377e:	4332      	orrs	r2, r6
   83780:	f8c9 2004 	str.w	r2, [r9, #4]
   83784:	444f      	add	r7, r9
   83786:	604b      	str	r3, [r1, #4]
   83788:	687b      	ldr	r3, [r7, #4]
   8378a:	3108      	adds	r1, #8
   8378c:	f043 0301 	orr.w	r3, r3, #1
   83790:	607b      	str	r3, [r7, #4]
   83792:	4640      	mov	r0, r8
   83794:	f7ff f844 	bl	82820 <_free_r>
   83798:	e7d8      	b.n	8374c <_realloc_r+0xe0>
   8379a:	4611      	mov	r1, r2
   8379c:	f7ff bb82 	b.w	82ea4 <_malloc_r>
   837a0:	f01e 0f01 	tst.w	lr, #1
   837a4:	d18f      	bne.n	836c6 <_realloc_r+0x5a>
   837a6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   837aa:	eba9 0a01 	sub.w	sl, r9, r1
   837ae:	f8da 1004 	ldr.w	r1, [sl, #4]
   837b2:	f021 0103 	bic.w	r1, r1, #3
   837b6:	440b      	add	r3, r1
   837b8:	443b      	add	r3, r7
   837ba:	4293      	cmp	r3, r2
   837bc:	db26      	blt.n	8380c <_realloc_r+0x1a0>
   837be:	4655      	mov	r5, sl
   837c0:	68c1      	ldr	r1, [r0, #12]
   837c2:	6880      	ldr	r0, [r0, #8]
   837c4:	1f3a      	subs	r2, r7, #4
   837c6:	60c1      	str	r1, [r0, #12]
   837c8:	6088      	str	r0, [r1, #8]
   837ca:	f855 0f08 	ldr.w	r0, [r5, #8]!
   837ce:	f8da 100c 	ldr.w	r1, [sl, #12]
   837d2:	2a24      	cmp	r2, #36	; 0x24
   837d4:	60c1      	str	r1, [r0, #12]
   837d6:	6088      	str	r0, [r1, #8]
   837d8:	d826      	bhi.n	83828 <_realloc_r+0x1bc>
   837da:	2a13      	cmp	r2, #19
   837dc:	f240 8081 	bls.w	838e2 <_realloc_r+0x276>
   837e0:	6821      	ldr	r1, [r4, #0]
   837e2:	2a1b      	cmp	r2, #27
   837e4:	f8ca 1008 	str.w	r1, [sl, #8]
   837e8:	6861      	ldr	r1, [r4, #4]
   837ea:	f8ca 100c 	str.w	r1, [sl, #12]
   837ee:	f200 80ad 	bhi.w	8394c <_realloc_r+0x2e0>
   837f2:	f104 0008 	add.w	r0, r4, #8
   837f6:	f10a 0210 	add.w	r2, sl, #16
   837fa:	e074      	b.n	838e6 <_realloc_r+0x27a>
   837fc:	f854 3c08 	ldr.w	r3, [r4, #-8]
   83800:	eba9 0a03 	sub.w	sl, r9, r3
   83804:	f8da 1004 	ldr.w	r1, [sl, #4]
   83808:	f021 0103 	bic.w	r1, r1, #3
   8380c:	187b      	adds	r3, r7, r1
   8380e:	4293      	cmp	r3, r2
   83810:	f6ff af59 	blt.w	836c6 <_realloc_r+0x5a>
   83814:	4655      	mov	r5, sl
   83816:	f8da 100c 	ldr.w	r1, [sl, #12]
   8381a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8381e:	1f3a      	subs	r2, r7, #4
   83820:	2a24      	cmp	r2, #36	; 0x24
   83822:	60c1      	str	r1, [r0, #12]
   83824:	6088      	str	r0, [r1, #8]
   83826:	d9d8      	bls.n	837da <_realloc_r+0x16e>
   83828:	4621      	mov	r1, r4
   8382a:	4628      	mov	r0, r5
   8382c:	461f      	mov	r7, r3
   8382e:	46d1      	mov	r9, sl
   83830:	f7ff feac 	bl	8358c <memmove>
   83834:	e77a      	b.n	8372c <_realloc_r+0xc0>
   83836:	6841      	ldr	r1, [r0, #4]
   83838:	f106 0010 	add.w	r0, r6, #16
   8383c:	f021 0b03 	bic.w	fp, r1, #3
   83840:	44bb      	add	fp, r7
   83842:	4583      	cmp	fp, r0
   83844:	da58      	bge.n	838f8 <_realloc_r+0x28c>
   83846:	f01e 0f01 	tst.w	lr, #1
   8384a:	f47f af3c 	bne.w	836c6 <_realloc_r+0x5a>
   8384e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   83852:	eba9 0a01 	sub.w	sl, r9, r1
   83856:	f8da 1004 	ldr.w	r1, [sl, #4]
   8385a:	f021 0103 	bic.w	r1, r1, #3
   8385e:	448b      	add	fp, r1
   83860:	4558      	cmp	r0, fp
   83862:	dcd3      	bgt.n	8380c <_realloc_r+0x1a0>
   83864:	4655      	mov	r5, sl
   83866:	f8da 100c 	ldr.w	r1, [sl, #12]
   8386a:	f855 0f08 	ldr.w	r0, [r5, #8]!
   8386e:	1f3a      	subs	r2, r7, #4
   83870:	2a24      	cmp	r2, #36	; 0x24
   83872:	60c1      	str	r1, [r0, #12]
   83874:	6088      	str	r0, [r1, #8]
   83876:	f200 808d 	bhi.w	83994 <_realloc_r+0x328>
   8387a:	2a13      	cmp	r2, #19
   8387c:	f240 8087 	bls.w	8398e <_realloc_r+0x322>
   83880:	6821      	ldr	r1, [r4, #0]
   83882:	2a1b      	cmp	r2, #27
   83884:	f8ca 1008 	str.w	r1, [sl, #8]
   83888:	6861      	ldr	r1, [r4, #4]
   8388a:	f8ca 100c 	str.w	r1, [sl, #12]
   8388e:	f200 8088 	bhi.w	839a2 <_realloc_r+0x336>
   83892:	f104 0108 	add.w	r1, r4, #8
   83896:	f10a 0210 	add.w	r2, sl, #16
   8389a:	6808      	ldr	r0, [r1, #0]
   8389c:	6010      	str	r0, [r2, #0]
   8389e:	6848      	ldr	r0, [r1, #4]
   838a0:	6050      	str	r0, [r2, #4]
   838a2:	6889      	ldr	r1, [r1, #8]
   838a4:	6091      	str	r1, [r2, #8]
   838a6:	ebab 0206 	sub.w	r2, fp, r6
   838aa:	eb0a 0106 	add.w	r1, sl, r6
   838ae:	f042 0201 	orr.w	r2, r2, #1
   838b2:	6099      	str	r1, [r3, #8]
   838b4:	604a      	str	r2, [r1, #4]
   838b6:	f8da 3004 	ldr.w	r3, [sl, #4]
   838ba:	4640      	mov	r0, r8
   838bc:	f003 0301 	and.w	r3, r3, #1
   838c0:	431e      	orrs	r6, r3
   838c2:	f8ca 6004 	str.w	r6, [sl, #4]
   838c6:	f7ff fecb 	bl	83660 <__malloc_unlock>
   838ca:	e742      	b.n	83752 <_realloc_r+0xe6>
   838cc:	6823      	ldr	r3, [r4, #0]
   838ce:	2a1b      	cmp	r2, #27
   838d0:	6003      	str	r3, [r0, #0]
   838d2:	6863      	ldr	r3, [r4, #4]
   838d4:	6043      	str	r3, [r0, #4]
   838d6:	d827      	bhi.n	83928 <_realloc_r+0x2bc>
   838d8:	f100 0308 	add.w	r3, r0, #8
   838dc:	f104 0208 	add.w	r2, r4, #8
   838e0:	e70b      	b.n	836fa <_realloc_r+0x8e>
   838e2:	4620      	mov	r0, r4
   838e4:	462a      	mov	r2, r5
   838e6:	6801      	ldr	r1, [r0, #0]
   838e8:	461f      	mov	r7, r3
   838ea:	6011      	str	r1, [r2, #0]
   838ec:	6841      	ldr	r1, [r0, #4]
   838ee:	46d1      	mov	r9, sl
   838f0:	6051      	str	r1, [r2, #4]
   838f2:	6883      	ldr	r3, [r0, #8]
   838f4:	6093      	str	r3, [r2, #8]
   838f6:	e719      	b.n	8372c <_realloc_r+0xc0>
   838f8:	ebab 0b06 	sub.w	fp, fp, r6
   838fc:	eb09 0106 	add.w	r1, r9, r6
   83900:	f04b 0201 	orr.w	r2, fp, #1
   83904:	6099      	str	r1, [r3, #8]
   83906:	604a      	str	r2, [r1, #4]
   83908:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8390c:	4640      	mov	r0, r8
   8390e:	f003 0301 	and.w	r3, r3, #1
   83912:	431e      	orrs	r6, r3
   83914:	f844 6c04 	str.w	r6, [r4, #-4]
   83918:	f7ff fea2 	bl	83660 <__malloc_unlock>
   8391c:	4625      	mov	r5, r4
   8391e:	e718      	b.n	83752 <_realloc_r+0xe6>
   83920:	4621      	mov	r1, r4
   83922:	f7ff fe33 	bl	8358c <memmove>
   83926:	e6ee      	b.n	83706 <_realloc_r+0x9a>
   83928:	68a3      	ldr	r3, [r4, #8]
   8392a:	2a24      	cmp	r2, #36	; 0x24
   8392c:	6083      	str	r3, [r0, #8]
   8392e:	68e3      	ldr	r3, [r4, #12]
   83930:	60c3      	str	r3, [r0, #12]
   83932:	d018      	beq.n	83966 <_realloc_r+0x2fa>
   83934:	f100 0310 	add.w	r3, r0, #16
   83938:	f104 0210 	add.w	r2, r4, #16
   8393c:	e6dd      	b.n	836fa <_realloc_r+0x8e>
   8393e:	f850 3c04 	ldr.w	r3, [r0, #-4]
   83942:	4625      	mov	r5, r4
   83944:	f023 0303 	bic.w	r3, r3, #3
   83948:	441f      	add	r7, r3
   8394a:	e6ef      	b.n	8372c <_realloc_r+0xc0>
   8394c:	68a1      	ldr	r1, [r4, #8]
   8394e:	2a24      	cmp	r2, #36	; 0x24
   83950:	f8ca 1010 	str.w	r1, [sl, #16]
   83954:	68e1      	ldr	r1, [r4, #12]
   83956:	f8ca 1014 	str.w	r1, [sl, #20]
   8395a:	d00d      	beq.n	83978 <_realloc_r+0x30c>
   8395c:	f104 0010 	add.w	r0, r4, #16
   83960:	f10a 0218 	add.w	r2, sl, #24
   83964:	e7bf      	b.n	838e6 <_realloc_r+0x27a>
   83966:	6922      	ldr	r2, [r4, #16]
   83968:	f100 0318 	add.w	r3, r0, #24
   8396c:	6102      	str	r2, [r0, #16]
   8396e:	6961      	ldr	r1, [r4, #20]
   83970:	f104 0218 	add.w	r2, r4, #24
   83974:	6141      	str	r1, [r0, #20]
   83976:	e6c0      	b.n	836fa <_realloc_r+0x8e>
   83978:	6922      	ldr	r2, [r4, #16]
   8397a:	f104 0018 	add.w	r0, r4, #24
   8397e:	f8ca 2018 	str.w	r2, [sl, #24]
   83982:	6961      	ldr	r1, [r4, #20]
   83984:	f10a 0220 	add.w	r2, sl, #32
   83988:	f8ca 101c 	str.w	r1, [sl, #28]
   8398c:	e7ab      	b.n	838e6 <_realloc_r+0x27a>
   8398e:	4621      	mov	r1, r4
   83990:	462a      	mov	r2, r5
   83992:	e782      	b.n	8389a <_realloc_r+0x22e>
   83994:	4621      	mov	r1, r4
   83996:	4628      	mov	r0, r5
   83998:	9301      	str	r3, [sp, #4]
   8399a:	f7ff fdf7 	bl	8358c <memmove>
   8399e:	9b01      	ldr	r3, [sp, #4]
   839a0:	e781      	b.n	838a6 <_realloc_r+0x23a>
   839a2:	68a1      	ldr	r1, [r4, #8]
   839a4:	2a24      	cmp	r2, #36	; 0x24
   839a6:	f8ca 1010 	str.w	r1, [sl, #16]
   839aa:	68e1      	ldr	r1, [r4, #12]
   839ac:	f8ca 1014 	str.w	r1, [sl, #20]
   839b0:	d006      	beq.n	839c0 <_realloc_r+0x354>
   839b2:	f104 0110 	add.w	r1, r4, #16
   839b6:	f10a 0218 	add.w	r2, sl, #24
   839ba:	e76e      	b.n	8389a <_realloc_r+0x22e>
   839bc:	200706d8 	.word	0x200706d8
   839c0:	6922      	ldr	r2, [r4, #16]
   839c2:	f104 0118 	add.w	r1, r4, #24
   839c6:	f8ca 2018 	str.w	r2, [sl, #24]
   839ca:	6960      	ldr	r0, [r4, #20]
   839cc:	f10a 0220 	add.w	r2, sl, #32
   839d0:	f8ca 001c 	str.w	r0, [sl, #28]
   839d4:	e761      	b.n	8389a <_realloc_r+0x22e>
   839d6:	bf00      	nop

000839d8 <lflush>:
   839d8:	8983      	ldrh	r3, [r0, #12]
   839da:	f003 0309 	and.w	r3, r3, #9
   839de:	2b09      	cmp	r3, #9
   839e0:	d001      	beq.n	839e6 <lflush+0xe>
   839e2:	2000      	movs	r0, #0
   839e4:	4770      	bx	lr
   839e6:	f7fe bdb5 	b.w	82554 <fflush>
   839ea:	bf00      	nop

000839ec <__srefill_r>:
   839ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   839ee:	460c      	mov	r4, r1
   839f0:	4605      	mov	r5, r0
   839f2:	b110      	cbz	r0, 839fa <__srefill_r+0xe>
   839f4:	6b83      	ldr	r3, [r0, #56]	; 0x38
   839f6:	2b00      	cmp	r3, #0
   839f8:	d047      	beq.n	83a8a <__srefill_r+0x9e>
   839fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   839fe:	b29a      	uxth	r2, r3
   83a00:	0497      	lsls	r7, r2, #18
   83a02:	d407      	bmi.n	83a14 <__srefill_r+0x28>
   83a04:	6e62      	ldr	r2, [r4, #100]	; 0x64
   83a06:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   83a0a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   83a0e:	6662      	str	r2, [r4, #100]	; 0x64
   83a10:	81a3      	strh	r3, [r4, #12]
   83a12:	b29a      	uxth	r2, r3
   83a14:	2100      	movs	r1, #0
   83a16:	0696      	lsls	r6, r2, #26
   83a18:	6061      	str	r1, [r4, #4]
   83a1a:	d433      	bmi.n	83a84 <__srefill_r+0x98>
   83a1c:	0750      	lsls	r0, r2, #29
   83a1e:	d522      	bpl.n	83a66 <__srefill_r+0x7a>
   83a20:	6b21      	ldr	r1, [r4, #48]	; 0x30
   83a22:	b161      	cbz	r1, 83a3e <__srefill_r+0x52>
   83a24:	f104 0340 	add.w	r3, r4, #64	; 0x40
   83a28:	4299      	cmp	r1, r3
   83a2a:	d002      	beq.n	83a32 <__srefill_r+0x46>
   83a2c:	4628      	mov	r0, r5
   83a2e:	f7fe fef7 	bl	82820 <_free_r>
   83a32:	2000      	movs	r0, #0
   83a34:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   83a36:	6320      	str	r0, [r4, #48]	; 0x30
   83a38:	6063      	str	r3, [r4, #4]
   83a3a:	2b00      	cmp	r3, #0
   83a3c:	d140      	bne.n	83ac0 <__srefill_r+0xd4>
   83a3e:	6923      	ldr	r3, [r4, #16]
   83a40:	2b00      	cmp	r3, #0
   83a42:	d04d      	beq.n	83ae0 <__srefill_r+0xf4>
   83a44:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
   83a48:	b2be      	uxth	r6, r7
   83a4a:	07b3      	lsls	r3, r6, #30
   83a4c:	d120      	bne.n	83a90 <__srefill_r+0xa4>
   83a4e:	6922      	ldr	r2, [r4, #16]
   83a50:	4628      	mov	r0, r5
   83a52:	6022      	str	r2, [r4, #0]
   83a54:	6a25      	ldr	r5, [r4, #32]
   83a56:	6963      	ldr	r3, [r4, #20]
   83a58:	69e1      	ldr	r1, [r4, #28]
   83a5a:	47a8      	blx	r5
   83a5c:	2800      	cmp	r0, #0
   83a5e:	6060      	str	r0, [r4, #4]
   83a60:	dd09      	ble.n	83a76 <__srefill_r+0x8a>
   83a62:	2000      	movs	r0, #0
   83a64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83a66:	06d1      	lsls	r1, r2, #27
   83a68:	d53f      	bpl.n	83aea <__srefill_r+0xfe>
   83a6a:	0712      	lsls	r2, r2, #28
   83a6c:	d42b      	bmi.n	83ac6 <__srefill_r+0xda>
   83a6e:	f043 0304 	orr.w	r3, r3, #4
   83a72:	81a3      	strh	r3, [r4, #12]
   83a74:	e7e3      	b.n	83a3e <__srefill_r+0x52>
   83a76:	d01c      	beq.n	83ab2 <__srefill_r+0xc6>
   83a78:	2200      	movs	r2, #0
   83a7a:	89a3      	ldrh	r3, [r4, #12]
   83a7c:	6062      	str	r2, [r4, #4]
   83a7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   83a82:	81a3      	strh	r3, [r4, #12]
   83a84:	f04f 30ff 	mov.w	r0, #4294967295
   83a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83a8a:	f7fe fda3 	bl	825d4 <__sinit>
   83a8e:	e7b4      	b.n	839fa <__srefill_r+0xe>
   83a90:	2201      	movs	r2, #1
   83a92:	4b1a      	ldr	r3, [pc, #104]	; (83afc <__srefill_r+0x110>)
   83a94:	81a2      	strh	r2, [r4, #12]
   83a96:	6818      	ldr	r0, [r3, #0]
   83a98:	4919      	ldr	r1, [pc, #100]	; (83b00 <__srefill_r+0x114>)
   83a9a:	f006 0609 	and.w	r6, r6, #9
   83a9e:	f7ff f91f 	bl	82ce0 <_fwalk>
   83aa2:	2e09      	cmp	r6, #9
   83aa4:	81a7      	strh	r7, [r4, #12]
   83aa6:	d1d2      	bne.n	83a4e <__srefill_r+0x62>
   83aa8:	4621      	mov	r1, r4
   83aaa:	4628      	mov	r0, r5
   83aac:	f7fe fc8c 	bl	823c8 <__sflush_r>
   83ab0:	e7cd      	b.n	83a4e <__srefill_r+0x62>
   83ab2:	89a3      	ldrh	r3, [r4, #12]
   83ab4:	f04f 30ff 	mov.w	r0, #4294967295
   83ab8:	f043 0320 	orr.w	r3, r3, #32
   83abc:	81a3      	strh	r3, [r4, #12]
   83abe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83ac0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
   83ac2:	6023      	str	r3, [r4, #0]
   83ac4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83ac6:	4621      	mov	r1, r4
   83ac8:	4628      	mov	r0, r5
   83aca:	f7fe fd19 	bl	82500 <_fflush_r>
   83ace:	2800      	cmp	r0, #0
   83ad0:	d1d8      	bne.n	83a84 <__srefill_r+0x98>
   83ad2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83ad6:	60a0      	str	r0, [r4, #8]
   83ad8:	61a0      	str	r0, [r4, #24]
   83ada:	f023 0308 	bic.w	r3, r3, #8
   83ade:	e7c6      	b.n	83a6e <__srefill_r+0x82>
   83ae0:	4621      	mov	r1, r4
   83ae2:	4628      	mov	r0, r5
   83ae4:	f7ff f98c 	bl	82e00 <__smakebuf_r>
   83ae8:	e7ac      	b.n	83a44 <__srefill_r+0x58>
   83aea:	2209      	movs	r2, #9
   83aec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   83af0:	602a      	str	r2, [r5, #0]
   83af2:	f04f 30ff 	mov.w	r0, #4294967295
   83af6:	81a3      	strh	r3, [r4, #12]
   83af8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83afa:	bf00      	nop
   83afc:	00084348 	.word	0x00084348
   83b00:	000839d9 	.word	0x000839d9

00083b04 <_sbrk_r>:
   83b04:	b538      	push	{r3, r4, r5, lr}
   83b06:	2300      	movs	r3, #0
   83b08:	4c06      	ldr	r4, [pc, #24]	; (83b24 <_sbrk_r+0x20>)
   83b0a:	4605      	mov	r5, r0
   83b0c:	4608      	mov	r0, r1
   83b0e:	6023      	str	r3, [r4, #0]
   83b10:	f7fc ff8c 	bl	80a2c <_sbrk>
   83b14:	1c43      	adds	r3, r0, #1
   83b16:	d000      	beq.n	83b1a <_sbrk_r+0x16>
   83b18:	bd38      	pop	{r3, r4, r5, pc}
   83b1a:	6823      	ldr	r3, [r4, #0]
   83b1c:	2b00      	cmp	r3, #0
   83b1e:	d0fb      	beq.n	83b18 <_sbrk_r+0x14>
   83b20:	602b      	str	r3, [r5, #0]
   83b22:	bd38      	pop	{r3, r4, r5, pc}
   83b24:	20070bec 	.word	0x20070bec

00083b28 <__sread>:
   83b28:	b510      	push	{r4, lr}
   83b2a:	460c      	mov	r4, r1
   83b2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83b30:	f000 fa22 	bl	83f78 <_read_r>
   83b34:	2800      	cmp	r0, #0
   83b36:	db03      	blt.n	83b40 <__sread+0x18>
   83b38:	6d23      	ldr	r3, [r4, #80]	; 0x50
   83b3a:	4403      	add	r3, r0
   83b3c:	6523      	str	r3, [r4, #80]	; 0x50
   83b3e:	bd10      	pop	{r4, pc}
   83b40:	89a3      	ldrh	r3, [r4, #12]
   83b42:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   83b46:	81a3      	strh	r3, [r4, #12]
   83b48:	bd10      	pop	{r4, pc}
   83b4a:	bf00      	nop

00083b4c <__swrite>:
   83b4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83b50:	460c      	mov	r4, r1
   83b52:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   83b56:	461f      	mov	r7, r3
   83b58:	05cb      	lsls	r3, r1, #23
   83b5a:	4616      	mov	r6, r2
   83b5c:	4605      	mov	r5, r0
   83b5e:	d507      	bpl.n	83b70 <__swrite+0x24>
   83b60:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83b64:	2302      	movs	r3, #2
   83b66:	2200      	movs	r2, #0
   83b68:	f000 f9f0 	bl	83f4c <_lseek_r>
   83b6c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   83b70:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   83b74:	81a1      	strh	r1, [r4, #12]
   83b76:	463b      	mov	r3, r7
   83b78:	4632      	mov	r2, r6
   83b7a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   83b7e:	4628      	mov	r0, r5
   83b80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83b84:	f000 b8d0 	b.w	83d28 <_write_r>

00083b88 <__sseek>:
   83b88:	b510      	push	{r4, lr}
   83b8a:	460c      	mov	r4, r1
   83b8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83b90:	f000 f9dc 	bl	83f4c <_lseek_r>
   83b94:	89a3      	ldrh	r3, [r4, #12]
   83b96:	1c42      	adds	r2, r0, #1
   83b98:	bf0e      	itee	eq
   83b9a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   83b9e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   83ba2:	6520      	strne	r0, [r4, #80]	; 0x50
   83ba4:	81a3      	strh	r3, [r4, #12]
   83ba6:	bd10      	pop	{r4, pc}

00083ba8 <__sclose>:
   83ba8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   83bac:	f000 b934 	b.w	83e18 <_close_r>

00083bb0 <strlen>:
   83bb0:	f020 0103 	bic.w	r1, r0, #3
   83bb4:	f010 0003 	ands.w	r0, r0, #3
   83bb8:	f1c0 0000 	rsb	r0, r0, #0
   83bbc:	f851 3b04 	ldr.w	r3, [r1], #4
   83bc0:	f100 0c04 	add.w	ip, r0, #4
   83bc4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83bc8:	f06f 0200 	mvn.w	r2, #0
   83bcc:	bf1c      	itt	ne
   83bce:	fa22 f20c 	lsrne.w	r2, r2, ip
   83bd2:	4313      	orrne	r3, r2
   83bd4:	f04f 0c01 	mov.w	ip, #1
   83bd8:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   83bdc:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   83be0:	eba3 020c 	sub.w	r2, r3, ip
   83be4:	ea22 0203 	bic.w	r2, r2, r3
   83be8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   83bec:	bf04      	itt	eq
   83bee:	f851 3b04 	ldreq.w	r3, [r1], #4
   83bf2:	3004      	addeq	r0, #4
   83bf4:	d0f4      	beq.n	83be0 <strlen+0x30>
   83bf6:	f1c2 0100 	rsb	r1, r2, #0
   83bfa:	ea02 0201 	and.w	r2, r2, r1
   83bfe:	fab2 f282 	clz	r2, r2
   83c02:	f1c2 021f 	rsb	r2, r2, #31
   83c06:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   83c0a:	4770      	bx	lr

00083c0c <__swbuf_r>:
   83c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83c0e:	460d      	mov	r5, r1
   83c10:	4614      	mov	r4, r2
   83c12:	4606      	mov	r6, r0
   83c14:	b110      	cbz	r0, 83c1c <__swbuf_r+0x10>
   83c16:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83c18:	2b00      	cmp	r3, #0
   83c1a:	d04b      	beq.n	83cb4 <__swbuf_r+0xa8>
   83c1c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83c20:	69a3      	ldr	r3, [r4, #24]
   83c22:	b291      	uxth	r1, r2
   83c24:	0708      	lsls	r0, r1, #28
   83c26:	60a3      	str	r3, [r4, #8]
   83c28:	d539      	bpl.n	83c9e <__swbuf_r+0x92>
   83c2a:	6923      	ldr	r3, [r4, #16]
   83c2c:	2b00      	cmp	r3, #0
   83c2e:	d036      	beq.n	83c9e <__swbuf_r+0x92>
   83c30:	b2ed      	uxtb	r5, r5
   83c32:	0489      	lsls	r1, r1, #18
   83c34:	462f      	mov	r7, r5
   83c36:	d515      	bpl.n	83c64 <__swbuf_r+0x58>
   83c38:	6822      	ldr	r2, [r4, #0]
   83c3a:	6961      	ldr	r1, [r4, #20]
   83c3c:	1ad3      	subs	r3, r2, r3
   83c3e:	428b      	cmp	r3, r1
   83c40:	da1c      	bge.n	83c7c <__swbuf_r+0x70>
   83c42:	3301      	adds	r3, #1
   83c44:	68a1      	ldr	r1, [r4, #8]
   83c46:	1c50      	adds	r0, r2, #1
   83c48:	3901      	subs	r1, #1
   83c4a:	60a1      	str	r1, [r4, #8]
   83c4c:	6020      	str	r0, [r4, #0]
   83c4e:	7015      	strb	r5, [r2, #0]
   83c50:	6962      	ldr	r2, [r4, #20]
   83c52:	429a      	cmp	r2, r3
   83c54:	d01a      	beq.n	83c8c <__swbuf_r+0x80>
   83c56:	89a3      	ldrh	r3, [r4, #12]
   83c58:	07db      	lsls	r3, r3, #31
   83c5a:	d501      	bpl.n	83c60 <__swbuf_r+0x54>
   83c5c:	2d0a      	cmp	r5, #10
   83c5e:	d015      	beq.n	83c8c <__swbuf_r+0x80>
   83c60:	4638      	mov	r0, r7
   83c62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83c64:	6e61      	ldr	r1, [r4, #100]	; 0x64
   83c66:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   83c6a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
   83c6e:	81a2      	strh	r2, [r4, #12]
   83c70:	6822      	ldr	r2, [r4, #0]
   83c72:	6661      	str	r1, [r4, #100]	; 0x64
   83c74:	6961      	ldr	r1, [r4, #20]
   83c76:	1ad3      	subs	r3, r2, r3
   83c78:	428b      	cmp	r3, r1
   83c7a:	dbe2      	blt.n	83c42 <__swbuf_r+0x36>
   83c7c:	4621      	mov	r1, r4
   83c7e:	4630      	mov	r0, r6
   83c80:	f7fe fc3e 	bl	82500 <_fflush_r>
   83c84:	b940      	cbnz	r0, 83c98 <__swbuf_r+0x8c>
   83c86:	2301      	movs	r3, #1
   83c88:	6822      	ldr	r2, [r4, #0]
   83c8a:	e7db      	b.n	83c44 <__swbuf_r+0x38>
   83c8c:	4621      	mov	r1, r4
   83c8e:	4630      	mov	r0, r6
   83c90:	f7fe fc36 	bl	82500 <_fflush_r>
   83c94:	2800      	cmp	r0, #0
   83c96:	d0e3      	beq.n	83c60 <__swbuf_r+0x54>
   83c98:	f04f 37ff 	mov.w	r7, #4294967295
   83c9c:	e7e0      	b.n	83c60 <__swbuf_r+0x54>
   83c9e:	4621      	mov	r1, r4
   83ca0:	4630      	mov	r0, r6
   83ca2:	f7fe fb1d 	bl	822e0 <__swsetup_r>
   83ca6:	2800      	cmp	r0, #0
   83ca8:	d1f6      	bne.n	83c98 <__swbuf_r+0x8c>
   83caa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83cae:	6923      	ldr	r3, [r4, #16]
   83cb0:	b291      	uxth	r1, r2
   83cb2:	e7bd      	b.n	83c30 <__swbuf_r+0x24>
   83cb4:	f7fe fc8e 	bl	825d4 <__sinit>
   83cb8:	e7b0      	b.n	83c1c <__swbuf_r+0x10>
   83cba:	bf00      	nop

00083cbc <_wcrtomb_r>:
   83cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
   83cbe:	4606      	mov	r6, r0
   83cc0:	b085      	sub	sp, #20
   83cc2:	461f      	mov	r7, r3
   83cc4:	b189      	cbz	r1, 83cea <_wcrtomb_r+0x2e>
   83cc6:	4c10      	ldr	r4, [pc, #64]	; (83d08 <_wcrtomb_r+0x4c>)
   83cc8:	4d10      	ldr	r5, [pc, #64]	; (83d0c <_wcrtomb_r+0x50>)
   83cca:	6824      	ldr	r4, [r4, #0]
   83ccc:	6b64      	ldr	r4, [r4, #52]	; 0x34
   83cce:	2c00      	cmp	r4, #0
   83cd0:	bf08      	it	eq
   83cd2:	462c      	moveq	r4, r5
   83cd4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83cd8:	47a0      	blx	r4
   83cda:	1c43      	adds	r3, r0, #1
   83cdc:	d103      	bne.n	83ce6 <_wcrtomb_r+0x2a>
   83cde:	2200      	movs	r2, #0
   83ce0:	238a      	movs	r3, #138	; 0x8a
   83ce2:	603a      	str	r2, [r7, #0]
   83ce4:	6033      	str	r3, [r6, #0]
   83ce6:	b005      	add	sp, #20
   83ce8:	bdf0      	pop	{r4, r5, r6, r7, pc}
   83cea:	460c      	mov	r4, r1
   83cec:	4a06      	ldr	r2, [pc, #24]	; (83d08 <_wcrtomb_r+0x4c>)
   83cee:	4d07      	ldr	r5, [pc, #28]	; (83d0c <_wcrtomb_r+0x50>)
   83cf0:	6811      	ldr	r1, [r2, #0]
   83cf2:	4622      	mov	r2, r4
   83cf4:	6b4c      	ldr	r4, [r1, #52]	; 0x34
   83cf6:	a901      	add	r1, sp, #4
   83cf8:	2c00      	cmp	r4, #0
   83cfa:	bf08      	it	eq
   83cfc:	462c      	moveq	r4, r5
   83cfe:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   83d02:	47a0      	blx	r4
   83d04:	e7e9      	b.n	83cda <_wcrtomb_r+0x1e>
   83d06:	bf00      	nop
   83d08:	2007013c 	.word	0x2007013c
   83d0c:	2007056c 	.word	0x2007056c

00083d10 <__ascii_wctomb>:
   83d10:	b119      	cbz	r1, 83d1a <__ascii_wctomb+0xa>
   83d12:	2aff      	cmp	r2, #255	; 0xff
   83d14:	d803      	bhi.n	83d1e <__ascii_wctomb+0xe>
   83d16:	700a      	strb	r2, [r1, #0]
   83d18:	2101      	movs	r1, #1
   83d1a:	4608      	mov	r0, r1
   83d1c:	4770      	bx	lr
   83d1e:	238a      	movs	r3, #138	; 0x8a
   83d20:	f04f 31ff 	mov.w	r1, #4294967295
   83d24:	6003      	str	r3, [r0, #0]
   83d26:	e7f8      	b.n	83d1a <__ascii_wctomb+0xa>

00083d28 <_write_r>:
   83d28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83d2a:	460e      	mov	r6, r1
   83d2c:	2500      	movs	r5, #0
   83d2e:	4c08      	ldr	r4, [pc, #32]	; (83d50 <_write_r+0x28>)
   83d30:	4611      	mov	r1, r2
   83d32:	4607      	mov	r7, r0
   83d34:	461a      	mov	r2, r3
   83d36:	4630      	mov	r0, r6
   83d38:	6025      	str	r5, [r4, #0]
   83d3a:	f7fc fa45 	bl	801c8 <_write>
   83d3e:	1c43      	adds	r3, r0, #1
   83d40:	d000      	beq.n	83d44 <_write_r+0x1c>
   83d42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83d44:	6823      	ldr	r3, [r4, #0]
   83d46:	2b00      	cmp	r3, #0
   83d48:	d0fb      	beq.n	83d42 <_write_r+0x1a>
   83d4a:	603b      	str	r3, [r7, #0]
   83d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83d4e:	bf00      	nop
   83d50:	20070bec 	.word	0x20070bec

00083d54 <__register_exitproc>:
   83d54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   83d58:	4d2c      	ldr	r5, [pc, #176]	; (83e0c <__register_exitproc+0xb8>)
   83d5a:	4606      	mov	r6, r0
   83d5c:	6828      	ldr	r0, [r5, #0]
   83d5e:	4698      	mov	r8, r3
   83d60:	460f      	mov	r7, r1
   83d62:	4691      	mov	r9, r2
   83d64:	f7ff f81a 	bl	82d9c <__retarget_lock_acquire_recursive>
   83d68:	4b29      	ldr	r3, [pc, #164]	; (83e10 <__register_exitproc+0xbc>)
   83d6a:	681c      	ldr	r4, [r3, #0]
   83d6c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   83d70:	2b00      	cmp	r3, #0
   83d72:	d03e      	beq.n	83df2 <__register_exitproc+0x9e>
   83d74:	685a      	ldr	r2, [r3, #4]
   83d76:	2a1f      	cmp	r2, #31
   83d78:	dc1c      	bgt.n	83db4 <__register_exitproc+0x60>
   83d7a:	f102 0e01 	add.w	lr, r2, #1
   83d7e:	b176      	cbz	r6, 83d9e <__register_exitproc+0x4a>
   83d80:	2101      	movs	r1, #1
   83d82:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   83d86:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   83d8a:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   83d8e:	4091      	lsls	r1, r2
   83d90:	4308      	orrs	r0, r1
   83d92:	2e02      	cmp	r6, #2
   83d94:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83d98:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   83d9c:	d023      	beq.n	83de6 <__register_exitproc+0x92>
   83d9e:	3202      	adds	r2, #2
   83da0:	f8c3 e004 	str.w	lr, [r3, #4]
   83da4:	6828      	ldr	r0, [r5, #0]
   83da6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   83daa:	f7fe fff9 	bl	82da0 <__retarget_lock_release_recursive>
   83dae:	2000      	movs	r0, #0
   83db0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83db4:	4b17      	ldr	r3, [pc, #92]	; (83e14 <__register_exitproc+0xc0>)
   83db6:	b30b      	cbz	r3, 83dfc <__register_exitproc+0xa8>
   83db8:	f44f 70c8 	mov.w	r0, #400	; 0x190
   83dbc:	f7ff f86a 	bl	82e94 <malloc>
   83dc0:	4603      	mov	r3, r0
   83dc2:	b1d8      	cbz	r0, 83dfc <__register_exitproc+0xa8>
   83dc4:	2000      	movs	r0, #0
   83dc6:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   83dca:	f04f 0e01 	mov.w	lr, #1
   83dce:	6058      	str	r0, [r3, #4]
   83dd0:	6019      	str	r1, [r3, #0]
   83dd2:	4602      	mov	r2, r0
   83dd4:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   83dd8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   83ddc:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   83de0:	2e00      	cmp	r6, #0
   83de2:	d0dc      	beq.n	83d9e <__register_exitproc+0x4a>
   83de4:	e7cc      	b.n	83d80 <__register_exitproc+0x2c>
   83de6:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   83dea:	4301      	orrs	r1, r0
   83dec:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   83df0:	e7d5      	b.n	83d9e <__register_exitproc+0x4a>
   83df2:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   83df6:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   83dfa:	e7bb      	b.n	83d74 <__register_exitproc+0x20>
   83dfc:	6828      	ldr	r0, [r5, #0]
   83dfe:	f7fe ffcf 	bl	82da0 <__retarget_lock_release_recursive>
   83e02:	f04f 30ff 	mov.w	r0, #4294967295
   83e06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   83e0a:	bf00      	nop
   83e0c:	20070568 	.word	0x20070568
   83e10:	00084348 	.word	0x00084348
   83e14:	00082e95 	.word	0x00082e95

00083e18 <_close_r>:
   83e18:	b538      	push	{r3, r4, r5, lr}
   83e1a:	2300      	movs	r3, #0
   83e1c:	4c06      	ldr	r4, [pc, #24]	; (83e38 <_close_r+0x20>)
   83e1e:	4605      	mov	r5, r0
   83e20:	4608      	mov	r0, r1
   83e22:	6023      	str	r3, [r4, #0]
   83e24:	f7fc fe1e 	bl	80a64 <_close>
   83e28:	1c43      	adds	r3, r0, #1
   83e2a:	d000      	beq.n	83e2e <_close_r+0x16>
   83e2c:	bd38      	pop	{r3, r4, r5, pc}
   83e2e:	6823      	ldr	r3, [r4, #0]
   83e30:	2b00      	cmp	r3, #0
   83e32:	d0fb      	beq.n	83e2c <_close_r+0x14>
   83e34:	602b      	str	r3, [r5, #0]
   83e36:	bd38      	pop	{r3, r4, r5, pc}
   83e38:	20070bec 	.word	0x20070bec

00083e3c <_fclose_r>:
   83e3c:	b570      	push	{r4, r5, r6, lr}
   83e3e:	b159      	cbz	r1, 83e58 <_fclose_r+0x1c>
   83e40:	4605      	mov	r5, r0
   83e42:	460c      	mov	r4, r1
   83e44:	b110      	cbz	r0, 83e4c <_fclose_r+0x10>
   83e46:	6b83      	ldr	r3, [r0, #56]	; 0x38
   83e48:	2b00      	cmp	r3, #0
   83e4a:	d03c      	beq.n	83ec6 <_fclose_r+0x8a>
   83e4c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83e4e:	07d8      	lsls	r0, r3, #31
   83e50:	d505      	bpl.n	83e5e <_fclose_r+0x22>
   83e52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83e56:	b92b      	cbnz	r3, 83e64 <_fclose_r+0x28>
   83e58:	2600      	movs	r6, #0
   83e5a:	4630      	mov	r0, r6
   83e5c:	bd70      	pop	{r4, r5, r6, pc}
   83e5e:	89a3      	ldrh	r3, [r4, #12]
   83e60:	0599      	lsls	r1, r3, #22
   83e62:	d53c      	bpl.n	83ede <_fclose_r+0xa2>
   83e64:	4621      	mov	r1, r4
   83e66:	4628      	mov	r0, r5
   83e68:	f7fe faae 	bl	823c8 <__sflush_r>
   83e6c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   83e6e:	4606      	mov	r6, r0
   83e70:	b133      	cbz	r3, 83e80 <_fclose_r+0x44>
   83e72:	69e1      	ldr	r1, [r4, #28]
   83e74:	4628      	mov	r0, r5
   83e76:	4798      	blx	r3
   83e78:	2800      	cmp	r0, #0
   83e7a:	bfb8      	it	lt
   83e7c:	f04f 36ff 	movlt.w	r6, #4294967295
   83e80:	89a3      	ldrh	r3, [r4, #12]
   83e82:	061a      	lsls	r2, r3, #24
   83e84:	d422      	bmi.n	83ecc <_fclose_r+0x90>
   83e86:	6b21      	ldr	r1, [r4, #48]	; 0x30
   83e88:	b141      	cbz	r1, 83e9c <_fclose_r+0x60>
   83e8a:	f104 0340 	add.w	r3, r4, #64	; 0x40
   83e8e:	4299      	cmp	r1, r3
   83e90:	d002      	beq.n	83e98 <_fclose_r+0x5c>
   83e92:	4628      	mov	r0, r5
   83e94:	f7fe fcc4 	bl	82820 <_free_r>
   83e98:	2300      	movs	r3, #0
   83e9a:	6323      	str	r3, [r4, #48]	; 0x30
   83e9c:	6c61      	ldr	r1, [r4, #68]	; 0x44
   83e9e:	b121      	cbz	r1, 83eaa <_fclose_r+0x6e>
   83ea0:	4628      	mov	r0, r5
   83ea2:	f7fe fcbd 	bl	82820 <_free_r>
   83ea6:	2300      	movs	r3, #0
   83ea8:	6463      	str	r3, [r4, #68]	; 0x44
   83eaa:	f7fe fbc3 	bl	82634 <__sfp_lock_acquire>
   83eae:	2200      	movs	r2, #0
   83eb0:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83eb2:	81a2      	strh	r2, [r4, #12]
   83eb4:	07db      	lsls	r3, r3, #31
   83eb6:	d50e      	bpl.n	83ed6 <_fclose_r+0x9a>
   83eb8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83eba:	f7fe ff6d 	bl	82d98 <__retarget_lock_close_recursive>
   83ebe:	f7fe fbbf 	bl	82640 <__sfp_lock_release>
   83ec2:	4630      	mov	r0, r6
   83ec4:	bd70      	pop	{r4, r5, r6, pc}
   83ec6:	f7fe fb85 	bl	825d4 <__sinit>
   83eca:	e7bf      	b.n	83e4c <_fclose_r+0x10>
   83ecc:	6921      	ldr	r1, [r4, #16]
   83ece:	4628      	mov	r0, r5
   83ed0:	f7fe fca6 	bl	82820 <_free_r>
   83ed4:	e7d7      	b.n	83e86 <_fclose_r+0x4a>
   83ed6:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83ed8:	f7fe ff62 	bl	82da0 <__retarget_lock_release_recursive>
   83edc:	e7ec      	b.n	83eb8 <_fclose_r+0x7c>
   83ede:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83ee0:	f7fe ff5c 	bl	82d9c <__retarget_lock_acquire_recursive>
   83ee4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83ee8:	2b00      	cmp	r3, #0
   83eea:	d1bb      	bne.n	83e64 <_fclose_r+0x28>
   83eec:	6e66      	ldr	r6, [r4, #100]	; 0x64
   83eee:	f016 0601 	ands.w	r6, r6, #1
   83ef2:	d1b1      	bne.n	83e58 <_fclose_r+0x1c>
   83ef4:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83ef6:	f7fe ff53 	bl	82da0 <__retarget_lock_release_recursive>
   83efa:	4630      	mov	r0, r6
   83efc:	bd70      	pop	{r4, r5, r6, pc}
   83efe:	bf00      	nop

00083f00 <_fstat_r>:
   83f00:	b570      	push	{r4, r5, r6, lr}
   83f02:	460d      	mov	r5, r1
   83f04:	2300      	movs	r3, #0
   83f06:	4c07      	ldr	r4, [pc, #28]	; (83f24 <_fstat_r+0x24>)
   83f08:	4606      	mov	r6, r0
   83f0a:	4611      	mov	r1, r2
   83f0c:	4628      	mov	r0, r5
   83f0e:	6023      	str	r3, [r4, #0]
   83f10:	f7fc fdab 	bl	80a6a <_fstat>
   83f14:	1c43      	adds	r3, r0, #1
   83f16:	d000      	beq.n	83f1a <_fstat_r+0x1a>
   83f18:	bd70      	pop	{r4, r5, r6, pc}
   83f1a:	6823      	ldr	r3, [r4, #0]
   83f1c:	2b00      	cmp	r3, #0
   83f1e:	d0fb      	beq.n	83f18 <_fstat_r+0x18>
   83f20:	6033      	str	r3, [r6, #0]
   83f22:	bd70      	pop	{r4, r5, r6, pc}
   83f24:	20070bec 	.word	0x20070bec

00083f28 <_isatty_r>:
   83f28:	b538      	push	{r3, r4, r5, lr}
   83f2a:	2300      	movs	r3, #0
   83f2c:	4c06      	ldr	r4, [pc, #24]	; (83f48 <_isatty_r+0x20>)
   83f2e:	4605      	mov	r5, r0
   83f30:	4608      	mov	r0, r1
   83f32:	6023      	str	r3, [r4, #0]
   83f34:	f7fc fd9e 	bl	80a74 <_isatty>
   83f38:	1c43      	adds	r3, r0, #1
   83f3a:	d000      	beq.n	83f3e <_isatty_r+0x16>
   83f3c:	bd38      	pop	{r3, r4, r5, pc}
   83f3e:	6823      	ldr	r3, [r4, #0]
   83f40:	2b00      	cmp	r3, #0
   83f42:	d0fb      	beq.n	83f3c <_isatty_r+0x14>
   83f44:	602b      	str	r3, [r5, #0]
   83f46:	bd38      	pop	{r3, r4, r5, pc}
   83f48:	20070bec 	.word	0x20070bec

00083f4c <_lseek_r>:
   83f4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83f4e:	460e      	mov	r6, r1
   83f50:	2500      	movs	r5, #0
   83f52:	4c08      	ldr	r4, [pc, #32]	; (83f74 <_lseek_r+0x28>)
   83f54:	4611      	mov	r1, r2
   83f56:	4607      	mov	r7, r0
   83f58:	461a      	mov	r2, r3
   83f5a:	4630      	mov	r0, r6
   83f5c:	6025      	str	r5, [r4, #0]
   83f5e:	f7fc fd8b 	bl	80a78 <_lseek>
   83f62:	1c43      	adds	r3, r0, #1
   83f64:	d000      	beq.n	83f68 <_lseek_r+0x1c>
   83f66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83f68:	6823      	ldr	r3, [r4, #0]
   83f6a:	2b00      	cmp	r3, #0
   83f6c:	d0fb      	beq.n	83f66 <_lseek_r+0x1a>
   83f6e:	603b      	str	r3, [r7, #0]
   83f70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83f72:	bf00      	nop
   83f74:	20070bec 	.word	0x20070bec

00083f78 <_read_r>:
   83f78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83f7a:	460e      	mov	r6, r1
   83f7c:	2500      	movs	r5, #0
   83f7e:	4c08      	ldr	r4, [pc, #32]	; (83fa0 <_read_r+0x28>)
   83f80:	4611      	mov	r1, r2
   83f82:	4607      	mov	r7, r0
   83f84:	461a      	mov	r2, r3
   83f86:	4630      	mov	r0, r6
   83f88:	6025      	str	r5, [r4, #0]
   83f8a:	f7fc f8e9 	bl	80160 <_read>
   83f8e:	1c43      	adds	r3, r0, #1
   83f90:	d000      	beq.n	83f94 <_read_r+0x1c>
   83f92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83f94:	6823      	ldr	r3, [r4, #0]
   83f96:	2b00      	cmp	r3, #0
   83f98:	d0fb      	beq.n	83f92 <_read_r+0x1a>
   83f9a:	603b      	str	r3, [r7, #0]
   83f9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83f9e:	bf00      	nop
   83fa0:	20070bec 	.word	0x20070bec

00083fa4 <__aeabi_uldivmod>:
   83fa4:	b953      	cbnz	r3, 83fbc <__aeabi_uldivmod+0x18>
   83fa6:	b94a      	cbnz	r2, 83fbc <__aeabi_uldivmod+0x18>
   83fa8:	2900      	cmp	r1, #0
   83faa:	bf08      	it	eq
   83fac:	2800      	cmpeq	r0, #0
   83fae:	bf1c      	itt	ne
   83fb0:	f04f 31ff 	movne.w	r1, #4294967295
   83fb4:	f04f 30ff 	movne.w	r0, #4294967295
   83fb8:	f000 b97a 	b.w	842b0 <__aeabi_idiv0>
   83fbc:	f1ad 0c08 	sub.w	ip, sp, #8
   83fc0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   83fc4:	f000 f806 	bl	83fd4 <__udivmoddi4>
   83fc8:	f8dd e004 	ldr.w	lr, [sp, #4]
   83fcc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   83fd0:	b004      	add	sp, #16
   83fd2:	4770      	bx	lr

00083fd4 <__udivmoddi4>:
   83fd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   83fd8:	468c      	mov	ip, r1
   83fda:	460e      	mov	r6, r1
   83fdc:	4604      	mov	r4, r0
   83fde:	9d08      	ldr	r5, [sp, #32]
   83fe0:	2b00      	cmp	r3, #0
   83fe2:	d150      	bne.n	84086 <__udivmoddi4+0xb2>
   83fe4:	428a      	cmp	r2, r1
   83fe6:	4617      	mov	r7, r2
   83fe8:	d96c      	bls.n	840c4 <__udivmoddi4+0xf0>
   83fea:	fab2 fe82 	clz	lr, r2
   83fee:	f1be 0f00 	cmp.w	lr, #0
   83ff2:	d00b      	beq.n	8400c <__udivmoddi4+0x38>
   83ff4:	f1ce 0c20 	rsb	ip, lr, #32
   83ff8:	fa01 f60e 	lsl.w	r6, r1, lr
   83ffc:	fa20 fc0c 	lsr.w	ip, r0, ip
   84000:	fa02 f70e 	lsl.w	r7, r2, lr
   84004:	ea4c 0c06 	orr.w	ip, ip, r6
   84008:	fa00 f40e 	lsl.w	r4, r0, lr
   8400c:	0c3a      	lsrs	r2, r7, #16
   8400e:	fbbc f9f2 	udiv	r9, ip, r2
   84012:	b2bb      	uxth	r3, r7
   84014:	fb02 cc19 	mls	ip, r2, r9, ip
   84018:	fb09 fa03 	mul.w	sl, r9, r3
   8401c:	ea4f 4814 	mov.w	r8, r4, lsr #16
   84020:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   84024:	45b2      	cmp	sl, r6
   84026:	d90a      	bls.n	8403e <__udivmoddi4+0x6a>
   84028:	19f6      	adds	r6, r6, r7
   8402a:	f109 31ff 	add.w	r1, r9, #4294967295
   8402e:	f080 8125 	bcs.w	8427c <__udivmoddi4+0x2a8>
   84032:	45b2      	cmp	sl, r6
   84034:	f240 8122 	bls.w	8427c <__udivmoddi4+0x2a8>
   84038:	f1a9 0902 	sub.w	r9, r9, #2
   8403c:	443e      	add	r6, r7
   8403e:	eba6 060a 	sub.w	r6, r6, sl
   84042:	fbb6 f0f2 	udiv	r0, r6, r2
   84046:	fb02 6610 	mls	r6, r2, r0, r6
   8404a:	fb00 f303 	mul.w	r3, r0, r3
   8404e:	b2a4      	uxth	r4, r4
   84050:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   84054:	42a3      	cmp	r3, r4
   84056:	d909      	bls.n	8406c <__udivmoddi4+0x98>
   84058:	19e4      	adds	r4, r4, r7
   8405a:	f100 32ff 	add.w	r2, r0, #4294967295
   8405e:	f080 810b 	bcs.w	84278 <__udivmoddi4+0x2a4>
   84062:	42a3      	cmp	r3, r4
   84064:	f240 8108 	bls.w	84278 <__udivmoddi4+0x2a4>
   84068:	3802      	subs	r0, #2
   8406a:	443c      	add	r4, r7
   8406c:	2100      	movs	r1, #0
   8406e:	1ae4      	subs	r4, r4, r3
   84070:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   84074:	2d00      	cmp	r5, #0
   84076:	d062      	beq.n	8413e <__udivmoddi4+0x16a>
   84078:	2300      	movs	r3, #0
   8407a:	fa24 f40e 	lsr.w	r4, r4, lr
   8407e:	602c      	str	r4, [r5, #0]
   84080:	606b      	str	r3, [r5, #4]
   84082:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84086:	428b      	cmp	r3, r1
   84088:	d907      	bls.n	8409a <__udivmoddi4+0xc6>
   8408a:	2d00      	cmp	r5, #0
   8408c:	d055      	beq.n	8413a <__udivmoddi4+0x166>
   8408e:	2100      	movs	r1, #0
   84090:	e885 0041 	stmia.w	r5, {r0, r6}
   84094:	4608      	mov	r0, r1
   84096:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8409a:	fab3 f183 	clz	r1, r3
   8409e:	2900      	cmp	r1, #0
   840a0:	f040 808f 	bne.w	841c2 <__udivmoddi4+0x1ee>
   840a4:	42b3      	cmp	r3, r6
   840a6:	d302      	bcc.n	840ae <__udivmoddi4+0xda>
   840a8:	4282      	cmp	r2, r0
   840aa:	f200 80fc 	bhi.w	842a6 <__udivmoddi4+0x2d2>
   840ae:	1a84      	subs	r4, r0, r2
   840b0:	eb66 0603 	sbc.w	r6, r6, r3
   840b4:	2001      	movs	r0, #1
   840b6:	46b4      	mov	ip, r6
   840b8:	2d00      	cmp	r5, #0
   840ba:	d040      	beq.n	8413e <__udivmoddi4+0x16a>
   840bc:	e885 1010 	stmia.w	r5, {r4, ip}
   840c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   840c4:	b912      	cbnz	r2, 840cc <__udivmoddi4+0xf8>
   840c6:	2701      	movs	r7, #1
   840c8:	fbb7 f7f2 	udiv	r7, r7, r2
   840cc:	fab7 fe87 	clz	lr, r7
   840d0:	f1be 0f00 	cmp.w	lr, #0
   840d4:	d135      	bne.n	84142 <__udivmoddi4+0x16e>
   840d6:	2101      	movs	r1, #1
   840d8:	1bf6      	subs	r6, r6, r7
   840da:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   840de:	fa1f f887 	uxth.w	r8, r7
   840e2:	fbb6 f2fc 	udiv	r2, r6, ip
   840e6:	fb0c 6612 	mls	r6, ip, r2, r6
   840ea:	fb08 f002 	mul.w	r0, r8, r2
   840ee:	0c23      	lsrs	r3, r4, #16
   840f0:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   840f4:	42b0      	cmp	r0, r6
   840f6:	d907      	bls.n	84108 <__udivmoddi4+0x134>
   840f8:	19f6      	adds	r6, r6, r7
   840fa:	f102 33ff 	add.w	r3, r2, #4294967295
   840fe:	d202      	bcs.n	84106 <__udivmoddi4+0x132>
   84100:	42b0      	cmp	r0, r6
   84102:	f200 80d2 	bhi.w	842aa <__udivmoddi4+0x2d6>
   84106:	461a      	mov	r2, r3
   84108:	1a36      	subs	r6, r6, r0
   8410a:	fbb6 f0fc 	udiv	r0, r6, ip
   8410e:	fb0c 6610 	mls	r6, ip, r0, r6
   84112:	fb08 f800 	mul.w	r8, r8, r0
   84116:	b2a3      	uxth	r3, r4
   84118:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   8411c:	45a0      	cmp	r8, r4
   8411e:	d907      	bls.n	84130 <__udivmoddi4+0x15c>
   84120:	19e4      	adds	r4, r4, r7
   84122:	f100 33ff 	add.w	r3, r0, #4294967295
   84126:	d202      	bcs.n	8412e <__udivmoddi4+0x15a>
   84128:	45a0      	cmp	r8, r4
   8412a:	f200 80b9 	bhi.w	842a0 <__udivmoddi4+0x2cc>
   8412e:	4618      	mov	r0, r3
   84130:	eba4 0408 	sub.w	r4, r4, r8
   84134:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   84138:	e79c      	b.n	84074 <__udivmoddi4+0xa0>
   8413a:	4629      	mov	r1, r5
   8413c:	4628      	mov	r0, r5
   8413e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84142:	fa07 f70e 	lsl.w	r7, r7, lr
   84146:	f1ce 0320 	rsb	r3, lr, #32
   8414a:	fa26 f203 	lsr.w	r2, r6, r3
   8414e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   84152:	fbb2 f1fc 	udiv	r1, r2, ip
   84156:	fa1f f887 	uxth.w	r8, r7
   8415a:	fb0c 2211 	mls	r2, ip, r1, r2
   8415e:	fa06 f60e 	lsl.w	r6, r6, lr
   84162:	fa20 f303 	lsr.w	r3, r0, r3
   84166:	fb01 f908 	mul.w	r9, r1, r8
   8416a:	4333      	orrs	r3, r6
   8416c:	0c1e      	lsrs	r6, r3, #16
   8416e:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   84172:	45b1      	cmp	r9, r6
   84174:	fa00 f40e 	lsl.w	r4, r0, lr
   84178:	d909      	bls.n	8418e <__udivmoddi4+0x1ba>
   8417a:	19f6      	adds	r6, r6, r7
   8417c:	f101 32ff 	add.w	r2, r1, #4294967295
   84180:	f080 808c 	bcs.w	8429c <__udivmoddi4+0x2c8>
   84184:	45b1      	cmp	r9, r6
   84186:	f240 8089 	bls.w	8429c <__udivmoddi4+0x2c8>
   8418a:	3902      	subs	r1, #2
   8418c:	443e      	add	r6, r7
   8418e:	eba6 0609 	sub.w	r6, r6, r9
   84192:	fbb6 f0fc 	udiv	r0, r6, ip
   84196:	fb0c 6210 	mls	r2, ip, r0, r6
   8419a:	fb00 f908 	mul.w	r9, r0, r8
   8419e:	b29e      	uxth	r6, r3
   841a0:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   841a4:	45b1      	cmp	r9, r6
   841a6:	d907      	bls.n	841b8 <__udivmoddi4+0x1e4>
   841a8:	19f6      	adds	r6, r6, r7
   841aa:	f100 33ff 	add.w	r3, r0, #4294967295
   841ae:	d271      	bcs.n	84294 <__udivmoddi4+0x2c0>
   841b0:	45b1      	cmp	r9, r6
   841b2:	d96f      	bls.n	84294 <__udivmoddi4+0x2c0>
   841b4:	3802      	subs	r0, #2
   841b6:	443e      	add	r6, r7
   841b8:	eba6 0609 	sub.w	r6, r6, r9
   841bc:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   841c0:	e78f      	b.n	840e2 <__udivmoddi4+0x10e>
   841c2:	f1c1 0720 	rsb	r7, r1, #32
   841c6:	fa22 f807 	lsr.w	r8, r2, r7
   841ca:	408b      	lsls	r3, r1
   841cc:	ea48 0303 	orr.w	r3, r8, r3
   841d0:	fa26 f407 	lsr.w	r4, r6, r7
   841d4:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   841d8:	fbb4 f9fe 	udiv	r9, r4, lr
   841dc:	fa1f fc83 	uxth.w	ip, r3
   841e0:	fb0e 4419 	mls	r4, lr, r9, r4
   841e4:	408e      	lsls	r6, r1
   841e6:	fa20 f807 	lsr.w	r8, r0, r7
   841ea:	fb09 fa0c 	mul.w	sl, r9, ip
   841ee:	ea48 0806 	orr.w	r8, r8, r6
   841f2:	ea4f 4618 	mov.w	r6, r8, lsr #16
   841f6:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   841fa:	45a2      	cmp	sl, r4
   841fc:	fa02 f201 	lsl.w	r2, r2, r1
   84200:	fa00 f601 	lsl.w	r6, r0, r1
   84204:	d908      	bls.n	84218 <__udivmoddi4+0x244>
   84206:	18e4      	adds	r4, r4, r3
   84208:	f109 30ff 	add.w	r0, r9, #4294967295
   8420c:	d244      	bcs.n	84298 <__udivmoddi4+0x2c4>
   8420e:	45a2      	cmp	sl, r4
   84210:	d942      	bls.n	84298 <__udivmoddi4+0x2c4>
   84212:	f1a9 0902 	sub.w	r9, r9, #2
   84216:	441c      	add	r4, r3
   84218:	eba4 040a 	sub.w	r4, r4, sl
   8421c:	fbb4 f0fe 	udiv	r0, r4, lr
   84220:	fb0e 4410 	mls	r4, lr, r0, r4
   84224:	fb00 fc0c 	mul.w	ip, r0, ip
   84228:	fa1f f888 	uxth.w	r8, r8
   8422c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   84230:	45a4      	cmp	ip, r4
   84232:	d907      	bls.n	84244 <__udivmoddi4+0x270>
   84234:	18e4      	adds	r4, r4, r3
   84236:	f100 3eff 	add.w	lr, r0, #4294967295
   8423a:	d229      	bcs.n	84290 <__udivmoddi4+0x2bc>
   8423c:	45a4      	cmp	ip, r4
   8423e:	d927      	bls.n	84290 <__udivmoddi4+0x2bc>
   84240:	3802      	subs	r0, #2
   84242:	441c      	add	r4, r3
   84244:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   84248:	fba0 8902 	umull	r8, r9, r0, r2
   8424c:	eba4 0c0c 	sub.w	ip, r4, ip
   84250:	45cc      	cmp	ip, r9
   84252:	46c2      	mov	sl, r8
   84254:	46ce      	mov	lr, r9
   84256:	d315      	bcc.n	84284 <__udivmoddi4+0x2b0>
   84258:	d012      	beq.n	84280 <__udivmoddi4+0x2ac>
   8425a:	b155      	cbz	r5, 84272 <__udivmoddi4+0x29e>
   8425c:	ebb6 030a 	subs.w	r3, r6, sl
   84260:	eb6c 060e 	sbc.w	r6, ip, lr
   84264:	fa06 f707 	lsl.w	r7, r6, r7
   84268:	40cb      	lsrs	r3, r1
   8426a:	431f      	orrs	r7, r3
   8426c:	40ce      	lsrs	r6, r1
   8426e:	602f      	str	r7, [r5, #0]
   84270:	606e      	str	r6, [r5, #4]
   84272:	2100      	movs	r1, #0
   84274:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84278:	4610      	mov	r0, r2
   8427a:	e6f7      	b.n	8406c <__udivmoddi4+0x98>
   8427c:	4689      	mov	r9, r1
   8427e:	e6de      	b.n	8403e <__udivmoddi4+0x6a>
   84280:	4546      	cmp	r6, r8
   84282:	d2ea      	bcs.n	8425a <__udivmoddi4+0x286>
   84284:	ebb8 0a02 	subs.w	sl, r8, r2
   84288:	eb69 0e03 	sbc.w	lr, r9, r3
   8428c:	3801      	subs	r0, #1
   8428e:	e7e4      	b.n	8425a <__udivmoddi4+0x286>
   84290:	4670      	mov	r0, lr
   84292:	e7d7      	b.n	84244 <__udivmoddi4+0x270>
   84294:	4618      	mov	r0, r3
   84296:	e78f      	b.n	841b8 <__udivmoddi4+0x1e4>
   84298:	4681      	mov	r9, r0
   8429a:	e7bd      	b.n	84218 <__udivmoddi4+0x244>
   8429c:	4611      	mov	r1, r2
   8429e:	e776      	b.n	8418e <__udivmoddi4+0x1ba>
   842a0:	3802      	subs	r0, #2
   842a2:	443c      	add	r4, r7
   842a4:	e744      	b.n	84130 <__udivmoddi4+0x15c>
   842a6:	4608      	mov	r0, r1
   842a8:	e706      	b.n	840b8 <__udivmoddi4+0xe4>
   842aa:	3a02      	subs	r2, #2
   842ac:	443e      	add	r6, r7
   842ae:	e72b      	b.n	84108 <__udivmoddi4+0x134>

000842b0 <__aeabi_idiv0>:
   842b0:	4770      	bx	lr
   842b2:	bf00      	nop
   842b4:	20435345 	.word	0x20435345
   842b8:	75746553 	.word	0x75746553
   842bc:	6f642070 	.word	0x6f642070
   842c0:	000a656e 	.word	0x000a656e
   842c4:	6e6e7552 	.word	0x6e6e7552
   842c8:	20676e69 	.word	0x20676e69
   842cc:	63726f46 	.word	0x63726f46
   842d0:	654d2065 	.word	0x654d2065
   842d4:	72757361 	.word	0x72757361
   842d8:	6e656d65 	.word	0x6e656d65
   842dc:	52202e74 	.word	0x52202e74
   842e0:	0a3f7964 	.word	0x0a3f7964
   842e4:	00000000 	.word	0x00000000
   842e8:	63726550 	.word	0x63726550
   842ec:	3a746e65 	.word	0x3a746e65
   842f0:	0a642520 	.word	0x0a642520
   842f4:	00000000 	.word	0x00000000
   842f8:	63726f46 	.word	0x63726f46
   842fc:	654d2065 	.word	0x654d2065
   84300:	72757361 	.word	0x72757361
   84304:	6e656d65 	.word	0x6e656d65
   84308:	6f642074 	.word	0x6f642074
   8430c:	202e656e 	.word	0x202e656e
   84310:	73657250 	.word	0x73657250
   84314:	6e612073 	.word	0x6e612073
   84318:	656b2079 	.word	0x656b2079
   8431c:	6f742079 	.word	0x6f742079
   84320:	6e6f6320 	.word	0x6e6f6320
   84324:	756e6974 	.word	0x756e6974
   84328:	000a2e65 	.word	0x000a2e65
   8432c:	6e69614d 	.word	0x6e69614d
   84330:	6f6f4c20 	.word	0x6f6f4c20
   84334:	00000a70 	.word	0x00000a70
   84338:	75746553 	.word	0x75746553
   8433c:	69662070 	.word	0x69662070
   84340:	6873696e 	.word	0x6873696e
   84344:	00006465 	.word	0x00006465

00084348 <_global_impure_ptr>:
   84348:	20070140 33323130 37363534 42413938     @.. 0123456789AB
   84358:	46454443 00000000 33323130 37363534     CDEF....01234567
   84368:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   84378:	0000296c                                l)..

0008437c <blanks.7217>:
   8437c:	20202020 20202020 20202020 20202020                     

0008438c <zeroes.7218>:
   8438c:	30303030 30303030 30303030 30303030     0000000000000000
   8439c:	00000043 49534f50 00000058 0000002e     C...POSIX.......

000843ac <_ctype_>:
   843ac:	20202000 20202020 28282020 20282828     .         ((((( 
   843bc:	20202020 20202020 20202020 20202020                     
   843cc:	10108820 10101010 10101010 10101010      ...............
   843dc:	04040410 04040404 10040404 10101010     ................
   843ec:	41411010 41414141 01010101 01010101     ..AAAAAA........
   843fc:	01010101 01010101 01010101 10101010     ................
   8440c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8441c:	02020202 02020202 02020202 10101010     ................
   8442c:	00000020 00000000 00000000 00000000      ...............
	...

000844b0 <_init>:
   844b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   844b2:	bf00      	nop
   844b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
   844b6:	bc08      	pop	{r3}
   844b8:	469e      	mov	lr, r3
   844ba:	4770      	bx	lr

000844bc <__init_array_start>:
   844bc:	000823a9 	.word	0x000823a9

000844c0 <__frame_dummy_init_array_entry>:
   844c0:	00080119                                ....

000844c4 <_fini>:
   844c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   844c6:	bf00      	nop
   844c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   844ca:	bc08      	pop	{r3}
   844cc:	469e      	mov	lr, r3
   844ce:	4770      	bx	lr

000844d0 <__fini_array_start>:
   844d0:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20070000:	f3bf 8f5f 	dmb	sy
20070004:	3801      	subs	r0, #1
20070006:	d1fb      	bne.n	20070000 <portable_delay_cycles>
20070008:	4770      	bx	lr
	...

2007000c <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070010:	4a20      	ldr	r2, [pc, #128]	; (20070094 <SystemInit+0x88>)
20070012:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070014:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070018:	6013      	str	r3, [r2, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007001a:	4b1f      	ldr	r3, [pc, #124]	; (20070098 <SystemInit+0x8c>)
2007001c:	6a1b      	ldr	r3, [r3, #32]
2007001e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070022:	d107      	bne.n	20070034 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070024:	4a1d      	ldr	r2, [pc, #116]	; (2007009c <SystemInit+0x90>)
20070026:	4b1c      	ldr	r3, [pc, #112]	; (20070098 <SystemInit+0x8c>)
20070028:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007002a:	461a      	mov	r2, r3
2007002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007002e:	f013 0f01 	tst.w	r3, #1
20070032:	d0fb      	beq.n	2007002c <SystemInit+0x20>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4a1a      	ldr	r2, [pc, #104]	; (200700a0 <SystemInit+0x94>)
20070036:	4b18      	ldr	r3, [pc, #96]	; (20070098 <SystemInit+0x8c>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	461a      	mov	r2, r3
2007003c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007003e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070042:	d0fb      	beq.n	2007003c <SystemInit+0x30>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070044:	4a14      	ldr	r2, [pc, #80]	; (20070098 <SystemInit+0x8c>)
20070046:	6b13      	ldr	r3, [r2, #48]	; 0x30
20070048:	f023 0303 	bic.w	r3, r3, #3
2007004c:	f043 0301 	orr.w	r3, r3, #1
20070050:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070052:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070054:	f013 0f08 	tst.w	r3, #8
20070058:	d0fb      	beq.n	20070052 <SystemInit+0x46>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2007005a:	4a12      	ldr	r2, [pc, #72]	; (200700a4 <SystemInit+0x98>)
2007005c:	4b0e      	ldr	r3, [pc, #56]	; (20070098 <SystemInit+0x8c>)
2007005e:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070060:	461a      	mov	r2, r3
20070062:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070064:	f013 0f02 	tst.w	r3, #2
20070068:	d0fb      	beq.n	20070062 <SystemInit+0x56>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007006a:	2211      	movs	r2, #17
2007006c:	4b0a      	ldr	r3, [pc, #40]	; (20070098 <SystemInit+0x8c>)
2007006e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070070:	461a      	mov	r2, r3
20070072:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070074:	f013 0f08 	tst.w	r3, #8
20070078:	d0fb      	beq.n	20070072 <SystemInit+0x66>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007007a:	2212      	movs	r2, #18
2007007c:	4b06      	ldr	r3, [pc, #24]	; (20070098 <SystemInit+0x8c>)
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	461a      	mov	r2, r3
20070082:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070084:	f013 0f08 	tst.w	r3, #8
20070088:	d0fb      	beq.n	20070082 <SystemInit+0x76>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2007008a:	4a07      	ldr	r2, [pc, #28]	; (200700a8 <SystemInit+0x9c>)
2007008c:	4b07      	ldr	r3, [pc, #28]	; (200700ac <SystemInit+0xa0>)
2007008e:	601a      	str	r2, [r3, #0]
20070090:	4770      	bx	lr
20070092:	bf00      	nop
20070094:	400e0a00 	.word	0x400e0a00
20070098:	400e0600 	.word	0x400e0600
2007009c:	00370809 	.word	0x00370809
200700a0:	01370809 	.word	0x01370809
200700a4:	200d3f01 	.word	0x200d3f01
200700a8:	0501bd00 	.word	0x0501bd00
200700ac:	20070138 	.word	0x20070138

200700b0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700b0:	4b1b      	ldr	r3, [pc, #108]	; (20070120 <system_init_flash+0x70>)
200700b2:	4298      	cmp	r0, r3
200700b4:	d915      	bls.n	200700e2 <system_init_flash+0x32>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b6:	4b1b      	ldr	r3, [pc, #108]	; (20070124 <system_init_flash+0x74>)
200700b8:	4298      	cmp	r0, r3
200700ba:	d919      	bls.n	200700f0 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700bc:	4b1a      	ldr	r3, [pc, #104]	; (20070128 <system_init_flash+0x78>)
200700be:	4298      	cmp	r0, r3
200700c0:	d91e      	bls.n	20070100 <system_init_flash+0x50>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700c2:	4b1a      	ldr	r3, [pc, #104]	; (2007012c <system_init_flash+0x7c>)
200700c4:	4298      	cmp	r0, r3
200700c6:	d923      	bls.n	20070110 <system_init_flash+0x60>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700c8:	4b19      	ldr	r3, [pc, #100]	; (20070130 <system_init_flash+0x80>)
200700ca:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700cc:	bf94      	ite	ls
200700ce:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
200700d2:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
200700d6:	4a17      	ldr	r2, [pc, #92]	; (20070134 <system_init_flash+0x84>)
200700d8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
200700da:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700de:	6013      	str	r3, [r2, #0]
200700e0:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e2:	2300      	movs	r3, #0
200700e4:	4a13      	ldr	r2, [pc, #76]	; (20070134 <system_init_flash+0x84>)
200700e6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ec:	6013      	str	r3, [r2, #0]
200700ee:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f0:	f44f 7380 	mov.w	r3, #256	; 0x100
200700f4:	4a0f      	ldr	r2, [pc, #60]	; (20070134 <system_init_flash+0x84>)
200700f6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700f8:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700fc:	6013      	str	r3, [r2, #0]
200700fe:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070100:	f44f 7300 	mov.w	r3, #512	; 0x200
20070104:	4a0b      	ldr	r2, [pc, #44]	; (20070134 <system_init_flash+0x84>)
20070106:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070108:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007010c:	6013      	str	r3, [r2, #0]
2007010e:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20070110:	f44f 7340 	mov.w	r3, #768	; 0x300
20070114:	4a07      	ldr	r2, [pc, #28]	; (20070134 <system_init_flash+0x84>)
20070116:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070118:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007011c:	6013      	str	r3, [r2, #0]
2007011e:	4770      	bx	lr
20070120:	0121eabf 	.word	0x0121eabf
20070124:	02faf07f 	.word	0x02faf07f
20070128:	03d08fff 	.word	0x03d08fff
2007012c:	04c4b3ff 	.word	0x04c4b3ff
20070130:	055d4a7f 	.word	0x055d4a7f
20070134:	400e0a00 	.word	0x400e0a00

20070138 <SystemCoreClock>:
20070138:	003d0900                                ..=.

2007013c <_impure_ptr>:
2007013c:	20070140                                @.. 

20070140 <impure_data>:
20070140:	00000000 2007042c 20070494 200704fc     ....,.. ... ... 
	...
200701e8:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200701f8:	0005deec 0000000b 00000000 00000000     ................
	...

20070568 <__atexit_recursive_mutex>:
20070568:	20070bc8                                ... 

2007056c <__global_locale>:
2007056c:	00000043 00000000 00000000 00000000     C...............
	...
2007058c:	00000043 00000000 00000000 00000000     C...............
	...
200705ac:	00000043 00000000 00000000 00000000     C...............
	...
200705cc:	00000043 00000000 00000000 00000000     C...............
	...
200705ec:	00000043 00000000 00000000 00000000     C...............
	...
2007060c:	00000043 00000000 00000000 00000000     C...............
	...
2007062c:	00000043 00000000 00000000 00000000     C...............
	...
2007064c:	00083d11 000833e9 00000000 000843ac     .=...3.......C..
2007065c:	000843a8 000842e4 000842e4 000842e4     .C...B...B...B..
2007066c:	000842e4 000842e4 000842e4 000842e4     .B...B...B...B..
2007067c:	000842e4 000842e4 ffffffff ffffffff     .B...B..........
2007068c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200706b4:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200706d8 <__malloc_av_>:
	...
200706e0:	200706d8 200706d8 200706e0 200706e0     ... ... ... ... 
200706f0:	200706e8 200706e8 200706f0 200706f0     ... ... ... ... 
20070700:	200706f8 200706f8 20070700 20070700     ... ... ... ... 
20070710:	20070708 20070708 20070710 20070710     ... ... ... ... 
20070720:	20070718 20070718 20070720 20070720     ... ...  ..  .. 
20070730:	20070728 20070728 20070730 20070730     (.. (.. 0.. 0.. 
20070740:	20070738 20070738 20070740 20070740     8.. 8.. @.. @.. 
20070750:	20070748 20070748 20070750 20070750     H.. H.. P.. P.. 
20070760:	20070758 20070758 20070760 20070760     X.. X.. `.. `.. 
20070770:	20070768 20070768 20070770 20070770     h.. h.. p.. p.. 
20070780:	20070778 20070778 20070780 20070780     x.. x.. ... ... 
20070790:	20070788 20070788 20070790 20070790     ... ... ... ... 
200707a0:	20070798 20070798 200707a0 200707a0     ... ... ... ... 
200707b0:	200707a8 200707a8 200707b0 200707b0     ... ... ... ... 
200707c0:	200707b8 200707b8 200707c0 200707c0     ... ... ... ... 
200707d0:	200707c8 200707c8 200707d0 200707d0     ... ... ... ... 
200707e0:	200707d8 200707d8 200707e0 200707e0     ... ... ... ... 
200707f0:	200707e8 200707e8 200707f0 200707f0     ... ... ... ... 
20070800:	200707f8 200707f8 20070800 20070800     ... ... ... ... 
20070810:	20070808 20070808 20070810 20070810     ... ... ... ... 
20070820:	20070818 20070818 20070820 20070820     ... ...  ..  .. 
20070830:	20070828 20070828 20070830 20070830     (.. (.. 0.. 0.. 
20070840:	20070838 20070838 20070840 20070840     8.. 8.. @.. @.. 
20070850:	20070848 20070848 20070850 20070850     H.. H.. P.. P.. 
20070860:	20070858 20070858 20070860 20070860     X.. X.. `.. `.. 
20070870:	20070868 20070868 20070870 20070870     h.. h.. p.. p.. 
20070880:	20070878 20070878 20070880 20070880     x.. x.. ... ... 
20070890:	20070888 20070888 20070890 20070890     ... ... ... ... 
200708a0:	20070898 20070898 200708a0 200708a0     ... ... ... ... 
200708b0:	200708a8 200708a8 200708b0 200708b0     ... ... ... ... 
200708c0:	200708b8 200708b8 200708c0 200708c0     ... ... ... ... 
200708d0:	200708c8 200708c8 200708d0 200708d0     ... ... ... ... 
200708e0:	200708d8 200708d8 200708e0 200708e0     ... ... ... ... 
200708f0:	200708e8 200708e8 200708f0 200708f0     ... ... ... ... 
20070900:	200708f8 200708f8 20070900 20070900     ... ... ... ... 
20070910:	20070908 20070908 20070910 20070910     ... ... ... ... 
20070920:	20070918 20070918 20070920 20070920     ... ...  ..  .. 
20070930:	20070928 20070928 20070930 20070930     (.. (.. 0.. 0.. 
20070940:	20070938 20070938 20070940 20070940     8.. 8.. @.. @.. 
20070950:	20070948 20070948 20070950 20070950     H.. H.. P.. P.. 
20070960:	20070958 20070958 20070960 20070960     X.. X.. `.. `.. 
20070970:	20070968 20070968 20070970 20070970     h.. h.. p.. p.. 
20070980:	20070978 20070978 20070980 20070980     x.. x.. ... ... 
20070990:	20070988 20070988 20070990 20070990     ... ... ... ... 
200709a0:	20070998 20070998 200709a0 200709a0     ... ... ... ... 
200709b0:	200709a8 200709a8 200709b0 200709b0     ... ... ... ... 
200709c0:	200709b8 200709b8 200709c0 200709c0     ... ... ... ... 
200709d0:	200709c8 200709c8 200709d0 200709d0     ... ... ... ... 
200709e0:	200709d8 200709d8 200709e0 200709e0     ... ... ... ... 
200709f0:	200709e8 200709e8 200709f0 200709f0     ... ... ... ... 
20070a00:	200709f8 200709f8 20070a00 20070a00     ... ... ... ... 
20070a10:	20070a08 20070a08 20070a10 20070a10     ... ... ... ... 
20070a20:	20070a18 20070a18 20070a20 20070a20     ... ...  ..  .. 
20070a30:	20070a28 20070a28 20070a30 20070a30     (.. (.. 0.. 0.. 
20070a40:	20070a38 20070a38 20070a40 20070a40     8.. 8.. @.. @.. 
20070a50:	20070a48 20070a48 20070a50 20070a50     H.. H.. P.. P.. 
20070a60:	20070a58 20070a58 20070a60 20070a60     X.. X.. `.. `.. 
20070a70:	20070a68 20070a68 20070a70 20070a70     h.. h.. p.. p.. 
20070a80:	20070a78 20070a78 20070a80 20070a80     x.. x.. ... ... 
20070a90:	20070a88 20070a88 20070a90 20070a90     ... ... ... ... 
20070aa0:	20070a98 20070a98 20070aa0 20070aa0     ... ... ... ... 
20070ab0:	20070aa8 20070aa8 20070ab0 20070ab0     ... ... ... ... 
20070ac0:	20070ab8 20070ab8 20070ac0 20070ac0     ... ... ... ... 
20070ad0:	20070ac8 20070ac8 20070ad0 20070ad0     ... ... ... ... 

20070ae0 <__malloc_sbrk_base>:
20070ae0:	ffffffff                                ....

20070ae4 <__malloc_trim_threshold>:
20070ae4:	00020000                                ....
